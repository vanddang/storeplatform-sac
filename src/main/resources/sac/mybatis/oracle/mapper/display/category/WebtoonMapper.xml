<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Webtoon">
    <!-- 웹툰 상품 리스트 조회-->
    <select id="getWebtoonList" parameterType="CategoryWebtoonSacReq" resultType="ProductBasicInfo">
        SELECT  /* WebtoonMapper.xml, getWebtoonList, 홍지호, 2014-02-04 */
                LA.TOTAL_COUNT
              , LA.RNUM
              , LA.TOP_MENU_ID
              , LA.MENU_ID
              , LA.PROD_ID
              , LA.PART_PROD_ID
              , LA.META_CLSF_CD
              , LA.CONTENTS_TYPE_CD
          FROM (
                SELECT KA.*
                  FROM 
                       (
                        SELECT JA.*, ROW_NUMBER() OVER(ORDER BY JA.UPD_DT DESC, JA.PROD_NM) AS RNUM
                          FROM 
                               (
                                SELECT IA.*, COUNT(IA.PROD_ID) OVER() AS TOTAL_COUNT
                                  FROM 
                                       (
                                        SELECT ROW_NUMBER( ) OVER ( PARTITION BY D.PROD_ID ORDER BY J.UPD_DT DESC ) AS RN         
                                             , A.TOP_MENU_ID
                                             , A.MENU_ID
                                             , D.PROD_ID
                                             , I.PART_PROD_ID                                     
                                             , D.UPD_DT
                                             , D.META_CLSF_CD
                                             , D.CONTENTS_TYPE_CD
                                             , F.PROD_NM
                                          FROM TB_DP_MENU_CATEGORY      A
                                             , TB_DP_MENU_CATEGORY_PROD_MAPG B
                                             , TB_DP_PROD               D /* 채널 상품 */
                                             , UV_TB_DP_MULTIMDA_PROD   E /* 채널 상품 */
                                             , TB_DP_PROD_DESC          F
                                             , TB_DP_TENANT_PROD        G
                                             , TB_DP_PROD_RSHP          I
                                             , TB_DP_PROD               J /* 에피소드 상품 */
                                             , UV_TB_DP_MULTIMDA_PROD   K /* 에피소드 상품 */
                                         WHERE A.MENU_ID = B.MENU_ID
                                           AND B.PROD_ID = D.PROD_ID
                                           AND D.PROD_ID = E.PROD_ID
                                           AND D.PROD_ID = F.PROD_ID
                                           AND D.PROD_ID = G.PROD_ID
                                           AND G.TENANT_ID = #{tenantId}             /* header param : tenantId */
                                           AND D.PROD_ID = I.PROD_ID
                                           AND I.PROD_RSHP_CD = 'DP010802'           /* DP010802 : 채널-에피소드 상품 관계 */
                                           AND I.PART_PROD_ID = J.PROD_ID
                                           AND I.PART_PROD_ID = K.PROD_ID
                                           AND A.USE_YN = 'Y'                        /* Y : 사용 (사용여부) */
                                           AND B.USE_YN = 'Y'                        /* Y : 사용 (사용여부) */
                                           AND D.SVC_GRP_CD = 'DP000203'             /* DP000203 : 멀티미디어 */
                                           AND D.CONTENTS_TYPE_CD = 'PD002501'       /* PD002501 : 채널타입 */
                                           AND F.LANG_CD = #{langCd}                 /* 언어 코드 */
                                           AND G.PROD_STATUS_CD = 'PD000403'         /* PD000403 : 판매중 */
                                           AND G.EXPO_YN = 'Y'                       /* Y : 노출 (노출여부) */
                                           AND J.CONTENTS_TYPE_CD = 'PD002502'       /* PD002502 : 에피소드 */
                                           AND A.TOP_MENU_ID = #{topMenuId}          /* 탑메뉴ID */
                                         <if test="menuId != null and menuId != ''">
                                           AND A.MENU_ID = #{menuId}                 /* 메뉴ID */
                                         </if>
                                         <if test="menuId == null or menuId == ''">
                                           AND A.MENU_ID LIKE 'DP26%'                /* 메뉴ID */
		                                 </if>
                                         <if test="weekDayCd != null and weekDayCd != ''">
                                           AND K.SERIALLY_WKDY LIKE '%' || (SELECT cd_nm FROM tb_cm_cd WHERE cd_id = #{weekDayCd} AND LANG_CD = #{langCd} )|| '%' /* DP010101 ~DP010107  :월~토*/
					                     </if> 
                               ) IA
                                 WHERE IA.RN = 1
                               ) JA
                       ) KA
                 WHERE KA.RNUM BETWEEN #{offset} AND #{count}
               ) LA
    </select>
    
    <!-- 운영자 웹툰 상품 리스트 조회-->
    <select id="getAdminWebtoonList" parameterType="RecommendWebtoonSacReq" resultType="ProductBasicInfo">
        SELECT /* WebtoonMapper.xml, getAdminWebtoonList, SAC : 조준일 , 2014-02-10 */
               B.TENANT_ID
             , B.MENU_ID
             , B.PROD_ID
             , B.PART_PROD_ID
             , B.TOP_MENU_ID
             , B.CONTENTS_TYPE_CD
             , B.TOTAL_COUNT
          FROM (SELECT A.*
                     , COUNT(*) OVER () AS TOTAL_COUNT
                     , ROW_NUMBER() OVER(ORDER BY A.EXPO_ORD_ALWAYS_YN DESC, A.EXPO_ORD, A.EXPO_ORD_SUB) AS RNUM
                  FROM (SELECT A.TENANT_ID
                             , D.MENU_ID
                             , C.PROD_ID
                             , C.PART_PROD_ID
                             , E.TOP_MENU_ID
                             , A.EXPO_ORD_ALWAYS_YN
                             , A.EXPO_ORD
                             , A.EXPO_ORD_SUB
                             , F.CONTENTS_TYPE_CD
                             , ROW_NUMBER() OVER(PARTITION BY C.PROD_ID ORDER BY F.UPD_DT DESC) AS NO
                          FROM (SELECT LP.*
                                  FROM TB_DP_LIST LT
                                     , TB_DP_LIST_PROD LP
                                 WHERE LT.TENANT_ID = LP.TENANT_ID
                                   AND LT.LIST_ID = LP.LIST_ID
                                   AND LT.EXPO_YN = 'Y'
                                   AND LP.EXPO_YN = 'Y'
                                   AND LT.TENANT_ID = #{tenantId}
                                   AND LT.LIST_ID = #{listId}
                                   <if test="menuId != null and menuId != ''">
                                   AND LP.MENU_ID = #{menuId}
                                   </if>
                                   <if test="menuId == null or menuId == ''">
                                   AND LP.MENU_ID LIKE 'DP26%'
                                   </if>
                                   AND LP.STD_DT = TO_DATE(#{stdDt}, 'YYYYMMDDHH24MISS')
                                   AND SYSDATE BETWEEN LP.EXPO_START_DT AND LP.EXPO_END_DT
                               ) A  /* 채널 */
                             , UV_TB_DP_MULTIMDA_PROD B  /* 채널 */
                             , TB_DP_PROD_RSHP C
                             , TB_DP_MENU_CATEGORY_PROD_MAPG D
                             , TB_DP_MENU_CATEGORY E
                             , TB_DP_PROD F
                             , TB_DP_TENANT_PROD G
                             , UV_TB_DP_MULTIMDA_PROD H  /* 에피소드 */
                         WHERE A.PROD_ID = B.PROD_ID
                           AND NVL(B.EPSD_CNT, 0) > 0
                           AND B.PROD_ID = C.PROD_ID
                           AND C.PART_PROD_ID = D.PROD_ID
                           AND C.PROD_RSHP_CD ='DP010802'
                           AND D.USE_YN = 'Y'
                           AND D.MENU_ID = E.MENU_ID
                           AND E.USE_YN = 'Y'
                           AND E.TOP_MENU_ID = 'DP26'
                           AND D.PROD_ID = F.PROD_ID
                           AND F.SVC_GRP_CD = 'DP000203'
                           AND F.CONTENTS_TYPE_CD = 'PD002502'
                           AND F.PROD_ID = G.PROD_ID
                           AND G.TENANT_ID = #{tenantId}
                           AND G.PROD_STATUS_CD = 'PD000403'
                           AND G.EXPO_YN = 'Y'
                           AND C.PART_PROD_ID = H.PROD_ID
                           <if test="weekDayCd != null and weekDayCd != ''">
                           AND H.SERIALLY_WKDY LIKE CONCAT('%', CONCAT((SELECT cd_nm FROM tb_cm_cd WHERE cd_id = #{weekDayCd}), '%'))  /* DP010101 ~DP010107  :월~토*/
                           </if>
                       ) A
                 WHERE NO = 1
               ) B
         WHERE RNUM BETWEEN #{offset} AND (#{offset}+#{count}-1)
         ORDER BY RNUM
    </select>        
        
    <!-- 웹툰 회차별  채널 상품 조회-->
    <select id="selectWebtoonSeries" parameterType="RecommendWebtoonSacReq" resultType="ProductBasicInfo">
        SELECT /* WebtoonMapper.xml, selectWebtoonSeries, SAC : 이승훈 , 2014-02-13 */
            BB.MENU_ID
             , BB.PROD_ID
             , BB.PART_PROD_ID
             , BB.TOP_MENU_ID
             , BB.CONTENTS_TYPE_CD
             , BB.TOTAL_COUNT
            FROM
            (
             SELECT
                AA.*
                , COUNT(*) OVER () AS TOTAL_COUNT
                , ROWNUM AS RNUM
                FROM
                (
                    SELECT 
                         C.PART_PROD_ID
                         , C.PROD_ID
                         , D.TOP_MENU_ID
                         , D.CONTENTS_TYPE_CD
                         , A.MENU_ID
                         , D.UPD_DT
                         , F.CHAPTER
                    FROM TB_DP_MENU_CATEGORY      A
                        , TB_DP_MENU_CATEGORY_PROD_MAPG B
                        , TB_DP_PROD_RSHP C
                        , TB_DP_PROD D /* 채널 */
                        --, TB_DP_TENANT_PROD E
                        , UV_TB_DP_MULTIMDA_PROD F /* 채널 */
                    WHERE A.MENU_ID = B.MENU_ID
                    AND B.PROD_ID = D.PROD_ID
                    AND A.TOP_MENU_ID = #{menuId}
                    AND C.PROD_ID = #{channelId}
                    AND C.PROD_RSHP_CD ='DP010802'
                    AND C.PART_PROD_ID = D.PROD_ID
                    AND C.PART_PROD_ID = F.PROD_ID
                    AND D.CONTENTS_TYPE_CD = 'PD002501'
                    AND D.SVC_GRP_CD = 'DP000203'
                    --AND C.PART_PROD_ID = E.PROD_ID
                    --AND E.EXPO_YN = 'Y'
                    AND A.MENU_ID = #{menuId}
                    ORDER BY TO_NUMBER(F.CHAPTER) DESC
                 ) AA
            ) BB 
         WHERE RNUM = 1
         ORDER BY RNUM
    </select>    
    
    <!-- 웹툰 회차별 리스트 조회-->
    <select id="selectWebtoonSeriesList" parameterType="RecommendWebtoonSacReq" resultType="ProductBasicInfo">
        SELECT /* WebtoonMapper.xml, selectWebtoonSeriesList, SAC : 이승훈 , 2014-02-13 */
            BB.MENU_ID
             , BB.PROD_ID
             , BB.PART_PROD_ID
             , BB.TOP_MENU_ID
             , BB.CONTENTS_TYPE_CD
             , BB.TOTAL_COUNT
            FROM
            (
             SELECT
	            AA.*
	            , COUNT(*) OVER () AS TOTAL_COUNT
	            , ROWNUM AS RNUM
	            FROM
	            (
	                SELECT 
	                     C.PART_PROD_ID
	                     , C.PROD_ID
	                     , D.TOP_MENU_ID
	                     , D.CONTENTS_TYPE_CD
	                     , A.MENU_ID
	                     , D.UPD_DT
	                     , F.CHAPTER
	                FROM TB_DP_MENU_CATEGORY      A
	                    , TB_DP_MENU_CATEGORY_PROD_MAPG B
	                    , TB_DP_PROD_RSHP C
	                    , TB_DP_PROD D /* 채널 */
	                    --, TB_DP_TENANT_PROD E
	                    , UV_TB_DP_MULTIMDA_PROD F /* 채널 */
	                WHERE A.MENU_ID = B.MENU_ID
	                AND B.PROD_ID = D.PROD_ID
	                AND A.TOP_MENU_ID = #{menuId}
	                AND C.PROD_ID = #{channelId}
	                AND C.PROD_RSHP_CD ='DP010802'
	                AND C.PART_PROD_ID = D.PROD_ID
	                AND C.PART_PROD_ID = F.PROD_ID
	                AND D.CONTENTS_TYPE_CD = 'PD002502'
	                AND D.SVC_GRP_CD = 'DP000203'
	                --AND C.PART_PROD_ID = E.PROD_ID
	                --AND E.EXPO_YN = 'Y'
	                AND A.MENU_ID = #{menuId}
	                ORDER BY TO_NUMBER(F.CHAPTER) DESC
	             ) AA
	        ) BB 
         WHERE RNUM BETWEEN #{offset} AND (#{offset}+#{count}-1)
         ORDER BY RNUM
    </select>    
    
    <!-- 웹툰 상품 상세 조회 -->
    <select id="searchWebtoonDetail" parameterType="WebtoonDetailSacReq" resultType="WebtoonDetail">
        SELECT /* WebtoonMapper.xml, searchWebtoonDetail, SAC : 조준일 , 2014-02-19 */
               B.PROD_NM
             , K.PROD_NM AS CHNL_PROD_NM
             , B.ARTIST1_NM
             , B.PROD_BASE_DESC
             , B.PROD_DTL_DESC
             , B.UPD_DT
             , C.MENU_ID
             , E.MENU_NM
             , D.TOP_MENU_ID
             , F.MENU_NM AS TOP_MENU_NM
             , G.CHAPTER
             , G.BOOK_PAGE_CNT
             , H.PROD_ID
             , H.PART_PROD_ID
             , FC_GET_ALIAS(I.FILE_PATH) AS FILE_PATH
             , FC_GET_IMAGE(H.PROD_ID, #{imageCd}) AS MAIN_FILE_PATH
             <![CDATA[
             , NVL((CASE WHEN (J.AVG_EVLU_SCORE > 0 AND J.AVG_EVLU_SCORE < 1) THEN 1
                         WHEN J.AVG_EVLU_SCORE > 5 THEN 5
                         ELSE ROUND(J.AVG_EVLU_SCORE, 1) 
                     END), 0) AS AVG_EVLU_SCORE
             ]]>
             , J.PATICPERS_CNT
             , A.SELLER_MBR_NO
             , E.MENU_DESC
             , A.META_CLSF_CD
             , COUNT(*) OVER() AS TOTAL_COUNT
          FROM TB_DP_PROD A
             , TB_DP_PROD_DESC B
             , TB_DP_MENU_CATEGORY_PROD_MAPG C
             , TB_DP_MENU_CATEGORY D
             , TB_DP_MENU_CATEGORY_DESC E  /* MENU_ID */
             , TB_DP_MENU_CATEGORY_DESC F  /* TOP_MENU_ID */
             , UV_TB_DP_MULTIMDA_PROD G
             , TB_DP_PROD_RSHP H
             , TB_DP_SUB_CONTENTS I
             , TB_DP_TENANT_PROD_STATS J
             , TB_DP_PROD_DESC K
         WHERE A.PROD_ID = #{prodId}
           AND A.PROD_ID = B.PROD_ID
           AND B.LANG_CD = #{langCd}
           AND B.PROD_ID = C.PROD_ID
           AND C.USE_YN = 'Y'
           AND C.MENU_ID = D.MENU_ID
           AND D.USE_YN  = 'Y'
           AND D.MENU_ID = E.MENU_ID
           AND E.LANG_CD = #{langCd}
           AND D.TOP_MENU_ID = F.MENU_ID
           AND F.LANG_CD = #{langCd}
           AND C.PROD_ID = G.PROD_ID
           AND G.PROD_ID = H.PART_PROD_ID
           AND H.PART_PROD_ID = I.PROD_ID(+)
           AND H.PART_PROD_ID = J.PROD_ID
           AND J.TENANT_ID = #{tenantId}
           AND H.PROD_ID = K.PROD_ID
           AND K.LANG_CD = #{langCd}
           AND ROWNUM = 1
    </select>
    
    <select id="getWebtoonPreNext" parameterType="WebtoonDetailSacReq" resultType="String">
	    SELECT /* WebtoonMapper.xml, getWebtoonPreNext, SAC : 조준일 , 2014-02-20 */
	           PART_PROD_ID
		  FROM (SELECT B.PART_PROD_ID
		          FROM TB_DP_PROD_RSHP A
		             , TB_DP_PROD_RSHP B
		             , TB_DP_TENANT_PROD C
		             , UV_TB_DP_MULTIMDA_PROD D
		         WHERE A.PART_PROD_ID = #{prodId}
		           AND A.PROD_ID = B.PROD_ID
		           AND B.PART_PROD_ID = C.PROD_ID
		           AND C.TENANT_ID = 'S01'
		           AND C.PROD_STATUS_CD = 'PD000403'
		           AND C.PROD_ID = D.PROD_ID
		           <if test='orderedBy == "pre"'>
		           AND TO_NUMBER(REGEXP_REPLACE(D.CHAPTER, '[^[:digit:]]')) <![CDATA[ < ]]> #{chapter}
		         ORDER BY D.CHAPTER DESC
		           </if>
		           <if test='orderedBy == "next"'>
		           AND TO_NUMBER(REGEXP_REPLACE(D.CHAPTER, '[^[:digit:]]')) <![CDATA[> ]]> #{chapter}
		         ORDER BY D.CHAPTER ASC
		           </if>
		       )
		 WHERE ROWNUM = 1
    </select>
    
</mapper>
