<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="EpubDetail">

    <select id="selectProdRshp" parameterType="map" resultType="string">
		SELECT /* EpubDetailMapper.xml, selectProdRshp, SAC : 임근대 , 2014-01-28 */
			PART_PROD_ID
	  	FROM TB_DP_PROD_RSHP
		WHERE PROD_ID = #{channelId}
	</select>    
    
    <select id="selectEpubChannel" parameterType="map" resultType="EpubDetail">
		SELECT /* EpubDetailMapper.xml, selectEpubChannel, SAC : 임근대 , 2014-01-28 */
		          P.TENANT_ID, P.LANG_CD
		        , P.MENU_ID, P.MENU_NM, P2.TOP_MENU_ID, (SELECT MENU_NM FROM TB_DP_MENU_CATEGORY_DESC WHERE MENU_ID = P2.TOP_MENU_ID AND LANG_CD = P.LANG_CD AND ROWNUM = 1) AS TOP_MENU_NM
		        , P2.META_CLSF_CD, P2.CID, TP.PROD_STATUS_CD, P2.PROD_GRD_CD
		        , P2.PROD_ID, P2.REG_DT, P2.SVC_GRP_CD, MP.GENRE_CD
		        , PD.PROD_NM, PD.PROD_BASE_DESC, PD.PROD_DTL_DESC, PD.PROD_INTR_DSCR, PD.ARTIST1_NM, PD.ARTIST2_NM, PD.ARTIST3_NM
		        , MP.MGZIN_SUBSCRIP_CD, MP.SVC_START_DT
		        , P2.SVC_GRP_CD, MP.GENRE_CD
		        , MP.CHNL_COMP_NM
		        , MP.BOOK_TBCTNS
		        , MP.CHNL_CLSF_CD
		        , ( CASE WHEN MP.EPSD_CNT > 0 THEN 'Y' ELSE 'N' END ) AS SUPPORT_STORE
             	, ( CASE WHEN MP.STRM_EPSD_CNT > 0 THEN 'Y' ELSE 'N' END ) AS SUPPORT_PLAY
			    , ( CASE WHEN P2.META_CLSF_CD IN ( 'CT20', 'CT21' ) OR MP.BOOK_CLSF_CD = 'DP004302' THEN 'serial' END ) AS BOOK_TYPE
             	, ( CASE WHEN P2.META_CLSF_CD IN ( 'CT20', 'CT21' ) THEN DECODE( MP.COMPT_YN, 'Y', 'completed', 'continue' ) END ) AS BOOK_STATUS
		        , ( CASE WHEN P2.META_CLSF_CD IN ( 'CT20', 'CT21' ) THEN ( MP.EPSD_CNT + MP.STRM_EPSD_CNT ) END ) AS BOOK_COUNT
		        , NVL(STAT.PATICPERS_CNT, 0) AS PATICPERS_CNT, NVL(STAT.PRCHS_CNT, 0) AS PRCHS_CNT
		        , P2.SELLER_MBR_NO, P2.EXPO_SELLER_NM, P2.EXPO_SELLER_TELNO, P2.EXPO_SELLER_EMAIL
		         <![CDATA[
		        , NVL((CASE WHEN (STAT.AVG_EVLU_SCORE > 0 AND STAT.AVG_EVLU_SCORE < 1) THEN 1
		                  WHEN STAT.AVG_EVLU_SCORE > 5 THEN 5
		                  ELSE ROUND(STAT.AVG_EVLU_SCORE, 1) END), 0) AS AVG_EVLU_SCORE
		        , PI.FILE_PATH AS IMG_PATH, PI.FILE_NM AS IMG_NM, PI.FILE_SIZE AS IMG_SIZE
		         ]]>
		        , P.BOOK_CNT, P.BOOK_FREE_CNT, P.SERIAL_FREE_CNT
                , REGEXP_REPLACE( MP.CHAPTER, '[^[:digit:]]') AS CHAPTER
                , NVL(REGEXP_REPLACE( MP.CHAPTER, '[[:digit:], ]'), '회') AS CHAPTER_UNIT
		      FROM
		         (
				SELECT  TENANT_ID, LANG_CD, CHNL_PROD_ID, MENU_ID, MENU_NM
			              , SUM( CASE WHEN ( BOOK_CLSF_CD = 'DP004301' AND SALE_CNT > 0  ) THEN 1 ELSE 0 END ) AS BOOK_CNT
			              , SUM( CASE WHEN ( BOOK_CLSF_CD = 'DP004302' AND SALE_CNT > 0  ) THEN 1 ELSE 0 END ) AS SERIAL_CNT
			              , SUM( CASE WHEN ( BOOK_CLSF_CD = 'DP004301' AND FREE_CNT > 0 ) THEN 1 ELSE 0 END ) AS BOOK_FREE_CNT
			              , SUM( CASE WHEN ( BOOK_CLSF_CD = 'DP004302' AND FREE_CNT > 0 ) THEN 1 ELSE 0 END ) AS SERIAL_FREE_CNT
				FROM (
					SELECT G.TENANT_ID, C.LANG_CD
						, D.PROD_ID AS CHNL_PROD_ID
						, A.MENU_ID, C.MENU_NM
						, E.BOOK_CLSF_CD
						, SUM( CASE WHEN ( G.PROD_STATUS_CD = 'PD000403' AND D.USE_PERIOD_UNIT_CD = 'PD00310'/*무제한*/ ) THEN 1 ELSE 0 END ) AS SALE_CNT
						, SUM( CASE WHEN ( G.PROD_STATUS_CD = 'PD000403' AND D.USE_PERIOD_UNIT_CD = 'PD00310'/*무제한*/ AND O.PROD_AMT = 0 ) THEN 1 ELSE 0 END ) AS FREE_CNT
                      FROM TB_DP_MENU_CATEGORY_PROD_MAPG A
                        INNER JOIN TB_DP_MENU_CATEGORY B		ON A.MENU_ID = B.MENU_ID
                        INNER JOIN TB_DP_MENU_CATEGORY_DESC C	ON A.MENU_ID = C.MENU_ID
                        INNER JOIN TB_DP_PROD D 				ON A.PROD_ID = D.PROD_ID
                        INNER JOIN TB_DP_PROD_RSHP RSHP ON D.PROD_ID = RSHP.PROD_ID
                        INNER JOIN UV_TB_DP_MULTIMDA_PROD E		ON D.PROD_ID = E.PROD_ID
                        INNER JOIN TB_DP_TENANT_PROD G			ON D.PROD_ID = G.PROD_ID
                        INNER JOIN TB_DP_TENANT_PROD_PRICE O	ON D.PROD_ID = O.PROD_ID AND O.TENANT_ID = G.TENANT_ID
                        INNER JOIN TB_DP_SPRT_DEVICE K			ON RSHP.PART_PROD_ID = K.PROD_ID
					WHERE 1=1
					AND G.TENANT_ID = #{tenantId}				/* tenant ID */
					AND D.PROD_ID = #{channelId} 				/* channel ID */
					AND C.LANG_CD = #{langCd}					/* 언어 */
					AND (K.DEVICE_MODEL_CD = #{deviceModel} OR K.DEVICE_MODEL_CD = #{virtualDeviceModelNo}) 		/* 단말모델코드 */
					AND A.BASE_YN = 'Y' AND A.BASE_YN = 'Y'
					AND B.USE_YN = 'Y'                        	/* Y : 사용 (사용여부) */
					AND D.SVC_GRP_CD = 'DP000203'             	/* DP000203 : 멀티미디어 */
					AND D.CONTENTS_TYPE_CD = 'PD002501'       	/* PD002501 : 채널타입 */
					AND D.SVC_TYPE_CD = 'DP001116'				/* 서비스 타입 : 이북/코믹 */
					AND D.TOP_MENU_ID IN ('DP13', 'DP14')				/* 이북,코믹 */
					AND G.PROD_STATUS_CD IN ('PD000402', 'PD000403', 'PD000404') /* PD000402 : 판매대기 , PD000403 : 판매중, PD000404 : 판매중지 */
					AND G.EXPO_YN = 'Y'                       	/* Y : 노출 (노출여부) */
					AND SYSDATE BETWEEN O.APPLY_START_DT AND O.APPLY_END_DT
					GROUP BY G.TENANT_ID, C.LANG_CD, D.PROD_ID, A.MENU_ID, C.MENU_NM, E.BOOK_CLSF_CD
				)
		    GROUP BY TENANT_ID, LANG_CD, CHNL_PROD_ID, MENU_ID, MENU_NM
			) P
			INNER JOIN TB_DP_PROD P2 		ON P2.PROD_ID = P.CHNL_PROD_ID
			INNER JOIN UV_TB_DP_MULTIMDA_PROD MP  ON P2.PROD_ID = MP.PROD_ID
			INNER JOIN TB_DP_TENANT_PROD TP	ON P2.PROD_ID = TP.PROD_ID AND P.TENANT_ID = TP.TENANT_ID
			INNER JOIN TB_DP_TENANT_PROD_PRICE TPP ON P2.PROD_ID = TPP.PROD_ID AND P.TENANT_ID = TPP.TENANT_ID
			INNER JOIN TB_DP_PROD_DESC PD		ON P2.PROD_ID = PD.PROD_ID AND P.LANG_CD = PD.LANG_CD
			LEFT OUTER JOIN TB_DP_PROD_IMG PI 		ON PI.PROD_ID = P2.PROD_ID AND PI.EXPO_ORD = '1' AND PI.IMG_CD = #{representImgCd}
			LEFT OUTER JOIN TB_DP_TENANT_PROD_STATS STAT ON STAT.PROD_ID = P2.PROD_ID AND P.TENANT_ID = STAT.TENANT_ID
		WHERE 1=1
		 AND SYSDATE BETWEEN TPP.APPLY_START_DT AND TPP.APPLY_END_DT
		 AND ROWNUM = 1
    </select>
    
	
    <select id="selectEpubSubscription" parameterType="map" resultType="MgzinSubscription">
		SELECT /* EpubDetailMapper.xml, selectEpubSubscription, SAC : 임근대 , 2014-01-28 */
			   EPI.MGZIN_SUBSCRIP_CD
			 , P.USE_PERIOD
			 , P.USE_PERIOD_UNIT_CD
			 , PRC.CHNL_PERIOD_AMT
			 , PRC.DC_AMT
		  FROM TB_DP_PROD P
		    INNER JOIN UV_TB_DP_MULTIMDA_PROD EPI       ON P.PROD_ID = EPI.PROD_ID
		    INNER JOIN TB_DP_TENANT_PROD_PRICE PRC      ON P.PROD_ID = PRC.PROD_ID
		 WHERE 1=1
		   AND PRC.TENANT_ID = #{tenantId}
		   AND P.PROD_ID = #{channelId}
		   AND EPI.CHNL_CLSF_CD = 'DP001401'
		   AND SYSDATE BETWEEN PRC.APPLY_START_DT AND PRC.APPLY_END_DT 
		 ORDER BY EPI.MGZIN_TYPE_CD, TO_NUMBER( P.USE_PERIOD )
	</select>
	
    <select id="selectEpubSeries" parameterType="map" resultType="EpubDetail">
			SELECT /* EpubDetailMapper.xml, selectEpubSeries, SAC : 임근대 , 2014-01-28 */
			      T4.TOTAL_COUNT
			      , T4.TENANT_ID, T4.LANG_CD, T4.CID, T4.PROD_STATUS_CD
			      , T4.MENU_ID, T4.MENU_NM, T4.MENU_DESC, T4.TOP_MENU_ID
			      , (SELECT MENU_NM FROM TB_DP_MENU_CATEGORY_DESC WHERE MENU_ID = T4.TOP_MENU_ID AND LANG_CD = T4.LANG_CD AND ROWNUM = 1) AS TOP_MENU_NM
			      , T4.META_CLSF_CD
			      , T4.PROD_ID, T4.CHNL_PROD_ID, T4.REG_ID, T4.REG_DT
			      , T4.PROD_NM, T4.PROD_BASE_DESC, T4.PROD_DTL_DESC, T4.PROD_INTR_DSCR, T4.ARTIST1_NM, T4.ARTIST2_NM, T4.ARTIST3_NM
			      , T4.PROD_GRD_CD
			      , REGEXP_REPLACE( T4.CHAPTER, '[^[:digit:]]') AS CHAPTER
			      , NVL(REGEXP_REPLACE( T4.CHAPTER, '[[:digit:], ]'), '회') AS CHAPTER_UNIT
			      , DECODE( T4.USE_PERIOD, 'PD00310', T4.PROD_ID ) AS STORE_PROD_ID
			      , DECODE( T4.USE_PERIOD, 'PD00310', NULL, T4.PROD_ID ) AS PLAY_PROD_ID
			      , DECODE( T4.USE_PERIOD, 'PD00310', T4.PROD_AMT ) AS STORE_PROD_AMT
			      , DECODE( T4.USE_PERIOD, 'PD00310', NULL, T4.PROD_AMT ) AS PLAY_PROD_AMT
			      , DECODE( T4.USE_PERIOD, 'PD00310', T4.PROD_NET_AMT ) AS STORE_PROD_NET_AMT
			      , DECODE( T4.USE_PERIOD, 'PD00310', NULL, T4.PROD_NET_AMT ) AS PLAY_PROD_NET_AMT
			      , DECODE( T4.USE_PERIOD, 'PD00310', T4.DRM_YN ) AS STORE_DRM_YN
			      , DECODE( T4.USE_PERIOD, 'PD00310', NULL, T4.DRM_YN ) AS PLAY_DRM_YN
			      , DECODE( T4.USE_PERIOD, 'PD00310', T4.PROD_STATUS_CD ) AS STORE_PROD_STATUS_CD
			      , DECODE( T4.USE_PERIOD, 'PD00310', NULL, T4.PROD_STATUS_CD ) AS PLAY_PROD_STATUS_CD
			      , DECODE( T4.USE_PERIOD, 'PD00310', T4.USE_PERIOD_UNIT_CD ) AS STORE_USE_PERIOD_UNIT_CD
			      , DECODE( T4.USE_PERIOD, 'PD00310', NULL, T4.USE_PERIOD_UNIT_CD ) AS PLAY_USE_PERIOD_UNIT_CD
			      , ( CASE WHEN T4.EPSD_CNT > 0 THEN 'Y' ELSE 'N' END ) AS SUPPORT_STORE
			      , ( CASE WHEN T4.STRM_EPSD_CNT > 0 THEN 'Y' ELSE 'N' END ) AS SUPPORT_PLAY
			      , ( CASE WHEN T4.META_CLSF_CD IN ( 'CT20', 'CT21' ) THEN DECODE( T4.COMPT_YN, 'Y', 'completed', 'continue' ) END ) AS BOOK_STATUS
			      , ( CASE WHEN T4.META_CLSF_CD IN ( 'CT20', 'CT21' ) OR T4.BOOK_CLSF_CD = 'DP004302' THEN 'serial' END ) AS BOOK_TYPE
			      , ( CASE WHEN T4.META_CLSF_CD IN ( 'CT20', 'CT21' ) THEN ( T4.EPSD_CNT + T4.STRM_EPSD_CNT ) END ) AS BOOK_COUNT
			      , CASE WHEN T4.USE_PERIOD_UNIT_CD != 'PD00310' THEN CONCAT(USE_PERIOD, (SELECT CD_NM FROM TB_CM_CD WHERE CD_ID = T4.USE_PERIOD_UNIT_CD AND LANG_CD = T4.LANG_CD)) ELSE '' END AS USE_PERIOD_NM
			      , T4.BOOK_CLSF_CD, T4.PROD_AMT
			      , T4.USE_PERIOD, T4.USE_PERIOD_UNIT_CD
			      , T4.SVC_START_DT , NVL( T4.BOOK_PAGE_CNT, 0 ) AS BOOK_PAGE_CNT, T4.DRM_YN, T4.COMPT_YN, T4.ISSUE_DAY
			      , T4.SUB_CONTENTS_ID, T4.FILE_SIZE, T4.PROD_VER
			      , PI.FILE_PATH  AS IMG_PATH, PI.FILE_NM AS IMG_NM, PI.FILE_SIZE AS IMG_SIZE
			FROM (
			  SELECT COUNT(*) OVER () TOTAL_COUNT, T3.*
			  FROM (
			    SELECT T2.*, ROWNUM AS RNUM
			    FROM 
			      (SELECT T1.*
			        FROM 
			        (SELECT 
			                G.TENANT_ID, C.LANG_CD, J.CID, G.PROD_STATUS_CD
				          , A.MENU_ID , C.MENU_NM, C.MENU_DESC, J.TOP_MENU_ID, J.META_CLSF_CD
				          , J.PROD_ID, D.PROD_ID AS CHNL_PROD_ID, J.REG_ID, J.REG_DT
				          , Q.PROD_NM, F.PROD_BASE_DESC, F.PROD_DTL_DESC, F.PROD_INTR_DSCR, F.ARTIST1_NM, F.ARTIST2_NM, F.ARTIST3_NM
				          , J.PROD_GRD_CD
				          , O.PROD_AMT, O.PROD_NET_AMT
				          , J.USE_PERIOD, J.USE_PERIOD_UNIT_CD, J.DRM_YN
				          , E.COMPT_YN, E.EPSD_CNT, E.STRM_EPSD_CNT, P.BOOK_CLSF_CD
				          , P.SVC_START_DT, P.BOOK_PAGE_CNT, P.ISSUE_DAY, P.CHAPTER
				          , M.SUB_CONTENTS_ID, M.FILE_SIZE, M.PROD_VER
				          , ROW_NUMBER() OVER ( PARTITION BY J.PROD_ID ORDER BY M.PROD_VER DESC ) AS RN
			        FROM TB_DP_MENU_CATEGORY_PROD_MAPG A
			              INNER JOIN TB_DP_MENU_CATEGORY B		ON A.MENU_ID = B.MENU_ID
			              INNER JOIN TB_DP_MENU_CATEGORY_DESC C	ON A.MENU_ID = C.MENU_ID
			              INNER JOIN TB_DP_PROD D 				ON A.PROD_ID = D.PROD_ID
			              INNER JOIN UV_TB_DP_MULTIMDA_PROD E		ON D.PROD_ID = E.PROD_ID
			              INNER JOIN TB_DP_PROD_DESC F			ON D.PROD_ID = F.PROD_ID AND F.LANG_CD = C.LANG_CD
			              INNER JOIN TB_DP_TENANT_PROD G			ON D.PROD_ID = G.PROD_ID
			              INNER JOIN TB_DP_TENANT_PROD_PRICE O	ON D.PROD_ID = O.PROD_ID AND O.TENANT_ID = G.TENANT_ID
			              INNER JOIN TB_DP_PROD_RSHP I			ON D.PROD_ID = I.PROD_ID
			              INNER JOIN TB_DP_PROD J				ON I.PART_PROD_ID = J.PROD_ID
			              INNER JOIN TB_DP_SUB_CONTENTS M		ON M.PROD_ID = J.PROD_ID
			              INNER JOIN TB_DP_TENANT_PROD N		ON N.PROD_ID = J.PROD_ID AND N.TENANT_ID = G.TENANT_ID
			              INNER JOIN TB_DP_TENANT_PROD_PRICE O	 ON O.PROD_ID  = J.PROD_ID AND O.TENANT_ID = G.TENANT_ID
			              INNER JOIN UV_TB_DP_MULTIMDA_PROD P	ON P.PROD_ID = J.PROD_ID
			              INNER JOIN TB_DP_PROD_DESC Q			ON Q.PROD_ID = J.PROD_ID AND C.LANG_CD = Q.LANG_CD
			              INNER JOIN TB_DP_SPRT_DEVICE K		ON I.PART_PROD_ID = K.PROD_ID
			        WHERE 1=1
			          AND G.TENANT_ID = #{tenantId}				/* tenant ID */
			          AND D.PROD_ID = #{channelId} 				/* channel ID */
			          AND C.LANG_CD = #{langCd}					/* 언어 */
			          AND (K.DEVICE_MODEL_CD = #{deviceModel} OR K.DEVICE_MODEL_CD = #{virtualDeviceModelNo})
			          AND B.USE_YN = 'Y'                        	/* Y : 사용 (사용여부) */
			          AND D.SVC_GRP_CD = 'DP000203'             	/* DP000201 : 멀티미디어 */
			          AND D.CONTENTS_TYPE_CD = 'PD002501'       	/* PD002501 : 채널타입 */
			          AND D.SVC_TYPE_CD = 'DP001116'				/* 서비스 타입 : 이북/코믹 */
			          AND D.TOP_MENU_ID IN ('DP13', 'DP14')				/* 이북 */
			          AND G.PROD_STATUS_CD IN ('PD000402', 'PD000403', 'PD000404') /* PD000402 : 판매대기 , PD000403 : 판매중, PD000404 : 판매중지 */
			          AND G.EXPO_YN = 'Y'                       	/* Y : 노출 (노출여부) */ 
			          AND SYSDATE BETWEEN O.APPLY_START_DT AND O.APPLY_END_DT
			          AND J.SVC_GRP_CD = 'DP000203'       		/* 서비스그룹코드 : 멀티미디어 */  
			          AND J.CONTENTS_TYPE_CD = 'PD002502'       /* 컨텐츠 타입코드 : (PD002502:에피소드타입) */
			          AND J.TOP_MENU_ID IN ('DP13', 'DP14')				/* 이북, 코믹 */
			          AND M.SALE_YN ='Y'
			          AND N.PROD_STATUS_CD IN ('PD000403', 'PD000404', 'PD000409') /* PD000403 : 판매중, PD000404 : 판매중지, PD000409 : 판매불가-다운허용 */
			          AND N.EXPO_YN = 'Y'                       /* Y : 노출 (노출여부) */                                         
			          AND SYSDATE BETWEEN O.APPLY_START_DT AND O.APPLY_END_DT
					  <if test="bookTypeCd != null and bookTypeCd !=''"><!-- 단행/연재/잡지 -->
					  AND P.BOOK_CLSF_CD = #{bookTypeCd}
                      </if>
                      <if test="filteredBy == 'chapter'">
                      AND TO_NUMBER( REGEXP_REPLACE( NVL( P.CHAPTER, '99999' ), '[^[:digit:]]') ) > #{chapter}
                      </if>
					  <if test="orderedBy == 'nonPayment'">
					  <if test="paymentProdIdList !=null and paymentProdIdList.size() > 0">
					  AND J.PROD_ID NOT IN  
						<foreach collection="paymentProdIdList" item="item" index="index" open="(" separator="," close=")">
						#{item}
						</foreach>
					  </if>
					  </if>
			      ) T1
				  <if test="orderedBy == 'recent'">
				  ORDER BY T1.CHAPTER DESC
                  </if>
                  <if test="orderedBy == 'regDate'">
                  ORDER BY T1.CHAPTER ASC
                  </if>
			    ) T2
			  ) T3
			  WHERE RNUM BETWEEN #{offset} AND (#{offset}+#{count}-1)
			) T4
			LEFT OUTER JOIN TB_DP_PROD_IMG PI
				ON PI.PROD_ID = T4.PROD_ID AND PI.EXPO_ORD = '1' 
				AND PI.IMG_CD = (CASE WHEN T4.TOP_MENU_ID = 'DP14' THEN #{comicEpisodeRepresentImgCd} ELSE #{representImgCd} END)
	</select>
    
</mapper>
