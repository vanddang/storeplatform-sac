<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="EpubDetail">

    <select id="selectProdRshp" parameterType="map" resultType="string">
		SELECT /* EpubDetailMapper.xml, selectProdRshp, SAC : 임근대 , 2014-01-28 */
			A.PART_PROD_ID
	  	FROM TB_DP_PROD_RSHP A, TB_DP_PROD B
		WHERE A.PROD_ID = #{channelId}
      	  AND A.PART_PROD_ID = B.PROD_ID
          AND B.SVC_GRP_CD = 'DP000203'  AND B.CONTENTS_TYPE_CD = 'PD002502' AND B.SVC_TYPE_CD = 'DP001116'
	</select>    
	
    <select id="selectContentIdListByEpisodeIdList" parameterType="map" resultType="string">
		SELECT /* EpubDetailMapper.xml, selectContentIdListByEpisodeIdList, SAC : 임근대 , 2014-10-23 */
				DISTINCT CID
		FROM TB_DP_PROD
		WHERE PROD_ID IN
		<foreach collection="prodIdList" item="item" index="index" open="(" separator="," close=")">
			#{item}
	  	</foreach>
	</select>
	
    
	<select id="selectEbookSourceList" parameterType="map" resultType="ProductImage">
		SELECT /* EpubDetailMapper.xml, selectEbookSourceList, SAC : 임근대 , 2014-01-28 */
           FILE_PATH, FILE_NM, FILE_SIZE, EXPO_ORD
      	FROM (  
		      SELECT A.*
		          , ROW_NUMBER() OVER ( PARTITION BY IMG_CD_SEQ ORDER BY EXPO_ORD  )  AS RN
		        FROM (
		        SELECT
		          FILE_PATH, FILE_NM, FILE_SIZE, EXPO_ORD
		        , DECODE( IMG_CD, 'DP000187', 1, 'DP000188', 2, 'DP000189', 3 ) AS IMG_CD_SEQ
		        FROM TB_DP_PROD_IMG
		        WHERE PROD_ID = #{channelId}
		          AND LANG_CD = #{langCd}
		          AND IMG_CD IN ( 'DP000187', 'DP000188', 'DP000189' )
		        UNION ALL
		        SELECT
		          FILE_PATH, FILE_NM, FILE_SIZE, EXPO_ORD
		        , DECODE( IMG_CD, 'DP000154', 1, 'DP000155', 2, 'DP000156', 3 ) AS IMG_CD_SEQ
		        FROM TB_DP_PROD_IMG
		        WHERE PROD_ID = #{channelId}
		          AND LANG_CD = #{langCd}
		          AND IMG_CD IN ( 'DP000154', 'DP000155', 'DP000156' )
		      ) A
		    )
		  WHERE RN = 1
	</select>
    
	<select id="selectComicSourceList" parameterType="map" resultType="ProductImage">
		SELECT /* EpubDetailMapper.xml, selectComicSourceList, SAC : 임근대 , 2014-01-28 */
           FILE_PATH, FILE_NM, FILE_SIZE, EXPO_ORD
      	FROM (  
		      SELECT A.*
		          , ROW_NUMBER() OVER ( PARTITION BY IMG_CD_SEQ ORDER BY EXPO_ORD  )  AS RN
		        FROM (
		        SELECT
		          FILE_PATH, FILE_NM, FILE_SIZE, EXPO_ORD
		        , DECODE( IMG_CD, 'DP000187', 1, 'DP000188', 2, 'DP000189', 3 ) AS IMG_CD_SEQ
		        FROM TB_DP_PROD_IMG
		        WHERE PROD_ID = #{channelId}
		          AND LANG_CD = #{langCd}
		          AND IMG_CD IN ( 'DP000187', 'DP000188', 'DP000189' )
		        UNION ALL
		        SELECT
		          FILE_PATH, FILE_NM, FILE_SIZE, EXPO_ORD
		        , DECODE( IMG_CD, 'DP000154', 1, 'DP000155', 2, 'DP000156', 3 ) AS IMG_CD_SEQ
		        FROM TB_DP_PROD_IMG
		        WHERE PROD_ID = #{channelId}
		          AND LANG_CD = #{langCd}
		          AND IMG_CD IN ( 'DP000154', 'DP000155', 'DP000156' )
		      ) A
		    )
		  WHERE RN = 1
	</select>
    
    <select id="selectEpubChannel" parameterType="map" resultType="EpubDetail">
		SELECT /* EpubDetailMapper.xml, selectEpubChannel, SAC : 임근대 , 2014-01-28 */
		          P.TENANT_ID, P.LANG_CD
		        , P.MENU_ID, P.MENU_NM, P2.TOP_MENU_ID, (SELECT MENU_NM FROM TB_DP_MENU_CATEGORY_DESC WHERE MENU_ID = P2.TOP_MENU_ID AND LANG_CD = P.LANG_CD AND ROWNUM = 1) AS TOP_MENU_NM
		        , P2.META_CLSF_CD, P2.CID, TP.PROD_STATUS_CD, P2.PROD_GRD_CD
		        , P2.PROD_ID, P2.REG_DT, P2.SVC_GRP_CD, P2.LAST_DEPLOY_DT, NVL(P2.PLUS19_YN, 'N') AS PLUS19_YN	        
		        , PD.PROD_NM, PD.PROD_BASE_DESC, PD.PROD_DTL_DESC, PREFIX.PROD_INTR_DSCR, PD.ARTIST1_NM, PD.ARTIST2_NM, PD.ARTIST3_NM
		        , PREFIX.PREFIX_TITLE AS PREFIX_TITLE
              	, PREFIX.PREFIX_TITLE AS VOD_TITL_NM
              	, (SELECT /*+ INDEX_JOIN(TB_CM_CD) */
                        CASE WHEN (PREFIX.BADGE_CD IS NOT NULL AND PREFIX.BADGE_OPT_TEXT IS NULL) THEN  Y.CD_NM  
                             WHEN (PREFIX.BADGE_CD IS NOT NULL AND PREFIX.BADGE_OPT_TEXT IS NOT NULL) THEN  PREFIX.BADGE_OPT_TEXT || Y.ADD_FIELD_01 ||' '|| Y.CD_NM 
                             ELSE NULL END
                   FROM TB_CM_CD Y
                  WHERE PREFIX.BADGE_CD = Y.CD_ID(+)
                    AND Y.LANG_CD(+) = P.LANG_CD) AS BADGE_OPT_TEXT
              	, PREFIX.BADGE_CD  
		        , MP.ISSUE_DAY
		        , MP.MGZIN_SUBSCRIP_CD, MP.SVC_START_DT
		        , MP.CHNL_COMP_NM
		        , MP.BOOK_TBCTNS
		        , MP.CHNL_CLSF_CD, MP.BOOK_CLSF_CD
		        , ( CASE WHEN MP.EPSD_CNT > 0 THEN 'Y' ELSE 'N' END ) AS SUPPORT_STORE
             	, ( CASE WHEN MP.STRM_EPSD_CNT > 0 THEN 'Y' ELSE 'N' END ) AS SUPPORT_PLAY
			    , ( CASE WHEN P2.META_CLSF_CD IN ( 'CT20', 'CT21' ) OR MP.BOOK_CLSF_CD = 'DP004302' THEN 'serial' END ) AS BOOK_TYPE
             	, ( CASE WHEN MP.COMPT_YN = 'Y' THEN 'completed' ELSE 'continue' END) AS BOOK_STATUS
		        , NVL(STAT.PATICPERS_CNT, 0) AS PATICPERS_CNT, NVL(STAT.PRCHS_CNT, 0) AS PRCHS_CNT
		        , P2.SELLER_MBR_NO, P2.EXPO_SELLER_NM, P2.EXPO_SELLER_TELNO, P2.EXPO_SELLER_EMAIL
		         <![CDATA[
		        , NVL((CASE WHEN (STAT.AVG_EVLU_SCORE > 0 AND STAT.AVG_EVLU_SCORE < 1) THEN 1
		                  WHEN STAT.AVG_EVLU_SCORE > 5 THEN 5
		                  ELSE ROUND(STAT.AVG_EVLU_SCORE, 1) END), 0) AS AVG_EVLU_SCORE
		        , PI.FILE_PATH AS IMG_PATH, PI.FILE_NM AS IMG_NM, PI.FILE_SIZE AS IMG_SIZE
		         ]]>
		        , P.BOOK_CNT, P.SERIAL_CNT, P.MAGAZINE_CNT, P.BOOK_FREE_CNT, P.SERIAL_FREE_CNT, P.MAGAZINE_FREE_CNT
            	, TPP.CHNL_PERIOD_AMT AS PLAY_PROD_AMT, TPP.CHNL_UNLMT_AMT AS STORE_PROD_AMT
            	, CASE WHEN (TPP.CHNL_UNLMT_AMT >= 0  AND EPSD_CNT > 0) THEN CHNL_UNLMT_AMT
                    ELSE NVL(TPP.CHNL_PERIOD_AMT, 0) END AS PROD_AMT /* 채널 대표 가격 */
                , MP.SAMPL_URL
			  	<if test="userKey != null">  
			  	, (CASE WHEN ML.STATS_KEY IS NOT NULL THEN 'Y' ELSE 'N' END) AS LIKE_YN
              	</if>
              	, NVL(MP.VERTICAL_YN, 'N') AS VERTICAL_YN
		      FROM
		         (
	              SELECT  TENANT_ID, LANG_CD, CHNL_PROD_ID, MENU_ID, MENU_NM
	                    , SUM( CASE WHEN BOOK_CLSF_CD = 'DP004301' AND SALE_CNT > 0 THEN 1 ELSE 0 END ) AS BOOK_CNT
	                    , SUM( CASE WHEN BOOK_CLSF_CD = 'DP004302' AND SALE_CNT > 0 THEN 1 ELSE 0 END ) AS SERIAL_CNT
	                    , SUM( CASE WHEN BOOK_CLSF_CD = 'DP004303' AND SALE_CNT > 0 THEN 1 ELSE 0 END ) AS MAGAZINE_CNT
	                    , SUM( CASE WHEN BOOK_CLSF_CD = 'DP004301' AND FREE_CNT > 0 THEN 1 ELSE 0 END ) AS BOOK_FREE_CNT
	                    , SUM( CASE WHEN BOOK_CLSF_CD = 'DP004302' AND FREE_CNT > 0 THEN 1 ELSE 0 END ) AS SERIAL_FREE_CNT
	                    , SUM( CASE WHEN BOOK_CLSF_CD = 'DP004303' AND FREE_CNT > 0 THEN 1 ELSE 0 END ) AS MAGAZINE_FREE_CNT
	              FROM (
	              
	              
	                  SELECT G.TENANT_ID, C.LANG_CD
	                      , D.PROD_ID AS CHNL_PROD_ID
	                      , A.MENU_ID, C.MENU_NM
	                      , EP.BOOK_CLSF_CD
	                      , EP.CHAPTER
	                      , SUM( CASE WHEN ( CTP.PROD_STATUS_CD = 'PD000403' ) THEN 1 ELSE 0 END ) AS SALE_CNT
	                      , SUM( CASE WHEN ( CTP.PROD_STATUS_CD = 'PD000403' AND CTPR.PROD_AMT = 0 ) THEN 1 ELSE 0 END ) AS FREE_CNT
	                  FROM TB_DP_MENU_CATEGORY_PROD_MAPG A
	                      , TB_DP_MENU_CATEGORY B
	                      , TB_DP_MENU_CATEGORY_DESC C
	                      , TB_DP_PROD D
	                      , TB_DP_TENANT_PROD G
	                      , TB_DP_TENANT_PROD_PRICE O
	                      , TB_DP_SPRT_DEVICE K
	                      , TB_CM_DEVICE CD
						  , TB_DP_PROD_RSHP RSHP
                          , TB_DP_PROD CPD
                          , TB_DP_EBOOK_PROD EP
                          , TB_DP_TENANT_PROD CTP
                          , TB_DP_TENANT_PROD_PRICE CTPR
	                  WHERE A.BASE_YN = 'Y' AND A.BASE_YN = 'Y'
	                    AND A.MENU_ID = B.MENU_ID AND B.USE_YN = 'Y'
	                    AND A.MENU_ID = C.MENU_ID
	                    AND A.PROD_ID = D.PROD_ID
	                    AND D.PROD_ID = G.PROD_ID
	                    AND D.PROD_ID = O.PROD_ID AND O.TENANT_ID = G.TENANT_ID
	                    AND G.TENANT_ID = #{tenantId}
	                    AND D.PROD_ID = #{channelId}
	                    AND C.LANG_CD = #{langCd}
	                    AND D.SVC_GRP_CD = 'DP000203' AND D.CONTENTS_TYPE_CD = 'PD002501' AND D.SVC_TYPE_CD = 'DP001116'
						<choose>
		                <when test='includeProdStopStatus != null and includeProdStopStatus == "Y"'>
		                AND G.PROD_STATUS_CD IN ('PD000403', 'PD000404', 'PD000409')
		                AND CTP.PROD_STATUS_CD IN ('PD000403', 'PD000404', 'PD000409')
		                </when>
		                <otherwise>
		                AND G.PROD_STATUS_CD = 'PD000403'
		                AND CTP.PROD_STATUS_CD = 'PD000403'
		                </otherwise>
		                </choose>
	                    AND G.EXPO_YN = 'Y'
	                    AND SYSDATE BETWEEN O.APPLY_START_DT AND O.APPLY_END_DT
						AND RSHP.PROD_ID = D.PROD_ID
                      	AND RSHP.PART_PROD_ID = CPD.PROD_ID
						AND CPD.PROD_ID = K.PROD_ID AND (K.DEVICE_MODEL_CD = #{deviceModel} OR K.DEVICE_MODEL_CD = #{virtualDeviceModelNo})
						AND CD.DEVICE_MODEL_CD = #{deviceModel} AND CD.USE_YN = 'Y'
                      	AND CPD.SVC_GRP_CD = 'DP000203' AND CPD.CONTENTS_TYPE_CD = 'PD002502' AND CPD.SVC_TYPE_CD = 'DP001116'
                      	AND CPD.PROD_ID = CTP.PROD_ID AND CTP.TENANT_ID = G.TENANT_ID AND CTP.EXPO_YN = 'Y'
                      	AND CPD.PROD_ID = CTPR.PROD_ID AND CTPR.TENANT_ID = CTP.TENANT_ID AND SYSDATE BETWEEN CTPR.APPLY_START_DT AND CTPR.APPLY_END_DT
                      	AND CPD.PROD_ID = EP.PROD_ID
	                    GROUP BY G.TENANT_ID, C.LANG_CD, D.PROD_ID, A.MENU_ID, C.MENU_NM, EP.BOOK_CLSF_CD, EP.CHAPTER, CPD.CID
				) GROUP BY TENANT_ID, LANG_CD, CHNL_PROD_ID, MENU_ID, MENU_NM
			) P
			, TB_DP_PROD P2 
			, TB_DP_EBOOK_PROD MP
			, TB_DP_TENANT_PROD TP
			, TB_DP_TENANT_PROD_PRICE TPP
			, TB_DP_PROD_DESC PD
			, TB_DP_PROD_IMG PI
			, TB_DP_TENANT_PROD_STATS STAT
			<if test="userKey != null">
			,TB_DP_SOCIAL_STATS_MBR_LIKE ML
			</if>
			, TB_DP_PROD_PREFIX PREFIX
		WHERE P2.PROD_ID = P.CHNL_PROD_ID
	      AND P2.PROD_ID = MP.PROD_ID
	      AND P2.PROD_ID = TP.PROD_ID AND P.TENANT_ID = TP.TENANT_ID
	      AND P2.PROD_ID = PREFIX.PROD_ID(+)
		  AND SYSDATE BETWEEN TPP.APPLY_START_DT AND TPP.APPLY_END_DT
	      AND P2.PROD_ID = TPP.PROD_ID AND P.TENANT_ID = TPP.TENANT_ID
	      AND P2.PROD_ID = PD.PROD_ID AND P.LANG_CD = PD.LANG_CD
	      AND P.CHNL_PROD_ID = PI.PROD_ID(+) AND P.LANG_CD = PI.LANG_CD(+) AND PI.EXPO_ORD(+) = 1 AND PI.IMG_CD(+) = #{representImgCd}
	      AND P.CHNL_PROD_ID = STAT.PROD_ID(+) AND P.TENANT_ID = STAT.TENANT_ID(+)
		  <if test="userKey != null">   
  		  AND ML.TENANT_ID(+) = P.TENANT_ID
		  AND ML.STATS_KEY(+) = P.CHNL_PROD_ID
		  AND ML.USER_KEY(+) = #{userKey}
		  AND ML.STATS_CLSF(+) = 'DP01210002'
		  </if>
	      AND ROWNUM = 1
    </select>
    
	
    <select id="selectEpubSubscription" parameterType="map" resultType="MgzinSubscription">
		SELECT /* EpubDetailMapper.xml, selectEpubSubscription, SAC : 임근대 , 2014-01-28 */
			   EPI.MGZIN_SUBSCRIP_CD
			 , UP.USE_PERIOD
			 , UP.USE_PERIOD_UNIT_CD
			 , PRC.CHNL_PERIOD_AMT
			 , PRC.DC_AMT
		  FROM TB_DP_PROD P
		    	, TB_DP_EBOOK_PROD EPI
		    	, TB_DP_TENANT_PROD_PRICE PRC
		    	, TB_DP_USE_POLICY UP
		 WHERE P.PROD_ID = EPI.PROD_ID
		   AND P.PROD_ID = PRC.PROD_ID
		   AND P.USE_POLICY_ID = UP.USE_POLICY_ID(+)
		   AND PRC.TENANT_ID = #{tenantId}
		   AND P.PROD_ID = #{channelId}
		   AND EPI.CHNL_CLSF_CD = 'DP001401'
		   AND SYSDATE BETWEEN PRC.APPLY_START_DT AND PRC.APPLY_END_DT 
		 ORDER BY EPI.MGZIN_TYPE_CD, TO_NUMBER( P.USE_PERIOD )
	</select>
	
    <select id="selectEpubSeries" parameterType="map" resultType="EpubDetail">
			SELECT /* EpubDetailMapper.xml, selectEpubSeries, SAC : 임근대 , 2014-03-21 */
			      T.TOTAL_COUNT
			    , T.TENANT_ID, T.LANG_CD, T.CID
			    , T.MENU_ID, MCD.MENU_NM, MCD.MENU_DESC
			    , T.TOP_MENU_ID , (SELECT MENU_NM FROM TB_DP_MENU_CATEGORY_DESC WHERE MENU_ID = T.TOP_MENU_ID AND LANG_CD = T.LANG_CD AND ROWNUM = 1) AS TOP_MENU_NM
			    , T.META_CLSF_CD
			    , T.PROD_GRD_CD
			    , T.CHNL_PROD_ID
			    , T.PROD_NM, T.PROD_BASE_DESC, T.PROD_DTL_DESC, T.PROD_INTR_DSCR
			    , T.ARTIST1_NM, T.ARTIST2_NM, T.ARTIST3_NM
			    , T.BOOK_CLSF_CD, T.CHAPTER, T.SAMPL_URL
			    , ( CASE WHEN T.META_CLSF_CD IN ( 'CT20', 'CT21' ) THEN DECODE( T.COMPT_YN, 'Y', 'completed', 'continue' ) END ) AS BOOK_STATUS
			    , T.SVC_START_DT , NVL( T.BOOK_PAGE_CNT, 0 ) AS BOOK_PAGE_CNT, T.COMPT_YN, T.ISSUE_DAY
			    , T.SUB_CONTENTS_ID, T.FILE_SIZE, T.PROD_VER
			    , T.REG_ID, T.REG_DT, T.LAST_DEPLOY_DT, T.VERTICAL_YN
          		, ( CASE WHEN STORE_PROD_ID is not null THEN 'Y' ELSE 'N' END ) AS SUPPORT_STORE
          		, ( CASE WHEN PLAY_PROD_ID is not null THEN 'Y' ELSE 'N' END ) AS SUPPORT_PLAY
			    , STORE_PROD_ID, STORE_PROD_AMT, STORE_PROD_NET_AMT, STORE_DRM_YN, STORE_PROD_STATUS_CD, STORE_USE_PERIOD, STORE_USE_PERIOD_UNIT_CD
			    , PLAY_PROD_ID, PLAY_PROD_AMT, PLAY_PROD_NET_AMT, PLAY_DRM_YN, PLAY_PROD_STATUS_CD, PLAY_USE_PERIOD, PLAY_USE_PERIOD_UNIT_CD
			    , (SELECT CD_NM FROM TB_CM_CD WHERE CD_ID = T.STORE_USE_PERIOD_UNIT_CD AND LANG_CD = T.LANG_CD) AS STORE_USE_PERIOD_UNIT_CD_NM
			    , (SELECT CD_NM FROM TB_CM_CD WHERE CD_ID = T.PLAY_USE_PERIOD_UNIT_CD AND LANG_CD = T.LANG_CD) AS PLAY_USE_PERIOD_UNIT_CD_NM
			    , PI.FILE_PATH  AS IMG_PATH, PI.FILE_NM AS IMG_NM, PI.FILE_SIZE AS IMG_SIZE
			FROM (
			  SELECT T4.* FROM (
			      SELECT T3.*, ROWNUM AS RNUM
			      FROM (
			            SELECT 
			            	  COUNT(*) OVER () TOTAL_COUNT
			            	, T2.CID, T2.CHAPTER, T2.SAMPL_URL
			                , MAX( T2.PROD_ID ) AS PROD_ID
			                , MAX( T2.TENANT_ID ) AS TENANT_ID
			                , MAX( T2.CHNL_PROD_ID ) AS CHNL_PROD_ID
			                , MAX( T2.META_CLSF_CD ) AS META_CLSF_CD
			                , MAX( T2.PROD_GRD_CD ) AS PROD_GRD_CD
			                , MAX( T2.PROD_NM ) AS PROD_NM
			                , MAX( T2.LANG_CD ) AS LANG_CD
			                , MAX( T2.MENU_ID ) AS MENU_ID, MAX( T2.TOP_MENU_ID ) AS TOP_MENU_ID
			                , MAX( T2.COMPT_YN ) AS COMPT_YN, MAX( T2.BOOK_CLSF_CD ) AS BOOK_CLSF_CD
			                , MAX( T2.SVC_START_DT ) AS SVC_START_DT, MAX( T2.BOOK_PAGE_CNT ) AS BOOK_PAGE_CNT, MAX( T2.ISSUE_DAY ) AS ISSUE_DAY
			                , MAX( T2.SUB_CONTENTS_ID ) AS SUB_CONTENTS_ID
			                , MAX( T2.FILE_SIZE ) AS FILE_SIZE, MAX( T2.PROD_VER ) AS PROD_VER
			                , MAX( T2.PROD_BASE_DESC ) AS PROD_BASE_DESC, MAX( T2.PROD_DTL_DESC ) AS PROD_DTL_DESC, MAX( T2.PROD_INTR_DSCR ) AS PROD_INTR_DSCR
			                , MAX( T2.ARTIST1_NM ) AS ARTIST1_NM, MAX( T2.ARTIST2_NM ) AS ARTIST2_NM, MAX( T2.ARTIST3_NM ) AS ARTIST3_NM
			                , MAX( T2.REG_DT ) AS REG_DT, MAX( T2.REG_ID ) AS REG_ID, MAX( T2.LAST_DEPLOY_DT ) AS LAST_DEPLOY_DT
			                , MAX( DECODE( T2.POSS_LEND_CLSF_CD, 'DP010601', T2.PROD_ID ) ) AS STORE_PROD_ID
			                , MAX( DECODE( T2.POSS_LEND_CLSF_CD, 'DP010601', NULL, T2.PROD_ID ) ) AS PLAY_PROD_ID
			                , MAX( DECODE( T2.POSS_LEND_CLSF_CD, 'DP010601', T2.PROD_AMT ) ) AS STORE_PROD_AMT
			                , MAX( DECODE( T2.POSS_LEND_CLSF_CD, 'DP010601', NULL, T2.PROD_AMT ) ) AS PLAY_PROD_AMT
			                , MAX( DECODE( T2.POSS_LEND_CLSF_CD, 'DP010601', T2.PROD_NET_AMT ) ) AS STORE_PROD_NET_AMT
			                , MAX( DECODE( T2.POSS_LEND_CLSF_CD, 'DP010601', NULL, T2.PROD_NET_AMT ) ) AS PLAY_PROD_NET_AMT
			                , MAX( DECODE( T2.POSS_LEND_CLSF_CD, 'DP010601', T2.DRM_YN ) ) AS STORE_DRM_YN
			                , MAX( DECODE( T2.POSS_LEND_CLSF_CD, 'DP010601', NULL, T2.DRM_YN ) ) AS PLAY_DRM_YN
			                , MAX( DECODE( T2.POSS_LEND_CLSF_CD, 'DP010601', T2.PROD_STATUS_CD ) ) AS STORE_PROD_STATUS_CD
			                , MAX( DECODE( T2.POSS_LEND_CLSF_CD, 'DP010601', NULL, T2.PROD_STATUS_CD ) ) AS PLAY_PROD_STATUS_CD
			                , MAX( DECODE( T2.POSS_LEND_CLSF_CD, 'DP010601', T2.USE_PERIOD ) ) AS STORE_USE_PERIOD
			                , MAX( DECODE( T2.POSS_LEND_CLSF_CD, 'DP010601', NULL, T2.USE_PERIOD ) ) AS PLAY_USE_PERIOD
			                , MAX( DECODE( T2.POSS_LEND_CLSF_CD, 'DP010601', T2.USE_PERIOD_UNIT_CD ) ) AS STORE_USE_PERIOD_UNIT_CD
			                , MAX( DECODE( T2.POSS_LEND_CLSF_CD, 'DP010601', NULL, T2.USE_PERIOD_UNIT_CD ) ) AS PLAY_USE_PERIOD_UNIT_CD
			                , MAX( T2.VERTICAL_YN) AS VERTICAL_YN
			            FROM (
			            SELECT T1.*
			              FROM (
							SELECT 
		                        TP.TENANT_ID, DSC.LANG_CD
		                      , PR.PROD_ID AS CHNL_PROD_ID
		                      , MC.MENU_ID, MC.TOP_MENU_ID
		                      , PD.PROD_ID
		                      , PD.CID
		                      , PD.META_CLSF_CD
		                      , PD.PROD_GRD_CD
		                      , PD.REG_ID
		                      , PD.REG_DT
		                      , PD.LAST_DEPLOY_DT
		                      , UP.USE_PERIOD
		                      , UP.USE_PERIOD_UNIT_CD
		                      , UP.POSS_LEND_CLSF_CD
		                      , PD.DRM_YN
		                      , DSC.PROD_NM
		                      , DSC.PROD_BASE_DESC, DSC.PROD_DTL_DESC, DSC.PROD_INTR_DSCR
		                      , DSC.ARTIST1_NM, DSC.ARTIST2_NM, DSC.ARTIST3_NM
		                      , TP.PROD_STATUS_CD
		                      , MP.BOOK_CLSF_CD, MP.COMPT_YN
		                      , MP.SVC_START_DT, MP.BOOK_PAGE_CNT, MP.ISSUE_DAY
		                      , MP.CHAPTER
		                      , MP.SAMPL_URL /* 미리보기 URL */
		                      , NVL(MP.VERTICAL_YN, 'N') AS VERTICAL_YN
		                      , PRC.PROD_AMT, PRC.PROD_NET_AMT
		                      , SC.SUB_CONTENTS_ID, SC.FILE_SIZE, SC.PROD_VER
		                      , ROW_NUMBER() OVER ( PARTITION BY PD.PROD_ID ORDER BY SC.PROD_VER DESC ) AS RN
		                    FROM TB_DP_PROD_RSHP PR
		                      , TB_DP_PROD PD
		                      , TB_DP_USE_POLICY UP
		                      , TB_DP_MENU_CATEGORY_PROD_MAPG CPM
		                      , TB_DP_MENU_CATEGORY MC
		                      , TB_DP_PROD_DESC DSC
		                      , TB_DP_SUB_CONTENTS SC
		                      , TB_DP_TENANT_PROD TP
		                      , TB_DP_TENANT_PROD_PRICE PRC
		                      , TB_DP_EBOOK_PROD MP
		                      , TB_DP_SPRT_DEVICE SD
		                      , TB_CM_DEVICE DV
		                    WHERE PR.PROD_ID = #{channelId}
		                      AND PR.PART_PROD_ID = PD.PROD_ID
		                      <if test="orderedBy == 'nonPayment'">
							  <if test="paymentContentIdList !=null and paymentContentIdList.size() > 0">
							  AND PD.CID NOT IN  
								  <foreach collection="paymentContentIdList" item="item" index="index" open="(" separator="," close=")">
								  #{item}
								</foreach>
							  </if>
							  </if>
		                      AND TP.PROD_ID = PD.PROD_ID
		                      AND PD.USE_POLICY_ID = UP.USE_POLICY_ID(+)
		                      AND PRC.PROD_ID  = PD.PROD_ID AND PRC.TENANT_ID = TP.TENANT_ID
		                      AND MP.PROD_ID = PD.PROD_ID
		                      AND TP.TENANT_ID = #{tenantId} 
		                      AND TP.EXPO_YN = 'Y'
		                   	  <choose>
			                  <when test='includeProdStopStatus != null and includeProdStopStatus == "Y"'>
			                  AND TP.PROD_STATUS_CD IN ('PD000403', 'PD000404', 'PD000409')
			                  </when>
			                  <otherwise>
			                  AND TP.PROD_STATUS_CD = 'PD000403'
			                  </otherwise>
			                  </choose>
		                      AND DSC.PROD_ID = PD.PROD_ID AND DSC.LANG_CD = #{langCd}
		                      AND PD.PROD_ID = CPM.PROD_ID
		                      AND CPM.MENU_ID = MC.MENU_ID AND MC.USE_YN = 'Y'
		                      AND PD.PROD_ID = SD.PROD_ID
		                      AND (SD.DEVICE_MODEL_CD = #{deviceModel} OR SD.DEVICE_MODEL_CD = #{virtualDeviceModelNo})
		                      AND DV.DEVICE_MODEL_CD = #{deviceModel} AND DV.USE_YN = 'Y'
		                      AND SYSDATE BETWEEN PRC.APPLY_START_DT AND PRC.APPLY_END_DT
		                      AND PD.SVC_GRP_CD = 'DP000203'   AND PD.CONTENTS_TYPE_CD = 'PD002502' AND PD.SVC_TYPE_CD = 'DP001116'
							  AND SC.PROD_ID = PD.PROD_ID AND SC.SALE_YN ='Y'
							  <if test="bookTypeCd != null and bookTypeCd !=''">
			  				  AND MP.BOOK_CLSF_CD = #{bookTypeCd}
			  				  </if>
			              ) T1
			              WHERE RN = 1
			          ) T2
					  GROUP BY T2.CID, T2.CHAPTER, T2.SAMPL_URL
					  <if test="orderedBy == 'recent'">
					  ORDER BY T2.CHAPTER DESC
	                  </if>
	                  <if test="orderedBy == 'regDate' or orderedBy == 'nonPayment'">
	                  ORDER BY T2.CHAPTER ASC
	                  </if>
			    ) T3
			 	WHERE 1=1
              	<if test="baseChapter != null and baseChapter > 0">
              	<if test="orderedBy == 'recent'"><![CDATA[
				AND NVL(T3.CHAPTER, 999) < #{baseChapter}]]>
              	</if>
	            <if test="orderedBy == 'regDate' or orderedBy == 'nonPayment'">
                AND NVL(T3.CHAPTER, 999) > #{baseChapter}
				</if>
              	</if>
			  ) T4
			  WHERE T4.RNUM BETWEEN #{offset} AND (#{offset}+#{count}-1)
			) T
			, TB_DP_MENU_CATEGORY_DESC MCD
			, TB_DP_PROD_IMG PI
			WHERE 1=1
			  AND T.MENU_ID = MCD.MENU_ID AND MCD.LANG_CD = T.LANG_CD
			  AND T.PROD_ID = PI.PROD_ID(+) AND T.LANG_CD = PI.LANG_CD(+) AND PI.EXPO_ORD(+) = 1 AND PI.IMG_CD(+) = #{representImgCd}
	</select>
	
	<select id="getProdUsePolicyInfo" parameterType="map" resultType="EpubDetail">
		SELECT /* DownloadMapper.getProdUsePolicyInfo, Epub 상품 이용정책 조회, 이석희/I-S Plus, 2015-07-14 */
		       T4.*
		     , ( CASE WHEN T4.STORE_PROD_ID IS NOT NULL THEN 'Y' ELSE 'N' END ) AS SUPPORT_STORE
		     , ( CASE WHEN PLAY_PROD_ID IS NOT NULL THEN 'Y' ELSE 'N' END ) AS SUPPORT_PLAY
		     , (SELECT /*+ INDEX_JOIN(TB_CM_CD) */ CD_NM
		          FROM TB_CM_CD
		         WHERE CD_ID = T4.STORE_USE_PERIOD_UNIT_CD
		           AND LANG_CD = #{langCd}) AS STORE_USE_PERIOD_UNIT_CD_NM
		     , (SELECT /*+ INDEX_JOIN(TB_CM_CD) */ CD_NM
		          FROM TB_CM_CD
		         WHERE CD_ID = T4.PLAY_USE_PERIOD_UNIT_CD
		           AND LANG_CD = #{langCd}) AS PLAY_USE_PERIOD_UNIT_CD_NM
             , (CASE WHEN STORE_DWLD_STRM='DP010501' THEN 'dl'
                     WHEN STORE_DWLD_STRM='DP010502' THEN 'strm'
                     WHEN STORE_DWLD_STRM='DP010503' THEN 'both' END
                ) AS STORE_DL_STRM_CD
             , (CASE WHEN PLAY_DWLD_STRM='DP010501' THEN 'dl'
                     WHEN PLAY_DWLD_STRM='DP010502' THEN 'strm'
                     WHEN PLAY_DWLD_STRM='DP010503' THEN 'both' END
                ) AS PLAY_DL_STRM_CD	          
		  FROM 
		       (
		        SELECT T3.*
		             , ROWNUM AS RNUM
		          FROM 
		               (
		                SELECT T2.CID
		                     , T2.CHAPTER
		                     , T2.SAMPL_URL 
		                     , MAX(T2.PROD_ID) AS PROD_ID
		                     , MAX(T2.TENANT_ID) AS TENANT_ID
		                     , MAX(T2.CHNL_PROD_ID) AS CHNL_PROD_ID
		                     , MAX(T2.META_CLSF_CD) AS META_CLSF_CD
		                     , MAX(T2.COMPT_YN) AS COMPT_YN
		                     , MAX(T2.BOOK_CLSF_CD) AS BOOK_CLSF_CD
		                     , MAX(DECODE(T2.POSS_LEND_CLSF_CD, 'DP010601', T2.PROD_ID)) AS STORE_PROD_ID
		                     , MAX(DECODE(T2.POSS_LEND_CLSF_CD, 'DP010601', NULL, T2.PROD_ID)) AS PLAY_PROD_ID
		                     , MAX(DECODE(T2.POSS_LEND_CLSF_CD, 'DP010601', T2.DRM_YN)) AS STORE_DRM_YN
		                     , MAX(DECODE(T2.POSS_LEND_CLSF_CD, 'DP010601', NULL, T2.DRM_YN)) AS PLAY_DRM_YN 
		                     , MAX(DECODE(T2.POSS_LEND_CLSF_CD, 'DP010601', T2.USE_PERIOD)) AS STORE_USE_PERIOD
		                     , MAX(DECODE(T2.POSS_LEND_CLSF_CD, 'DP010601', NULL, T2.USE_PERIOD)) AS PLAY_USE_PERIOD
		                     , MAX(DECODE(T2.POSS_LEND_CLSF_CD, 'DP010601', T2.USE_PERIOD_UNIT_CD)) AS STORE_USE_PERIOD_UNIT_CD
		                     , MAX(DECODE(T2.POSS_LEND_CLSF_CD, 'DP010601', NULL, T2.USE_PERIOD_UNIT_CD)) AS PLAY_USE_PERIOD_UNIT_CD
		                     , MAX(DECODE(T2.POSS_LEND_CLSF_CD, 'DP010601', T2.PROD_AMT)) AS STORE_PROD_AMT
		                     , MAX(DECODE(T2.POSS_LEND_CLSF_CD, 'DP010601', NULL, T2.PROD_AMT)) AS PLAY_PROD_AMT
		                     , MAX(DECODE(T2.POSS_LEND_CLSF_CD, 'DP010601', T2.PROD_NET_AMT)) AS STORE_PROD_NET_AMT
		                     , MAX(DECODE(T2.POSS_LEND_CLSF_CD, 'DP010601', NULL, T2.PROD_NET_AMT)) AS PLAY_PROD_NET_AMT
                             , MAX(DECODE(T2.POSS_LEND_CLSF_CD, 'DP010601', T2.DWLD_STRM_CLSF_CD)) AS STORE_DWLD_STRM
                             , MAX(DECODE(T2.POSS_LEND_CLSF_CD, 'DP010601', NULL, T2.DWLD_STRM_CLSF_CD)) AS PLAY_DWLD_STRM		                     		                     
		                  FROM  
		                       (
		                        SELECT T1.*
		                          FROM
		                               (
		                                SELECT  TP.TENANT_ID
		                                      , PR.PROD_ID AS CHNL_PROD_ID
		                                      , PD.PROD_ID
		                                      , PD.CID
		                                      , PD.META_CLSF_CD 
		                                      , UP.USE_PERIOD
		                                      , UP.USE_PERIOD_UNIT_CD
		                                      , UP.POSS_LEND_CLSF_CD
		                                      , UP.DWLD_STRM_CLSF_CD
		                                      , PD.DRM_YN 
		                                      , MP.BOOK_CLSF_CD
		                                      , MP.COMPT_YN
		                                      , MP.CHAPTER 
		                                      , MP.SAMPL_URL
                                              , PRC.PROD_AMT
                                              , PRC.PROD_NET_AMT  
		                                      , ROW_NUMBER() OVER ( PARTITION BY PD.PROD_ID ORDER BY SC.PROD_VER DESC ) AS RN
		                                  FROM  TB_DP_PROD_RSHP PR 
		                                      , TB_DP_PROD PD
		                                      , TB_DP_USE_POLICY UP
		                                      , TB_DP_MENU_CATEGORY_PROD_MAPG CPM
		                                      , TB_DP_MENU_CATEGORY MC 
		                                      , TB_DP_SUB_CONTENTS SC 
		                                      , TB_DP_TENANT_PROD TP 
		                                      , TB_DP_EBOOK_PROD MP 
		                                      , TB_DP_SPRT_DEVICE SD 
		                                      , TB_CM_DEVICE DV
		                                      , TB_DP_TENANT_PROD_PRICE PRC
		                                  WHERE PR.PROD_ID = #{channelId}
		                                    AND PR.PART_PROD_ID = PD.PROD_ID
		                                    AND TP.PROD_ID = PD.PROD_ID
		                                    AND PRC.PROD_ID = PD.PROD_ID
		                                    AND PRC.TENANT_ID = TP.TENANT_ID  		                                    
		                                    AND PD.USE_POLICY_ID = UP.USE_POLICY_ID(+)
		                                    AND MP.PROD_ID = PD.PROD_ID
		                                    AND TP.TENANT_ID = #{tenantId}
		                                    AND TP.EXPO_YN = 'Y'
				                            <choose>
				                            <when test='includeProdStopStatus != null and includeProdStopStatus == "Y"'>
				                            AND TP.PROD_STATUS_CD IN ('PD000403', 'PD000404', 'PD000409')
				                            </when>
				                            <otherwise>
				                            AND TP.PROD_STATUS_CD = 'PD000403'
				                            </otherwise>
				                            </choose>
		                                    AND PD.PROD_ID = CPM.PROD_ID
		                                    AND CPM.MENU_ID = MC.MENU_ID
		                                    AND MC.USE_YN = 'Y'
		                                    AND PD.PROD_ID = SD.PROD_ID
		                                    AND (SD.DEVICE_MODEL_CD = #{deviceModel} OR SD.DEVICE_MODEL_CD = #{virtualDeviceModelNo})
		                                    AND DV.DEVICE_MODEL_CD = #{deviceModel}
		                                    AND DV.USE_YN = 'Y'
		                                    AND PD.SVC_GRP_CD = 'DP000203'
		                                    AND PD.CONTENTS_TYPE_CD = 'PD002502'
		                                    AND PD.SVC_TYPE_CD = 'DP001116'
		                                    AND SC.PROD_ID = PD.PROD_ID
		                                    AND SC.SALE_YN ='Y'
                                            AND MP.BOOK_CLSF_CD = #{searchUsePolicyBookTypeCd}
                                            AND SYSDATE BETWEEN PRC.APPLY_START_DT AND PRC.APPLY_END_DT
		                               ) T1
		                         WHERE  RN = 1               
		                       ) T2             
		                  GROUP BY T2.CID, T2.CHAPTER, T2.SAMPL_URL
		                  ORDER BY T2.CHAPTER DESC 
		               ) T3
		         WHERE 1=1       
		       ) T4
		  WHERE T4.RNUM = 1
    </select>
    
</mapper>
