<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Feedback">

	<!-- 사용후기 기등록 여부 조회  -->
	<select id="getRegProdNoti" parameterType="ProdNoti" resultType="ProdNoti">
		SELECT /* FeedbackMapper.xml, getRegProdNoti, SAC : 김현일 , 2014-02-04 */ 
	           *
	      FROM
	         (
	         SELECT N.NOTI_SEQ
	              , N.NOTI_DSCR
	           FROM TB_DP_PROD_NOTI N
	                 WHERE 1 = 1
	            AND N.MBR_NO = #{mbrNo}
	            AND N.TENANT_ID = #{tenantId}
	        <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(chnlId)">
	            AND N.PROD_ID = #{chnlId}
	            AND N.CATALOG_ID = #{prodId}
	        </if>
	        <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isBlank(chnlId)">
	            AND N.PROD_ID = #{prodId}
	        </if>
	            AND N.NOTI_TYPE_CD = 'DP000401'
	            AND N.DEL_YN = 'N'
	            AND N.BAD_NOTI_YN IN ( 'N', 'R' )
	            AND N.SPAM_YN = 'N'
	            AND EXISTS (
	                       <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(chnlId)">
	                       SELECT 'X'
	                         FROM TB_DP_SHPG_CATALOG P
	                        WHERE P.CATALOG_ID = #{prodId}
	                          AND P.CHNL_CNT > 0
	                       </if>
	                       <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isBlank(chnlId)">
                           SELECT 'X'
	                         FROM TB_DP_PROD P
	                        WHERE P.PROD_ID = N.PROD_ID
	                       </if>
	                       )
	          ORDER BY REG_DT DESC
	         )
	     WHERE ROWNUM <![CDATA[<=]]> 1
	</select>
	
	<!-- 사용후기 등록  -->
	<insert id="insertProdNoti" parameterType="ProdNoti">
	   /* FeedbackMapper.xml, insertProdNoti, SAC : 김현일 , 2014-02-04 */
	   <selectKey keyProperty="notiSeq" resultType="string" order="BEFORE">
	       SELECT SQ_DP_PROD_NOTI.NEXTVAL
             FROM DUAL
	   </selectKey>
       INSERT INTO TB_DP_PROD_NOTI ( TENANT_ID
                                     , NOTI_SEQ
                                     , NOTI_TYPE_CD
                                     , MBR_NO
                                     <!-- Shopping -->
                                     <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(chnlId)">
                                     , PROD_ID
                                     , CATALOG_ID
                                     </if>
                                     <!-- Shopping 외 -->
                                     <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isBlank(chnlId)">
                                     , PROD_ID
                                     </if>
                                     <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(title)">
                                     , TITLE
                                     </if>
                                     , NOTI_DSCR
                                     , SPAM_YN
                                     , BAD_NOTI_YN
                                     , DEL_YN
                                     , REG_ID
                                     , REG_DT
                                     , MBR_TELNO
                                     <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(fbPostYn)">
                                     , FB_POST_YN
                                     </if>
                                     , REG_LOC
                                     , DEVICE_MODEL_CD
                                     <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(pkgVer)">
                                     , PKG_VER
                                     </if>
                                     )
                              VALUES ( #{tenantId}
                                     , #{notiSeq}
                                     , 'DP000401'
                                     , #{mbrNo}
                                     <!-- Shopping -->
                                     <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(chnlId)">
                                     , #{chnlId}
                                     , #{prodId}
                                     </if>
                                     <!-- Shopping 외 -->
                                     <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isBlank(chnlId)">
                                     , #{prodId}
                                     </if>
                                     <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(title)">
                                     , #{title}
                                     </if>
                                     , #{notiDscr}
                                     , 'N'
                                     , 'N'
                                     , 'N'
                                     , #{regId}
                                     , SYSDATE
                                     , #{mbrTelno}
                                     <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(fbPostYn)">
                                     , #{fbPostYn}
                                     </if>
                                     , 'US004201'
                                     , #{deviceModelCd}
                                     <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(pkgVer)">
                                     , #{pkgVer}
                                     </if>
                                     )
	</insert>
	
    <!-- 사용후기 수정 -->
    <update id="updateProdNoti"  parameterType="ProdNoti">
        /* FeedbackMapper.xml, updateProdNoti, SAC : 김현일 , 2014-02-04 */
	    UPDATE 
	           TB_DP_PROD_NOTI
	       SET NOTI_DSCR = #{notiDscr}
	         <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(title)">
	         , TITLE = #{title}
	         </if>
	         , UPD_DT = SYSDATE
	         , NOTI_SCORE = 0
	         , SELLER_RESP_OPIN = NULL
	         , SELLER_RESP_REG_DT = NULL
	         , REG_LOC = 'US004201'
	         , DEVICE_MODEL_CD = #{deviceModelCd}
	         <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(pkgVer)">
	         , PKG_VER = #{pkgVer}
	         </if>
	     WHERE TENANT_ID = #{tenantId}
	       AND NOTI_SEQ = #{notiSeq}
	       AND MBR_NO = #{mbrNo}
    </update>
	
	<!-- 사용후기 삭제 -->
	<update id="deleteProdNoti" parameterType="ProdNoti">
        /* FeedbackMapper.xml, updateProdNoti, SAC : 김현일 , 2014-02-04 */
        UPDATE 
               TB_DP_PROD_NOTI
           SET NOTI_DSCR = #{notiDscr}
             , DEL_DT = SYSDATE
             , DEL_YN = 'Y'
         WHERE TENANT_ID = #{tenantId}
           AND NOTI_SEQ = #{notiSeq}
           AND MBR_NO = #{mbrNo}	   
	</update>
	 
	<!-- 사용후기 추천이력 삭제 -->  
	<delete id="deleteProdNotiGood" parameterType="ProdNotiGood">
	     /* FeedbackMapper.xml, deleteProdNotiGood, SAC : 김현일 , 2014-02-04 */
	    DELETE FROM TB_DP_PROD_NOTIGOOD
         WHERE TENANT_ID = #{tenantId}
           AND NOTI_SEQ = #{notiSeq}
           <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(mbrNo)">
           AND MBR_NO = #{mbrNo}
           </if>
	</delete>
	
	<!-- 기 평가 평점 조회 -->
	<select id="getRegMbrAvg" parameterType="MbrAvg" resultType="MbrAvg">
	    SELECT /* FeedbackMapper.xml, getRegMbrAvg, SAC : 김현일 , 2014-02-04 */
	           AVG_SCORE
	      FROM TB_DP_MBR_AVG
	     WHERE TENANT_ID = #{tenantId} 
	       AND MBR_NO = #{mbrNo}
	       AND PROD_ID = #{prodId}	
	</select>
	
	<!-- 회원별 평가 저장 -->
	<insert id="mergeMbrAvg" parameterType="MbrAvg" useGeneratedKeys="false">
	    /* FeedbackMapper.xml, mergeMbrAvg, SAC : 김현일 , 2014-02-04 */
	    MERGE INTO TB_DP_MBR_AVG
	    USING DUAL
	       ON ( TENANT_ID = #{tenantId} AND PROD_ID = #{prodId} AND MBR_NO = #{mbrNo} )
	     WHEN NOT MATCHED THEN
	        INSERT ( TENANT_ID
	               , MBR_NO
	               , PROD_ID
	               , AVG_SCORE
	               , REG_ID
	               , REG_DT )
	        VALUES ( #{tenantId}
	               , #{mbrNo}
	               , #{prodId}
	               , #{avgScore}
	               , #{regId}
	               , SYSDATE )
	     WHEN MATCHED THEN
	        UPDATE
	           SET AVG_SCORE = #{avgScore}
	             , REG_DT = SYSDATE
	</insert>

    <!-- 회원평가정보 삭제 -->
    <delete id="deleteMbrAvg" parameterType="MbrAvg">
        DELETE /* FeedbackMapper.xml, deleteMbrAvg, SAC : 김현일 , 2014-02-04 */
          FROM TB_DP_MBR_AVG
         WHERE TENANT_ID = #{tenantId}
           AND PROD_ID = #{prodId}
           AND MBR_NO = #{mbrNo}
    </delete>
	
	
	<!-- 평점저장(기평가평점 수정) -->
	<update id="updateTenantProdStats" parameterType="TenantProdStats">
        UPDATE /* FeedbackMapper.xml, updateTenantProdStats, SAC : 김현일 , 2014-02-04 */
	           TB_DP_TENANT_PROD_STATS
	       SET TOT_EVLU_SCORE = TOT_EVLU_SCORE + #{avgEvluScore} - #{preAvgScore}
	           , UPD_ID = #{updId}
	           , UPD_DT = SYSDATE
	           <if test="action == 'create'">
	           , AVG_EVLU_SCORE = ( ( TOT_EVLU_SCORE + #{avgEvluScore} - #{preAvgScore} ) / PATICPERS_CNT )
	           </if>
	           <if test="action == 'remove'">
	           , PATICPERS_CNT = PATICPERS_CNT -1
	           , AVG_EVLU_SCORE = ( ( TOT_EVLU_SCORE + #{avgEvluScore} - #{preAvgScore} ) / PATICPERS_CNT - 1 )
	           </if>
	     WHERE TENANT_ID = #{tenantId}
	       AND PROD_ID = #{prodId}
    </update>
	
	<!-- 평점저장 -->
	<insert id="mergeTenantProdStats" parameterType="TenantProdStats" useGeneratedKeys="false">
	    /* FeedbackMapper.xml, mergeTenantProdStats, SAC : 김현일 , 2014-02-04 */
	    MERGE INTO TB_DP_TENANT_PROD_STATS
	    USING DUAL
	       ON ( TENANT_ID = #{tenantId} AND PROD_ID = #{prodId} )
	    WHEN NOT MATCHED THEN
	        INSERT ( TENANT_ID
	               , PROD_ID
	               , AVG_EVLU_SCORE
	               , TOT_EVLU_SCORE
	               , PATICPERS_CNT
	               , REG_ID
	               , REG_DT )
	        VALUES ( #{tenantId}
	               , #{prodId}
	               , #{avgEvluScore}
	               , #{avgEvluScore}
	               , 1
	               , #{regId}
	               , SYSDATE )
	    WHEN MATCHED THEN
	        UPDATE
	           SET AVG_EVLU_SCORE = ((TOT_EVLU_SCORE + #{avgEvluScore}) / (PATICPERS_CNT + 1))
	                , TOT_EVLU_SCORE = TOT_EVLU_SCORE + #{avgEvluScore}
	                , PATICPERS_CNT = PATICPERS_CNT+1
	             , UPD_ID = #{updId}
	             , UPD_DT = SYSDATE
	</insert>
	
	<!-- 평점 조회 -->
    <select id="getTenantProdStats" parameterType="TenantProdStats" resultType="TenantProdStats">
	    SELECT /* FeedbackMapper.xml, getTenantProdStats, SAC : 김현일 , 2014-02-04 */
	           AVG_EVLU_SCORE
	         , PATICPERS_CNT
	      FROM TB_DP_TENANT_PROD_STATS
	     WHERE TENANT_ID = #{tenantId} 
	       AND PROD_ID = #{prodId}
    </select>
    
    <!-- 평점 삭제 -->
    <delete id="deleteTenantProdStats" parameterType="TenantProdStats">
        DELETE /* FeedbackMapper.xml, deleteTenantProdStats, SAC : 김현일 , 2014-02-04 */
          FROM TB_DP_TENANT_PROD_STATS
         WHERE TENANT_ID = #{tenantId} 
           AND PROD_ID = #{prodId}    
    </delete>
	
	 <!-- (탈퇴회원 사용후기) 기 등록 여부 -->
	 <select id="getProdNotiWDCount" parameterType="ProdNoti" resultType="int">
	    SELECT /* FeedbackMapper.xml, getProdNotiWDCount, SAC : 김현일 , 2014-02-04 */
	           COUNT(*)
	      FROM TB_DP_PROD_NOTI_WD N
	     WHERE N.TENANT_ID = #{tenantId}
	       AND N.NOTI_SEQ = #{notiSeq}
    </select>
	
    <!-- (탈퇴회원 사용후기) 기 추천 여부 -->
    <select id="getProdNotiWDGoodCount" parameterType="ProdNoti" resultType="int">
	    SELECT /* FeedbackMapper.xml, getProdNotiWDGoodCount, SAC : 김현일 , 2014-02-04 */
	           COUNT(*)
	      FROM TB_DP_PROD_NOTI_WD N
	         , TB_DP_PROD_NOTIGOOD NG
	     WHERE N.TENANT_ID = NG.TENANT_ID
	       AND N.NOTI_SEQ = NG.NOTI_SEQ
	       AND N.NOTI_TYPE_CD = 'DP000401'
	       AND N.DEL_YN = 'N'
	       AND N.BAD_NOTI_YN IN ( 'N', 'R' )
	       AND N.SPAM_YN = 'N'
	       AND N.PROD_ID = #{prodId}
	       AND NG.NOTI_SEQ = #{notiSeq}
	       AND NG.MBR_NO = #{mbrNo}
	       AND NG.TENANT_ID = #{tenantId}
    </select>	
	
	<!-- 사용후기 추천 등록 -->
	<insert id="insertProdNotiGood" parameterType="ProdNotiGood">
	    /* FeedbackMapper.xml, insertProdNotiGood, SAC : 김현일 , 2014-02-04 */
	    INSERT INTO TB_DP_PROD_NOTIGOOD ( TENANT_ID
	                                     , NOTI_SEQ
	                                     , MBR_NO
	                                     , REG_ID
	                                     , REG_DT )
	                              VALUES ( #{tenantId}
	                                     , #{notiSeq}
	                                     , #{mbrNo}
	                                     , #{regId}
	                                     , SYSDATE )
	</insert>
	
	<!-- (탈퇴 회원 후기) 추천 수 증감처리 -->
    <update id="updateProdNotiWDGood" parameterType="ProdNotiGood">
	    /* FeedbackMapper.xml, updateProdNotiWDGood, SAC : 김현일 , 2014-02-04 */
	    UPDATE TB_DP_PROD_NOTI_WD
	       <if test="action == 'create'">
	       SET NOTI_SCORE = NOTI_SCORE + 1
	       </if>
	       <if test="action == 'remove'">
           SET NOTI_SCORE = NOTI_SCORE - 1
           </if>
	           , UPD_DT = SYSDATE
	     WHERE TENANT_ID = #{tenantId} 
	       AND NOTI_SEQ = #{notiSeq}   
    </update>
    
    <!-- (일반회원 사용후기) 기 추천 여부 -->
    <select id="getProdNotiGoodCount" parameterType="ProdNoti" resultType="int">
        SELECT /* FeedbackMapper.xml, getProdNotiGoodCount, SAC : 김현일 , 2014-02-04 */
               COUNT(*)
          FROM TB_DP_PROD_NOTI N
             , TB_DP_PROD_NOTIGOOD NG
         WHERE N.TENANT_ID = NG.TENANT_ID
           AND N.NOTI_SEQ = NG.NOTI_SEQ
           AND N.NOTI_TYPE_CD = 'DP000401'
           AND N.DEL_YN = 'N'
           AND N.BAD_NOTI_YN IN ( 'N', 'R' )
           AND N.SPAM_YN = 'N'
           AND N.PROD_ID = #{prodId}
           AND NG.NOTI_SEQ = #{notiSeq}
           AND NG.MBR_NO = #{mbrNo}
           AND NG.TENANT_ID = #{tenantId}
    </select>
    
    <!-- (일반회원 후기) 추천 수 증감처리 -->
    <update id="updateProdNotiGood" parameterType="ProdNotiGood">
        /* FeedbackMapper.xml, updateProdNotiGood, SAC : 김현일 , 2014-02-04 */
        UPDATE TB_DP_PROD_NOTI
           <if test="action == 'create'">
           SET NOTI_SCORE = NOTI_SCORE + 1
           </if>
           <if test="action == 'remove'">
           SET NOTI_SCORE = NOTI_SCORE - 1
           </if>
               , UPD_DT = SYSDATE
         WHERE TENANT_ID = #{tenantId} 
           AND NOTI_SEQ = #{notiSeq}   
    </update>
    
        <!-- 판매자 댓글 -->
    <update id="updateSellerResp" parameterType="ProdNoti">
        UPDATE  /* FeedbackMapper.xml, updateSellerResp, SAC : 남궁석호 , 2014-02-10 */
                TB_DP_PROD_NOTI
           SET  SELLER_RESP_OPIN = #{sellerRespOpin}
              , SELLER_RESP_TITLE = #{sellerRespTitle}
              , SELLER_RESP_REG_DT = SYSDATE
         WHERE  TENANT_ID = #{tenantId}
           AND  NOTI_SEQ = #{notiSeq}
    </update>

    <!-- 탈퇴 회원 사용후기 판매자 댓글 -->
    <update id="updateSellerRespWD" parameterType="ProdNoti">
        UPDATE  /* FeedbackMapper.xml, updateSellerRespWD, SAC : 남궁석호 , 2014-02-10 */
                TB_DP_PROD_NOTI_WD
           SET  SELLER_RESP_OPIN = #{sellerRespOpin}
              , SELLER_RESP_TITLE = #{sellerRespTitle}
              , SELLER_RESP_REG_DT = SYSDATE
         WHERE  TENANT_ID = #{tenantId}
           AND  NOTI_SEQ = #{notiSeq}
    </update>
    
</mapper>
