<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Feedback">

    <!-- 사용후기 기등록 여부 조회  -->
    <select id="getRegProdNoti" parameterType="ProdNoti" resultType="ProdNoti">
      SELECT  /* FeedbackMapper.xml, getRegProdNoti, SAC 기타, 2014-02-04 */ 
              noti_seq   /* 후기 SEQ */
            , noti_dscr  /* 후기 내용 */
        FROM
             (
              SELECT  a.noti_seq  /* 후기 SEQ */
                    , a.noti_dscr /* 후기 내용 */
                FROM  tb_dp_prod_noti a /* 상품 후기 */
               WHERE  1 = 1
                 AND  a.mbr_no = #{mbrNo}        /* 회원 번호 */
                 AND  a.tenant_id = #{tenantId}  /* 테넌트 ID */
                 <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(chnlId)">
                 AND  a.prod_id = #{chnlId}      /* 상품 ID */
                 AND  a.catalog_id = #{prodId}   /* 카탈로그 ID */
                 </if>
                 <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isBlank(chnlId)">
                 AND  a.prod_id = #{prodId}      /* 상품 ID */
                 </if>
                 AND  a.noti_type_cd = 'DP000401'    /* 후기 타입 코드 DP000401(댓글)*/
                 AND  a.del_yn = 'N'                 /* 삭제 여부 */
                 AND  a.bad_noti_yn IN ( 'N', 'R' )  /* 불량 후기 여부 */
                 AND  a.spam_yn = 'N'                /* 스펨 여부 */
                 AND EXISTS (
                             <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(chnlId)">
                             SELECT  'X'
                               FROM  tb_dp_shpg_catalog sa     /* 쇼핑 카탈로그 */
                              WHERE  sa.catalog_id = #{prodId} /* 카탈로그 ID */
                                AND  sa.chnl_cnt > 0           /* 채널 수 */
                             </if>
                             <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isBlank(chnlId)">
                             SELECT  'X'
                               FROM  tb_dp_prod sa             /* 상품 */
                              WHERE  sa.prod_id = a.prod_id    /* 상품 ID */
                             </if>
                             )
                ORDER BY reg_dt DESC  /* 등록일시 최신순 정렬 */
              )
       WHERE  ROWNUM <![CDATA[<=]]> 1 /* 조회건수중 1개 */
    </select>
    
    <!-- 사용후기 등록  -->
    <insert id="insertProdNoti" parameterType="ProdNoti">
      <selectKey keyProperty="notiSeq" resultType="string" order="BEFORE">
      SELECT  sq_dp_prod_noti.NEXTVAL  /* 사용후기 시퀀스 */ 
        FROM  DUAL
      </selectKey>
      INSERT  /* FeedbackMapper.xml, insertProdNoti, SAC 기타, 2014-02-04 */ 
        INTO  tb_dp_prod_noti  /* 상품 후기 */
      ( tenant_id              /* 테넌트 ID */
      , noti_seq               /* 후기 SEQ */
      , noti_type_cd           /* 후기 타입 코드 */
      , mbr_no                 /* 회원 번호 */
      <!-- Shopping -->
      <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(chnlId)">
      , prod_id                /* 상품 ID */
      , catalog_id             /* 카탈로그 ID */
      </if>
      <!-- Shopping 외 -->
      <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isBlank(chnlId)">
      , prod_id                /* 상품 ID  */
      </if>
      <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(title)">
      , title                  /* 제목 */
      </if>
      , noti_dscr              /* 후기 내용 */
      , noti_score             /* 후기 점수(추천수) */
      , spam_yn                /* 스펨 여부 */
      , bad_noti_yn            /* 불량 후기 여부 */
      , del_yn                 /* 삭제 여부 */            
      , reg_id                 /* 등록 ID */
      , reg_dt                 /* 등록 일시 */
      , mbr_telno              /* 회원 전화번호 */ 
      <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(fbPostYn)">
      , fb_post_yn             /* 페이스북 POST 여부 */
      </if>
      , reg_loc                /* 등록 위치 */
      , device_model_cd        /* 단말 모델 코드 */
      <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(pkgVer)">
      , pkg_ver                /* 패키지 버전 */
      </if>
      )
      VALUES
      ( 
        #{tenantId}            /* 테넌트 ID */
      , #{notiSeq}             /* 후기 SEQ */
      , 'DP000401'             /* 후기 타입 코드 DP000401(댓글)*/
      , #{mbrNo}               /* 회원 번호 */
      <!-- Shopping -->
      <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(chnlId)">
      , #{chnlId}              /* 상품 ID */
      , #{prodId}              /* 카탈로그 ID */
      </if>
      <!-- Shopping 외 -->
      <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isBlank(chnlId)">
      , #{prodId}              /* 상품 ID  */
      </if>
      <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(title)">
      , #{title}               /* 제목 */
      </if>
      , #{notiDscr}            /* 후기 내용 */
      , 0                      /* 후기 점수(추천수) */
      , 'N'                    /* 스펨 여부 */
      , 'N'                    /* 불량 후기 여부 */
      , 'N'                    /* 삭제 여부 */ 
      , #{regId}               /* 등록 ID */
      , SYSDATE                /* 등록 일시 */
      , #{mbrTelno}            /* 회원 전화번호 */ 
      <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(fbPostYn)">
      , #{fbPostYn}            /* 페이스북 POST 여부 */
      </if>
      , 'US004201'             /* 등록 위치 US004201(한국) */
      , #{deviceModelCd}       /* 단말 모델 코드 */
      <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(pkgVer)">
      , #{pkgVer}              /* 패키지 버전 */
      </if>
      )
    </insert>
    
    <!-- 사용후기 수정 -->
    <update id="updateProdNoti"  parameterType="ProdNoti">
      UPDATE  /* FeedbackMapper.xml, updateProdNoti, SAC 기타, 2014-02-04 */
              tb_dp_prod_noti                     /* 상품 후기 */
         SET  noti_dscr = #{notiDscr}             /* 후기 내용 */
            <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(title)">
            , title = #{title}                    /* 제목 */
            </if>
            , upd_dt = SYSDATE                    /* 수정 일시 */
            , reg_dt = SYSDATE                    /* 등록 일시 */
            , noti_score = 0                      /* 후기 점수 */
            , seller_resp_opin = NULL             /* 판매자 응답 의견 */
            , seller_resp_reg_dt = NULL           /* 판매자 응답 등록 일시 */           
            , reg_loc = 'US004201'                /* 등록 위치 US004201(한국) */
            , device_model_cd = #{deviceModelCd}  /* 단말 모델 코드 */
            <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(pkgVer)">
            , pkg_ver = #{pkgVer}                 /* 패키지 버전 */
            </if>
       WHERE  tenant_id = #{tenantId}             /* 테넌트 ID */
         AND  noti_seq = #{notiSeq}               /* 후기 SEQ */
         AND  mbr_no = #{mbrNo}                   /* 회원 번호 */
    </update>
    
    <!-- 사용후기 삭제 -->
    <update id="deleteProdNoti" parameterType="ProdNoti">
      UPDATE  /* FeedbackMapper.xml, deleteProdNoti, SAC 기타, 2014-02-04 */
              tb_dp_prod_noti         /* 상품 후기 */
         SET  del_dt = SYSDATE        /* 삭제 일시 */
            , del_yn = 'Y'            /* 삭제 여부 */
       WHERE  tenant_id = #{tenantId} /* 테넌트 ID */
         AND  noti_seq = #{notiSeq}   /* 후기 SEQ */
         AND  mbr_no = #{mbrNo}       /* 회원 번호 */
    </update>
     
    <!-- 사용후기 추천이력 삭제 -->  
    <delete id="deleteProdNotiGood" parameterType="ProdNotiGood">
      DELETE  /* FeedbackMapper.xml, deleteProdNotiGood, SAC 기타, 2014-02-04 */
        FROM  tb_dp_prod_notigood     /* 상품 후기 선호 */
       WHERE  tenant_id = #{tenantId} /* 테넌트 ID */
         AND  noti_seq = #{notiSeq}   /* 후기 SEQ */
         <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(mbrNo)">
         AND  mbr_no = #{mbrNo}       /* 회원 번호 */
         </if>
    </delete>
    
    <!-- 기 평가 평점 조회 -->
    <select id="getRegMbrAvg" parameterType="MbrAvg" resultType="MbrAvg">
      SELECT  /* FeedbackMapper.xml, getRegMbrAvg, SAC 기타, 2014-02-04 */
              avg_score               /* 평균 점수 */
        FROM  tb_dp_mbr_avg           /* 상품 평점 */
       WHERE  tenant_id = #{tenantId} /* 테넌트 ID */
         AND  mbr_no = #{mbrNo}       /* 회원 번호 */
         AND  prod_id = #{prodId}     /* 상품 ID */
    </select>
    
    <!-- 회원별 평가 저장 -->
    <insert id="mergeMbrAvg" parameterType="MbrAvg" useGeneratedKeys="false">
      MERGE  /* FeedbackMapper.xml, mergeMbrAvg, SAC 기타, 2014-02-04 */ 
       INTO  tb_dp_mbr_avg                 /* 상품 평점 */
      USING  DUAL
         ON  ( 
                   tenant_id = #{tenantId} /* 테넌트 ID */
              AND  prod_id = #{prodId}     /* 상품 ID */
              AND  mbr_no = #{mbrNo}       /* 회원 번호 */
             )
       WHEN  NOT MATCHED 
       THEN
             INSERT 
             ( 
               tenant_id                   /* 테넌트 ID */
             , mbr_no                      /* 회원 번호 */
             , prod_id                     /* 상품 ID */
             , avg_score                   /* 평균 점수 */
             , reg_id                      /* 등록 ID */
             , reg_dt                      /* 등록 일시 */
             <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(fbPostYn)">
             , fb_post_yn                  /* 페이스북 공유 여부 */
             </if>
             )
             VALUES 
             ( 
               #{tenantId}                 /* 테넌트 ID */
             , #{mbrNo}                    /* 회원 번호 */
             , #{prodId}                   /* 상품 ID */
             , #{avgScore}                 /* 평균 점수 */
             , #{regId}                    /* 등록 ID */
             , SYSDATE                     /* 등록 일시 */
             <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(fbPostYn)">
             , #{fbPostYn}                 /* 페이스북 공유 여부 */
             </if>
             )
       WHEN  MATCHED 
       THEN
             UPDATE
                SET  avg_score = #{avgScore} /* 평균 점수 */
                   , reg_dt = SYSDATE        /* 등록 일시(수정) */
    </insert>

    <!-- 회원평가정보 삭제 -->
    <delete id="deleteMbrAvg" parameterType="MbrAvg">
      DELETE  /* FeedbackMapper.xml, deleteMbrAvg, SAC 기타, 2014-02-04 */ 
        FROM  tb_dp_mbr_avg           /* 상품 평점 */
       WHERE  tenant_id = #{tenantId} /* 테넌트 ID */
         AND  prod_id = #{prodId}     /* 상품 ID */
         AND  mbr_no = #{mbrNo}       /* 회원 번호 */
    </delete>
    
    <!-- 평점저장(기평가평점 수정) -->
    <update id="updateTenantProdStats" parameterType="TenantProdStats">
      UPDATE  /* FeedbackMapper.xml, updateTenantProdStats, SAC 기타, 2014-02-04 */
              tb_dp_tenant_prod_stats  /* 테넌트 상품 통계 */
         SET  tot_evlu_score = NVL(tot_evlu_score, 0) + #{avgEvluScore} - #{preAvgScore}  /* 총 평가 점수 */
            , upd_id = #{updId}  /* 수정 ID */
            , upd_dt = SYSDATE   /* 수정 일시 */
            <if test="action == 'create'">
            , avg_evlu_score = ( ( NVL(tot_evlu_score, 0) + #{avgEvluScore} - #{preAvgScore} ) / paticpers_cnt )  /* 평균 평가 점수 */
            </if>
            <if test="action == 'remove'">
            , paticpers_cnt = paticpers_cnt - 1  /* 참여자 수 */
            , avg_evlu_score = ( ( NVL(tot_evlu_score, 0) + #{avgEvluScore} - #{preAvgScore} ) / (paticpers_cnt - 1) )  /* 평균 평가 점수 */
            </if>
       WHERE  tenant_id = #{tenantId}  /* 테넌트 ID */
         AND  prod_id = #{prodId}      /* 상품 ID */
    </update>
    
    <!-- 평점저장 -->
    <insert id="mergeTenantProdStats" parameterType="TenantProdStats" useGeneratedKeys="false">
      MERGE  /* FeedbackMapper.xml, mergeTenantProdStats, SAC 기타, 2014-02-04 */
       INTO  tb_dp_tenant_prod_stats       /* 테넌트 상품 통계 */
      USING  DUAL
         ON  ( 
                   tenant_id = #{tenantId} /* 테넌트 ID */
              AND  prod_id = #{prodId}     /* 상품 ID */
             )
       WHEN  NOT MATCHED 
       THEN
             INSERT 
             ( 
               tenant_id                   /* 테넌트 ID */
             , prod_id                     /* 상품 ID */
             , avg_evlu_score              /* 평균 평가 점수 */
             , tot_evlu_score              /* 총 평가 점수 */
             , paticpers_cnt               /* 참여자 수 */
             , reg_id                      /* 등록 ID */
             , reg_dt                      /* 등록 일시 */
             )
             VALUES 
             ( 
               #{tenantId}                 /* 테넌트 ID */
             , #{prodId}                   /* 상품 ID */
             , #{avgEvluScore}             /* 평균 평가 점수 */
             , #{avgEvluScore}             /* 총 평가 점수  */
             , 1                           /* 참여자 수 */
             , #{regId}                    /* 등록 ID */
             , SYSDATE )                   /* 등록 일시 */
       WHEN  MATCHED 
       THEN
             UPDATE
                SET  avg_evlu_score = ((NVL(tot_evlu_score, 0) + #{avgEvluScore}) / (NVL(paticpers_cnt, 0) + 1)) /* 평균 평가 점수 */
                   , tot_evlu_score = NVL(tot_evlu_score, 0) + #{avgEvluScore}                                   /* 총 평가 점수  */
                   , paticpers_cnt = NVL(paticpers_cnt, 0) + 1   /* 참여자 수 */                               
                   , upd_id = #{updId}                           /* 수정 ID */
                   , upd_dt = SYSDATE                            /* 수정 일시 */
    </insert>
    
    <!-- 평점 조회 -->
    <select id="getTenantProdStats" parameterType="TenantProdStats" resultType="TenantProdStats">
      SELECT  /* FeedbackMapper.xml, getTenantProdStats, SAC 기타, 2014-02-04 */
              avg_evlu_score           /* 평균 평가 점수 */
            , paticpers_cnt            /* 참여자 수 */
        FROM  tb_dp_tenant_prod_stats  /* 테넌트 상품 통계 */
       WHERE  tenant_id = #{tenantId}  /* 테넌트 ID */
         AND  prod_id = #{prodId}      /* 상품 ID */
    </select>
    
    <!-- 평점 삭제 -->
    <update id="deleteTenantProdStats" parameterType="TenantProdStats">
      UPDATE  /* FeedbackMapper.xml, deleteTenantProdStats, SAC 기타, 2014-02-04 */
              tb_dp_tenant_prod_stats  /* 평균 평가 점수 */
         SET  tot_evlu_score = 0       /* 총 평가 점수 */
            , upd_id = #{updId}        /* 수정 ID */
            , upd_dt = SYSDATE         /* 수정 일시 */
            , paticpers_cnt = 0        /* 참여자 수 */
            , avg_evlu_score = 0       /* 평균 평가 점수 */
       WHERE  tenant_id = #{tenantId}  /* 테넌트 ID */
         AND  prod_id = #{prodId}      /* 상품 ID */
    </update>
    
    <!-- 사용후기 추천 등록 -->
    <insert id="insertProdNotiGood" parameterType="ProdNotiGood">
      INSERT  /* FeedbackMapper.xml, insertProdNotiGood, SAC 기타, 2014-02-04 */
        INTO  tb_dp_prod_notigood  /* 상품 후기 선호 */
      ( 
        tenant_id                  /* 테넌트 ID */
      , noti_seq                   /* 후기 SEQ */
      , mbr_no                     /* 회원 번호 */
      , reg_id                     /* 등록 ID */
      , reg_dt                     /* 등록 일시 */
      )
      VALUES 
      ( #{tenantId}                /* 테넌트 ID */
      , #{notiSeq}                 /* 후기 SEQ */
      , #{mbrNo}                   /* 회원 번호 */
      , #{regId}                   /* 등록 ID */
      , SYSDATE                    /* 등록 일시 */
      )
    </insert>

    <!-- (일반회원 사용후기) 기 추천 여부 -->
    <select id="getProdNotiGoodCount" parameterType="ProdNoti" resultType="int">
      SELECT  /* FeedbackMapper.xml, getProdNotiGoodCount, SAC 기타, 2014-02-04 */
              COUNT(*)
        FROM  tb_dp_prod_noti a              /* 상품 후기 */
            , tb_dp_prod_notigood b          /* 상품 후기 선호 */
       WHERE  a.tenant_id = b.tenant_id      /* 테넌트 ID */
         AND  a.noti_seq = b.noti_seq        /* 후기 SEQ */
         AND  a.noti_type_cd = 'DP000401'    /* 후기 타입 코드 */
         AND  a.del_yn = 'N'                 /* 삭제 여부 */
         AND  a.bad_noti_yn IN ( 'N', 'R' )  /* 불량 후기 여부 */
         AND  a.spam_yn = 'N'                /* 스펨 여부 */
         AND  a.prod_id = #{prodId}          /* 상품 ID */
         AND  b.noti_seq = #{notiSeq}        /* 후기 SEQ */
         AND  b.mbr_no = #{mbrNo}            /* 회원 번호 */
         AND  b.tenant_id = #{tenantId}      /* 테넌트 ID */
    </select>
    
    <!-- (일반회원 후기) 추천 수 증감처리 -->
    <update id="updateProdNotiGood" parameterType="ProdNotiGood">
      UPDATE  /* FeedbackMapper.xml, updateProdNotiGood, SAC 기타, 2014-02-04 */
              tb_dp_prod_noti                      /* 상품 후기 */
         <if test="action == 'create'">
         SET  noti_score = NVL(noti_score, 0) + 1  /* 후기 점수(추천) */
         </if>
         <if test="action == 'remove'">
         SET  noti_score = NVL(noti_score, 0) - 1  /* 후기 점수(추천) */
         </if>
            , upd_dt = SYSDATE                     /* 수정 일시 */
       WHERE  tenant_id = #{tenantId}              /* 테넌트 ID */
         AND  noti_seq = #{notiSeq}                /* 후기 SEQ */
    </update>
    
    <!-- 사용후기 전체 갯수 조회 -->
    <select id="getProdNotiCount" parameterType="ProdNoti" resultType="int">
      SELECT  /* FeedbackMapper.xml, getProdNotiCount, SAC 기타, 2014-02-04 */
              COUNT(*) AS total_count      /* 상품 후기 갯수 */
        FROM  tb_dp_prod_noti              /* 상품 후기 */
       WHERE  tenant_id = #{tenantId}      /* 테넌트 ID */
         AND  del_yn = 'N'                 /* 삭제 여부 */
         AND  bad_noti_yn IN ( 'N', 'R' )  /* 불량 후기 여부 */
         AND  spam_yn = 'N'                /* 스펨 여부 */
         AND  noti_type_cd = 'DP000401'    /* 후기 타입 코드 DP000401(댓글) */
         <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(notiSeq)">
         AND  noti_seq = #{notiSeq}        /* 후기 SEQ */
         </if>
         <!-- Shopping -->
         <if test="prodType == 'shopping'">
         AND  catalog_id = #{prodId}       /* 카탈로그 ID */
         <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(chnlId)">
         AND  prod_id = #{chnlId}          /* 상품 ID */
         </if>
         </if>
         <!-- Shopping 외 -->
         <if test="prodType != 'shopping'">
         AND  prod_id = #{prodId}          /* 상품 ID */
         </if>             
    </select>
    
    <!-- 사용후기 전체 목록 조회 -->
     <select id="getProdNotiList" parameterType="ProdNoti" resultType="ProdNoti">
      SELECT  /* FeedbackMapper.xml, getProdNotiList, SAC 기타, 2014-02-04 */
              a.noti_seq       /* 후기 SEQ */
            , a.mbr_no         /* 회원 번호 */
            , a.seller_mbr_no  /* 판매자 회원 번호 */
            , DECODE( a.title, NULL, CASE WHEN LENGTH(NVL(a.noti_dscr,0)) <![CDATA[<=]]> 10 THEN a.noti_dscr ELSE (SUBSTR( a.noti_dscr , 0, 10 )||'...') END , a.title ) AS title  /* 제목 */
            , a.noti_dscr      /* 후기 내용 */
            , NVL( a.noti_score, 0 ) AS noti_score /* 후기 점수(추천) */
            , a.mbr_telno      /* 회원 전화번호 */
            , a.reg_id         /* 등록 ID */
            , TO_CHAR(a.reg_dt,'YYYYMMDDHH24MISS') AS reg_dt  /* 등록 일시 */
            , a.seller_resp_title  /* 판매자 응답 제목 */
            , a.seller_resp_opin   /* 판매자 응답 내용 */
            , NVL2( a.seller_resp_opin, TO_CHAR( a.seller_resp_reg_dt, 'YYYYMMDDHH24MISS' ), NULL ) AS seller_resp_reg_dt  /* 판매자 응답 일시 */
            , a.cid                /* CID */
            , DECODE( a.mbr_no, #{mbrNo}, 'Y', 'N' ) AS self_yn        /* 본인 여부 */
            , DECODE( a.mbr_no, a.seller_mbr_no, 'Y','N' ) AS sale_yn  /* 판매자 여부 */
            , DECODE( a.mbr_no, a.seller_mbr_no, 'seller', #{mbrNo}, 'mine', '' ) AS whose  /* 판매자 본인 식별 */
            , ( CASE WHEN ( 
                           SELECT  COUNT(*)                   /* 상품 후기 선호 갯수 */
                             FROM  tb_dp_prod_notigood l      /* 상품 후기 선호 */
                            WHERE  l.tenant_id = a.tenant_id  /* 테넌트 ID */
                              AND  l.mbr_no = #{mbrNo}        /* 회원 번호 */
                              AND  l.noti_seq = a.noti_seq    /* 후기 SEQ */
                           ) > 0 THEN 'Y'                     /* 선호 갯수가 0보다 큰것 */
                     ELSE 'N'
               END ) AS noti_yn  /* 본인 추천여부 ID */
            , ( 
              SELECT  avg_score                /* 평균 점수 */
                FROM  tb_dp_mbr_avg            /* 상품 평점 */
               WHERE  tenant_id = a.tenant_id  /* 테넌트 ID */
                 AND  prod_id = a.prod_id      /* 상품 ID */
                 AND  mbr_no = a.mbr_no        /* 회원 번호 */
              ) AS avg_score                   /* 평균 점수 */
            , a.fb_post_yn                     /* 페이스북 POST 여부 */
            , a.prod_id                        /* 상품 ID */
            , a.expo_seller_nm                 /* 노출 판매자 명 */
            , a.svc_grp_cd                     /* 서비스 그룹 코드 */
       FROM (
             SELECT  ia.*
               FROM  (
                      SELECT  ia.*
                            , ROWNUM AS rnum
                        FROM (
                              SELECT 
                                     <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isBlank(notiSeq)">
                                        <if test="prodType == 'shopping'">
                                            <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(chnlId)">
                                                <if test="orderedBy == 'recommend'">
                                                /*+ INDEX_DESC(N IDX_DP_PROD_NOTI_05) */
                                                </if>
                                                <if test="orderedBy == 'recent'">
                                                /*+ INDEX_DESC(N IDX_DP_PROD_NOTI_01) */
                                                </if>
                                            </if>
                                            <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isBlank(chnlId)">
                                                <if test="orderedBy == 'recommend'">
                                                /*+ INDEX_DESC(N IDX_DP_PROD_NOTI_06) */
                                                </if>
                                            </if>
                                        </if>
                                     </if>
                                     ia.tenant_id           /* 테넌트 ID */                
                                   , ia.noti_seq            /* 후기 SEQ */
                                   , ia.title               /* 제목 */
                                   , ia.noti_dscr           /* 후기 내용 */
                                   , ia.reg_dt              /* 등록 일시 */
                                   , ia.mbr_no              /* 회원 번호 */
                                   , ia.reg_id              /* 등록 ID */
                                   , ia.mbr_telno           /* 회원 전화번호 */
                                   , ia.noti_score          /* 후기 점수(추천) */
                                   , ia.seller_resp_title   /* 판매자 응답 제목 */
                                   , ia.seller_resp_opin    /* 판매자 응답 의견 */
                                   , ia.seller_resp_reg_dt  /* 판매자 응답 일시 */
                                   , ia.prod_id             /* 상품 ID */
                                   , ia.fb_post_yn          /* 페이스북 POST 여부 */
                                   , ib.seller_mbr_no       /* 판매자 회원 번호 */
                                   , ib.cid                 /* CID */
                                   , ib.svc_grp_cd          /* 서비스 그룹 코드 */
                                   , ib.expo_seller_nm      /* 노출 판매자 명 */
                               FROM  tb_dp_prod_noti ia  /* 상품 후기 */    
                                   , tb_dp_prod ib       /* 상품 */
                              WHERE  ia.tenant_id = #{tenantId}  /* 테넌트 ID */
                                AND  ib.prod_id = ia.prod_id     /* 상품 ID */
                                <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(notiSeq)">
                                AND  ia.noti_seq = #{notiSeq}    /* 후기 SEQ */
                                </if>
                                <!-- Shopping -->
                                <if test="prodType == 'shopping'">
                                AND  ia.catalog_id = #{prodId}   /* 카탈로그 ID */
                                <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(chnlId)">
                                AND  ia.prod_id = #{chnlId}      /* 상품 ID */
                                </if>
                                </if>
                                <!-- Shopping 외 -->
                                <if test="prodType != 'shopping'">
                                AND  ia.prod_id = #{prodId}      /* 상품 ID */
                                </if>
                                AND  ia.noti_type_cd = 'DP000401'  /* 후기 타입 코드 DP000401(댓글) */
                                AND  ia.del_yn = 'N'               /* 삭제 여부 */
                                AND  ia.bad_noti_yn IN ( 'N', 'R' )  /* 불량 후기 여부 */
                                AND  ia.spam_yn = 'N'                /* 스펨 여부 */
                                <!-- 추천순 -->    
                              <if test="orderedBy == 'recommend'">
                              ORDER 
                                 BY  ia.noti_score DESC
                                   , ia.reg_dt DESC
                              </if>
                              <!-- 최신순 -->    
                              <if test="orderedBy == 'recent'">
                              ORDER 
                                 BY  ia.reg_dt DESC
                              </if>
                              ) ia
                       WHERE  ROWNUM <![CDATA[<=]]> #{endRow}
                     ) ia
              WHERE  ia.rnum BETWEEN #{startRow} AND #{endRow}     
            ) a
    </select>
    
    <!-- 자기가작성한 사용후기.  -->
    <select id="getMyProdNotiList" parameterType="ProdNoti" resultType="ProdNoti">
      SELECT  /* FeedbackMapper.xml, getProdNotiList, SAC 기타, 2014-02-04 */
              a.noti_seq       /* 후기 SEQ */
            , a.mbr_no         /* 회원 번호 */
            , a.seller_mbr_no  /* 판매자 회원 번호 */
            , NVL2( a.title, a.title, NVL2( a.noti_dscr, NULL, default_msg ) ) AS title  /* 제목 */
            , NVL2( a.noti_dscr, a.noti_dscr, default_msg ) AS noti_dscr  /* 후기 내용 */
            , NVL( a.noti_score, 0 ) AS noti_score  /* 후기 점수(추천) */
            , a.mbr_telno  /* 회원 전화번호 */
            , a.reg_id     /* 등록 ID */
            , TO_CHAR(a.reg_dt,'YYYYMMDDHH24MISS') AS reg_dt  /* 등록일시 */
            , a.seller_resp_title  /* 판매자 응답 제목 */
            , a.seller_resp_opin   /* 판매자 응답 의견 */
            , NVL2( a.seller_resp_opin, TO_CHAR(a.seller_resp_reg_dt,'YYYYMMDDHH24MISS'), NULL ) AS seller_resp_reg_dt  /* 판매자 응답 일시 */
            , a.cid  /* CID */
            , 'mine' AS WHOSE /* 본인 노출 */
            , ( CASE WHEN ( 
                           SELECT  COUNT(*)                   /* 상품 후기 선호 갯수 */
                             FROM  tb_dp_prod_notigood l      /* 상품 후기 선호 */
                            WHERE  l.tenant_id = a.tenant_id  /* 테넌트 ID */
                              AND  l.mbr_no = #{mbrNo}        /* 회원 번호 */
                              AND  l.noti_seq = a.noti_seq    /* 후기 SEQ */
                          ) > 0 THEN 'Y'                      /* 후기 선호 갯수가 0보다 큰것 */
                     ELSE 'N'
              END ) AS noti_yn  /* 본인 추천 여부 */
            , a.avg_score       /* 평균 점수 */
            , NVL(a.fb_post_yn, 'N') AS fb_post_yn            /* 페이스북 POST 여부 */
            , NVL(a.avg_fb_post_yn, 'N') AS avg_fb_post_yn    /* 평점 페이스북 POST 여부 */
            , a.prod_id         /* 상품 ID */
            , a.expo_seller_nm  /* 노출 판매자 명 */
            , a.svc_grp_cd      /* 서비스 그룹 코드 */
       FROM  
            (  
             SELECT  ia.*
                   , DECODE
                    ( ia.avg_score
                    , 1, #{defaultMsg1}  /* 평균 점수가 1이면 1번 메시지(메시지는 소스상 상수로 선언) */
                    , 2, #{defaultMsg2}  /* 평균 점수가 2이면 2번 메시지(메시지는 소스상 상수로 선언) */
                    , 3, #{defaultMsg3}  /* 평균 점수가 3이면 3번 메시지(메시지는 소스상 상수로 선언) */
                    , 4, #{defaultMsg4}  /* 평균 점수가 4이면 4번 메시지(메시지는 소스상 상수로 선언) */
                    , 5, #{defaultMsg5}  /* 평균 점수가 5이면 5번 메시지(메시지는 소스상 상수로 선언) */
                    , NULL 
                    ) AS default_msg     /* 기본 메시지 */
               FROM
                    (
                     SELECT  ia.*
                           , ROWNUM AS rnum
                       FROM
                            (
                             <!-- MAX 하는 이유? 상품 후기는 없는 평점만 있는 경우, 평점에 있는 데이터만 노출시키기 위해서 -->
                             SELECT  MAX( tenant_id ) AS tenant_id                    /* 테넌트 ID */
                                   , MAX( noti_seq ) AS noti_seq                      /* 후기 SEQ */
                                   , MAX( title ) AS title                            /* 제목 */
                                   , MAX( noti_dscr ) AS noti_dscr                    /* 후기 내용 */
                                   , MAX( reg_dt ) AS reg_dt                          /* 등록 일시 */
                                   , MAX( mbr_no ) AS mbr_no                          /* 회원 번호 */
                                   , MAX( reg_id ) AS reg_id                          /* 등록 ID */
                                   , MAX( mbr_telno ) AS mbr_telno                    /* 회원 전화번호 */
                                   , MAX( noti_score ) AS noti_score                  /* 후기 점수(추천) */
                                   , MAX( seller_resp_title ) AS seller_resp_title    /* 판매자 응답 제목 */
                                   , MAX( seller_resp_opin ) AS seller_resp_opin      /* 판매자 응답 의견 */
                                   , MAX( seller_resp_reg_dt ) AS seller_resp_reg_dt  /* 판매자 응답 일시 */
                                   , MAX( fb_post_yn ) AS fb_post_yn                  /* 페이스북 POST 여부 */
                                   , MAX( avg_fb_post_yn ) AS avg_fb_post_yn          /* 평점 페이스북 POST 여부 */
                                   , MAX( prod_id ) AS prod_id                        /* 상품 ID */
                                   , MAX( seller_mbr_no ) AS seller_mbr_no            /* 판매자 회원 번호 */
                                   , MAX( cid ) AS cid                                /* CID */
                                   , MAX( svc_grp_cd ) AS svc_grp_cd                  /* 서비스 그룹 코드 */
                                   , MAX( avg_score ) AS avg_score                    /* 평균 점수 */
                                   , MAX( expo_seller_nm ) AS expo_seller_nm          /* 노출 판매자 명 */
                              FROM
                                  (
                                   SELECT  *
                                     FROM
                                          (
                                           SELECT  ia.tenant_id           /* 테넌트 ID */ 
                                                 , ia.noti_seq            /* 후기 SEQ */
                                                 , ia.title               /* 제목 */
                                                 , ia.noti_dscr           /* 후기 내용 */
                                                 , ia.reg_dt              /* 등록 일시 */
                                                 , ia.mbr_no              /* 회원 번호 */
                                                 , ia.reg_id              /* 등록 ID */
                                                 , ia.mbr_telno           /* 회원 전화번호 */
                                                 , ia.noti_score          /* 후기 점수(추천) */
                                                 , ia.seller_resp_title   /* 판매자 응답 제목 */
                                                 , ia.seller_resp_opin    /* 판매자 응답 의견 */
                                                 , ia.seller_resp_reg_dt  /* 판매자 응답 일시 */
                                                 , ia.fb_post_yn          /* 페이스북 POST 여부 */
                                                 , NULL AS avg_fb_post_yn /* 평점 페이스북 POST 여부 */
                                                 , ia.prod_id             /* 상품 ID */
                                                 , ib.seller_mbr_no       /* 판매자 회원 번호 */
                                                 , ib.cid                 /* CID */
                                                 , ib.svc_grp_cd          /* 서비스 그룹 코드 */
                                                 , ib.expo_seller_nm      /* 노출 판매자 명 */
                                                 , NULL avg_score         /* 평균 점수 */
                                                 <!-- Analytic Functions 여러건중 최신후기 한 건만을 가져오기 위해서 해당 함수 사용 -->
                                                 , ROW_NUMBER() OVER (PARTITION BY ia.prod_id ORDER BY ia.reg_dt DESC) AS ranking  /* 여러건수중 최신후기 한건*/
                                             FROM  tb_dp_prod_noti ia          /* 상품 후기 */
                                                 , tb_dp_prod ib               /* 상품 */
                                            WHERE  ia.tenant_id = #{tenantId}  /* 테넌트 ID */
                                              AND  ib.prod_id = ia.prod_id     /* 상품 ID */
                                              AND  ia.mbr_no = #{mbrNo}        /* 회원 번호 */
                                              <!-- Shopping -->
                                              <if test="prodType == 'shopping'">
                                              <if test="prodIds != null">
                                              AND  ia.catalog_id IN
                                              <foreach collection="prodIds" item="prodId" open="(" close=")" separator=",">
                                              #{prodId}
                                              </foreach>
                                              </if>
                                              <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(chnlId)">
                                              AND  ia.prod_id = #{chnlId}
                                              </if>
                                              </if>
                                              <!-- Shopping 외 -->
                                              <if test="prodType != 'shopping'">
                                              <if test="prodIds != null">
                                              AND  ia.prod_id IN
                                              <foreach collection="prodIds" item="prodId" open="(" close=")" separator=",">
                                              #{prodId}
                                              </foreach>
                                              </if>
                                              </if>
                                              AND  ia.noti_type_cd = 'DP000401'   /* 후기 타입 코드 DP000401(댓글) */
                                              AND  ia.del_yn = 'N'                /* 삭제 여부 */
                                              AND  ia.bad_noti_yn IN ( 'N', 'R' ) /* 불량 후기 여부 */
                                              AND  ia.spam_yn = 'N'               /* 스펨 여부 */
                                           )
                                    WHERE  ranking = 1
                                   <!-- Shopping 외 ( 쇼핑은 평점관리 안함 )-->
                                   <if test="prodType != 'shopping'">
                                    UNION  ALL
                                   SELECT  NULL AS tenant_id                               
                                         , NULL AS noti_seq
                                         , NULL AS title
                                         , NULL AS noti_dscr
                                         , ic.reg_dt AS reg_dt         /* 등록 일시 */ 
                                         , ic.mbr_no AS mbr_no         /* 회원 번호 */ 
                                         , NULL AS reg_id
                                         , NULL AS mbr_telno
                                         , NULL AS noti_score
                                         , NULL AS seller_resp_title 
                                         , NULL AS seller_resp_opin 
                                         , NULL AS seller_resp_reg_dt 
                                         , NULL AS fb_post_yn
                                         , ic.fb_post_yn AS avg_fb_post_yn
                                         , ic.prod_id                  /* 상품 ID */ 
                                         , NULL AS seller_mbr_no
                                         , NULL AS cid
                                         , NULL AS svc_grp_cd
                                         , NULL AS expo_seller_nm
                                         , ic.avg_score                /* 평균 점수 */ 
                                         , NULL AS ranking
                                     FROM  tb_dp_mbr_avg ic            /* 상품 평점 */ 
                                    WHERE  ic.tenant_id = #{tenantId}  /* 테넌트 ID */ 
                                      AND  ic.mbr_no = #{mbrNo}        /* 회원 번호 */ 
                                      <if test="prodType != 'shopping'">
                                      <if test="prodIds != null">
                                      AND  ic.prod_id IN
                                      <foreach collection="prodIds" item="prodId" open="(" close=")" separator=",">
                                      #{prodId}
                                      </foreach>
                                      </if>
                                      </if>
                                   </if>
                                 )
                             GROUP 
                                BY  prod_id
                             ORDER 
                                BY  reg_dt DESC
                             ) ia
                      WHERE  ROWNUM <![CDATA[<=]]> #{endRow}
                    ) ia
              WHERE ia.rnum BETWEEN #{startRow} AND #{endRow}
            ) a
    </select>
    
    <!-- 자기가 작성한 사용후기 갯수 -->
    <select id="getMyProdNotiCount" parameterType="ProdNoti" resultType="int">
      SELECT  /* FeedbackMapper.xml, getMyProdNotiCount, SAC 기타, 2014-02-04 */
              COUNT(*) AS total_count    /* 후기 갯수 */ 
        FROM (
              SELECT  prod_id AS prod_id
                FROM 
                     (
                      SELECT  *
                        FROM  (
                               SELECT  la.prod_id  /* 상품 ID */ 
                                     , ROW_NUMBER() OVER (PARTITION BY la.prod_id ORDER BY la.reg_dt DESC) AS ranking  /* 여러건수중 최신후기 한건*/ 
                                 FROM  tb_dp_prod_noti la          /* 상품 후기 */
                                     , tb_dp_prod lb               /* 상품 */
                                WHERE  la.tenant_id = #{tenantId}  /* 테넌트 ID */
                                  AND  lb.prod_id = la.prod_id     /* 상품 ID */
                                  AND  la.mbr_no = #{mbrNo}        /* 회원 번호 */
                                  <!-- Shopping -->
                                  <if test="prodType == 'shopping'">
                                  <if test="prodIds != null">
                                  AND  la.catalog_id IN
                                  <foreach collection="prodIds" item="prodId" open="(" close=")" separator=",">
                                  #{prodId}
                                  </foreach>
                                  </if>
                                  <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(chnlId)">
                                  AND  la.prod_id = #{chnlId}
                                  </if>
                                  </if>
                                  <!-- Shopping 외 -->
                                  <if test="prodType != 'shopping'">
                                  <if test="prodIds != null">
                                  AND  la.prod_id IN
                                  <foreach collection="prodIds" item="prodId" open="(" close=")" separator=",">
                                  #{prodId}
                                  </foreach>
                                  </if>
                                  </if> 
                                  AND  la.noti_type_cd = 'DP000401'    /* 후기 타입 코드 DP000401(댓글) */
                                  AND  la.del_yn = 'N'                 /* 삭제 여부 */
                                  AND  la.bad_noti_yn IN ( 'N', 'R' )  /* 불량 후기 여부 */
                                  AND  la.spam_yn = 'N'                /* 스펨 여부 */
                               ) 
                       WHERE  ranking = 1
                         <!-- Shopping 외 ( 쇼핑은 평점관리 안함 )-->
                         <if test="prodType != 'shopping'">
                       UNION  ALL
                      SELECT  lc.prod_id                  /* 상품 ID */
                            , NULL AS ranking              
                        FROM  tb_dp_mbr_avg lc            /* 상품 평점 */
                       WHERE  lc.tenant_id = #{tenantId}  /* 테넌트 ID */   
                         AND  lc.mbr_no = #{mbrNo}        /* 회원 번호 */
                         <if test="prodType != 'shopping'">
                         <if test="prodIds != null">
                         AND  lc.prod_id IN
                         <foreach collection="prodIds" item="prodId" open="(" close=")" separator=",">
                         #{prodId}
                         </foreach>
                         </if>
                         </if>
                         </if>
                     )
               GROUP 
                  BY  prod_id
             ) 
    </select>

    <!-- 판매자 댓글 -->
    <update id="updateSellerResp" parameterType="ProdNoti">
      UPDATE  /* FeedbackMapper.xml, updateSellerResp, SAC 기타, 2014-02-10 */
              tb_dp_prod_noti                         /* 상품 후기 */
         SET  seller_resp_opin = #{sellerRespOpin}    /* 판매자 응답 의견 */
            , seller_resp_title = #{sellerRespTitle}  /* 판매자 응답 제목 */
            , seller_resp_reg_dt = SYSDATE            /* 판매자 응답 일시 */
       WHERE  tenant_id = #{tenantId}                 /* 테넌트 ID */
         AND  noti_seq = #{notiSeq}                   /* 후기 SEQ */
    </update>

    <!-- 평점, 다운로드 조회 -->
    <select id="getProdEvalInfo" parameterType="TenantProdStats" resultType="TenantProdStats">
      SELECT  /* FeedbackMapper.xml, getProdEvalInfo, SAC 기타, 2014-02-13 */
             (
              SELECT LISTAGG (RTRIM (TO_CHAR (avg_score_pct, 'FM990D9'), '.'), ',') WITHIN GROUP (ORDER BY avg_score DESC)
                FROM ( 
                      SELECT  avg_score  /* 평균 점수 */  
                            , NVL (avg_count, 0) AS paticpers_cnt  /* 참여자 수 */
                            , NVL (ROUND ( (avg_count / DECODE(paticpers_cnt, 0, NULL, paticpers_cnt)) * 100, 1), 0) AS avg_score_pct  /* 평균 평점 퍼센트 */
                        FROM  (
                               SELECT  ib.avg_score                                    /* 평균 점수 */
                                     , avg_count                                       /* 평균 점수 갯수 */
                                     , (
                                        SELECT  paticpers_cnt                          /* 참여자 수 */
                                          FROM  tb_dp_tenant_prod_stats                /* 테넌트 상품 통계 */
                                         WHERE  tenant_id = #{tenantId}                /* 테넌트 ID */
                                           AND  prod_id = #{prodId}) AS paticpers_cnt  /*  참여자 수 */
                                          FROM  (
                                                 SELECT  avg_score                       /* 평균 점수 */
                                                       , COUNT (avg_score) AS avg_count  /* 평균 점수 갯수 */
                                                   FROM  tb_dp_mbr_avg                   /* 상품 평점 */
                                                  WHERE  tenant_id = #{tenantId}         /* 테넌트 ID */
                                                    AND  prod_id = #{prodId}             /* 상품 ID */
                                                  GROUP
                                                     BY  avg_score
                                                ) ia
                                              , (
                                                SELECT  LEVEL AS avg_score /* 평균 점수 Dummy(조인조건) */
                                                  FROM  DUAL
                                            CONNECT BY  LEVEL <![CDATA[<]]> 6
                                                ) ib
                                         WHERE  ia.avg_score(+) = ib.avg_score
                                       )
                                       ORDER
                                          BY avg_score DESC
                               )
             ) AS avg_evlu_score_pcts                    /* 평균 평점 페센트 배열 (사용후기 조회시 사용됨) */
            , NVL (tot_evlu_score, 0) AS tot_evlu_score  /* 총 평가 점수 */ 
            , NVL (prchs_cnt, 0) AS dwld_cnt             /* 다운로드 수 */
            , NVL ((CASE WHEN (avg_evlu_score <![CDATA[>]]> 0 AND avg_evlu_score <![CDATA[<]]> 1) THEN 1
                         WHEN avg_evlu_score <![CDATA[>]]> 5                                      THEN 5
                         ELSE ROUND (avg_evlu_score, 1)
              END), 0) AS avg_evlu_score                 /* 평균 평점 */
            , NVL (paticpers_cnt, 0) AS paticpers_cnt    /* 참여자 수 */
            , TRIM ( NVL ( TO_CHAR ( (tot_evlu_score / DECODE(paticpers_cnt, 0, NULL, paticpers_cnt)) / 5.0 * 100, '99900.00'), '0')) AS avg_evlu_score_pct  /* 평균 평점 페센트 */
        FROM  tb_dp_tenant_prod_stats  /* 테넌트 상품 통계 */
       WHERE  tenant_id = #{tenantId}  /* 테넌트 ID */
         AND  prod_id = #{prodId}      /* 상품 ID */      
    </select>
    
    <!-- 참여수 조회 -->
    <select id="getScoreList" parameterType="MbrAvgScore" resultType="MbrAvgScore">
      SELECT  /* FeedbackMapper.xml, getScoreList, SAC 기타, 2014-02-13 */
              avg_score  /* 평균 평점 */
            , NVL (avg_count, 0) AS paticpers_cnt  /* 참여자 수 */
            , NVL (ROUND ( (avg_count / DECODE(paticpers_cnt, 0, NULL, paticpers_cnt)) * 100, 1), 0) AS avg_score_pct  /* 평균 평점 퍼센트 */
        FROM (
              SELECT  ib.avg_score  /* 평균 평점 */
                    , avg_count     /* 평균 평점 갯수 */
                    , (
                       SELECT  paticpers_cnt            /* 참여자 수*/
                         FROM  tb_dp_tenant_prod_stats  /* 테넌트 상품 통계 */
                        WHERE  tenant_id = #{tenantId}  /* 테넌트 ID */
                          AND  prod_id = #{prodId}      /* 상품 ID */
                      ) AS paticpers_cnt                /* 참여자 수 */
                FROM  (
                       SELECT  avg_score                       /* 평균 평점 */
                             , COUNT (avg_score) AS avg_count  /* 평균 평점 갯수 */
                         FROM  tb_dp_mbr_avg                   /* 상품 평점 */
                        WHERE  tenant_id = #{tenantId}         /* 태넌트 ID */
                          AND  prod_id = #{prodId}             /* 상품 ID */
                        GROUP 
                           BY  avg_score
                      ) ia
                    , (
                       SELECT  LEVEL AS avg_score /* 평균 점수 Dummy(조인조건) */
                         FROM  DUAL
                   CONNECT BY  LEVEL <![CDATA[<]]> 6
                      ) ib
               WHERE  ia.avg_score(+) = ib.avg_score
             )
       ORDER 
          BY  avg_score DESC
    </select>
    
    <!-- 채널/에피소드 관계 -->
    <select id="getChannelEpisodeRelation" parameterType="string" resultType="map">
      SELECT   /* FeedbackMapper.xml, getChannelEpisodeRelation, SAC 기타, 2014-03-13 */
              a.prod_id         /* 상품 ID(채널) */
            , a.part_prod_id    /* 에피소드 ID */
            , b.top_menu_id     /* 탑 메뉴 ID */
        FROM  tb_dp_prod_rshp a     /* 상품 관계 */
            , tb_dp_prod b          /* 상품 */
       WHERE  a.part_prod_id = b.prod_id        /* 에피소드 ID */
         AND  a.part_prod_id = #{partProdId}    /* 에피소드 ID */
         AND  a.prod_rshp_cd = 'DP010802'       /* 상품 관계 코드(채널/에피소드 관계) */
    </select>
    
    <!-- 채널/에피소드 관계시 채널상품 존재 여부 확인 -->
    <select id="getChannelTenantProdStatsCount" parameterType="string" resultType="int">
      SELECT  /* FeedbackMapper.xml, getChannelTenantProdStatsCount, SAC 기타, 2014-03-13 */
              COUNT(*)                          /* 채널 상품 갯수 */
        FROM  tb_dp_tenant_prod_stats a         /* 테넌트 상품 통계 */
            , tb_dp_menu_category_prod_mapg b   /* 메뉴 카테고리 상품 매핑 */
            , tb_dp_prod_rshp c                 /* 상품 관계 */
       WHERE  a.prod_id = b.prod_id             /* 상품 ID */
         AND  b.prod_id = c.prod_id             /* 상품 ID */
         AND  c.part_prod_id = #{partProdId}    /* 에피소드 ID */
         AND  c.prod_rshp_cd = 'DP010802'       /* 상품 관계 코드(채널/에피소드 관계) */
    </select>
    
    <!-- 채널/에피소드 관계시 상품통계 채널상품 존재시 전체 에피소드 통계 UPDATE -->
    <update id="updateChannelTenantProdStats" parameterType="TenantProdStats">
      UPDATE  /* FeedbackMapper.xml, updateChannelTenantProdStats, SAC 기타, 2014-03-13 */
              tb_dp_tenant_prod_stats a     /* 테넌트 상품 통계 */
         SET (  avg_evlu_score      /* 평균 평가 점수 */
              , tot_evlu_score      /* 총 평가 점수 */
              , paticpers_cnt       /* 참여자 수 */
              , upd_id              /* 수정 ID */
              , upd_dt              /* 수정 일시 */
             ) 
           = (
              SELECT  
                      DECODE(SUM(d.paticpers_cnt), 0, 0, NVL(SUM(d.tot_evlu_score)/SUM(d.paticpers_cnt), '0.0')) AS avg_evlu_score  /* 평균 평가 점수 */
                    , NVL(SUM(d.tot_evlu_score), '0.0') AS tot_evlu_score                                                           /* 총 평가 점수 */
                    , NVL(SUM(d.paticpers_cnt), '0.0') AS paticpers_cnt                                                             /* 참여자 수 */
                    , #{updId} AS upd_id                                                                                            /* 수정 ID */
                    , SYSDATE AS upd_dt                                                                                             /* 수정 일시 */
                FROM  tb_dp_prod_rshp a                 /* 상품 관계 */
                    , tb_dp_prod b                      /* 상품 */
                    , tb_dp_tenant_prod c               /* 테넌트 상품 */
                    , tb_dp_tenant_prod_stats d         /* 테넌트 상품 통계 */
                    , tb_dp_menu_category_prod_mapg e   /* 메뉴 카테고리 상품 매핑 */
               WHERE  a.part_prod_id = b.prod_id        /* 에피소드 ID */
                 AND  a.prod_id != a.part_prod_id       /* 상품 ID(채널) */
                 AND  b.prod_id = c.prod_id             /* 상품 ID */
                 AND  b.prod_id = d.prod_id(+)          /* 상품 ID */
                 AND  b.prod_id = e.prod_id             /* 상품 ID */
                 AND  c.tenant_id = d.tenant_id         /* 테넌트 ID */
                 AND  a.prod_id = #{prodId}             /* 상품 ID */
                 AND  a.prod_rshp_cd = 'DP010802'       /* 상품 관계 코드(채널/에피소드 관계) */
                 AND  c.prod_status_cd = 'PD000403'     /* 상품 상태 코드(판매중) */
                 AND  c.tenant_id = 'S01'               /* 테넌트 ID */
                 AND  e.use_yn = 'Y'                    /* 사용 여부 */
               GROUP 
                  BY  a.prod_id
             )
      WHERE  a.prod_id = #{prodId}                      /* 상품 ID */
        AND  a.tenant_id = #{tenantId}                  /* 테넌트 ID */
    </update>
    
    <!-- 채널/에피소드 관계시 상품통계 채널상품 미존재시 전체 에피소드 통계 INSERT -->
    <update id="insertChannelTenantProdStats" parameterType="TenantProdStats">
      INSERT  /* FeedbackMapper.xml, insertChannelTenantProdStats, SAC 기타, 2014-03-13 */
        INTO  tb_dp_tenant_prod_stats       /* 테넌트 상품 통계 */
      ( tenant_id       /* 테넌트 ID */
      , prod_id         /* 상품 ID */
      , avg_evlu_score  /* 평균 평가 점수 */
      , tot_evlu_score  /* 총 평가 점수 */
      , paticpers_cnt   /* 참여자 수 */
      , reg_id          /* 등록 ID */
      , reg_dt          /* 등록 일시 */
      )
      SELECT 
              c.tenant_id                                                               /* 테넌트 ID */
            , a.prod_id                                                                 /* 상품 ID */
            , NVL(SUM(d.tot_evlu_score)/SUM(d.paticpers_cnt), '0.0') AS avg_evlu_score  /* 평균 평가 점수 */
            , NVL(SUM(d.tot_evlu_score), '0.0') AS tot_evlu_score                       /* 총 평가 점수 */
            , NVL(SUM(d.paticpers_cnt), '0.0') AS paticpers_cnt                         /* 참여자 수 */
            , #{regId} AS reg_id                                                        /* 등록 ID */
            , SYSDATE AS reg_dt                                                         /* 등록 일시 */
        FROM  tb_dp_prod_rshp a                 /* 상품 관계 */
            , tb_dp_prod b                      /* 상품 */
            , tb_dp_tenant_prod c               /* 테넌트 상품 */
            , tb_dp_tenant_prod_stats d         /* 테넌트 상품 통계 */
            , tb_dp_menu_category_prod_mapg e   /* 메뉴 카테고리 상품 매핑 */
       WHERE  a.part_prod_id = b.prod_id        /* 에피소드 ID */
         AND  a.prod_id != a.part_prod_id       /* 상품 ID(채널) */
         AND  b.prod_id = c.prod_id             /* 상품 ID */
         AND  b.prod_id = d.prod_id(+)          /* 상품 ID */
         AND  b.prod_id = e.prod_id             /* 상품 ID */
         AND  c.tenant_id = d.tenant_id         /* 테넌트 ID */
         AND  a.prod_id = #{prodId}             /* 상품 ID */
         AND  a.prod_rshp_cd = 'DP010802'       /* 상품 관계 코드(채널/에피소드 관계) */
         AND  c.prod_status_cd = 'PD000403'     /* 상품 상태 코드(판매중) */
         AND  c.tenant_id = 'S01'               /* 테넌트 ID */
         AND  e.use_yn = 'Y'                    /* 사용 여부 */
       GROUP 
          BY  c.tenant_id, a.prod_id
    </update>
    
    <!-- 사용후기 전체 갯수 조회V2-->
    <select id="getProdNotiCountV2" parameterType="ProdNoti" resultType="int">
      SELECT  /* FeedbackMapper.xml, getProdNotiCountV2, SAC 기타, 2014-02-04 */
              COUNT(*) AS total_count      /* 상품 후기 갯수 */
        FROM  tb_dp_prod_noti              /* 상품 후기 */
       WHERE  tenant_id = #{tenantId}      /* 테넌트 ID */
         AND  del_yn = 'N'                 /* 삭제 여부 */
         AND  bad_noti_yn IN ( 'N', 'R' )  /* 불량 후기 여부 */
         AND  spam_yn = 'N'                /* 스펨 여부 */
         AND  noti_type_cd = 'DP000401'    /* 후기 타입 코드 DP000401(댓글) */
         <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(notiSeq)">
         AND  noti_seq = #{notiSeq}        /* 후기 SEQ */
         </if>
         <!-- Shopping -->
         <if test="prodType == 'shopping'">
         AND  catalog_id = #{prodId}       /* 카탈로그 ID */
         <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(chnlId)">
         AND  prod_id = #{chnlId}          /* 상품 ID */
         </if>
         </if>
         <!-- Shopping 외 -->
         <if test="prodType != 'shopping'">
         AND  prod_id = #{prodId}          /* 상품 ID */
         
         <if test="orderedBy == 'recent'">
         <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(lastDeployDt)">
         AND to_char(reg_dt, 'YYYYMMDDHH24MISS') <![CDATA[>]]> #{lastDeployDt}       /* 최신 버전만 보기 */
         </if>
         </if>
         
         </if>
    </select>

    <!-- 사용후기 전체 목록 조회V2 -->
     <select id="getProdNotiListV2" parameterType="ProdNoti" resultType="ProdNoti">
      SELECT  /* FeedbackMapper.xml, getProdNotiListV2, SAC 기타, 2014-02-04 */
              a.noti_seq       /* 후기 SEQ */
            , a.mbr_no         /* 회원 번호 */
            , a.seller_mbr_no  /* 판매자 회원 번호 */
            , DECODE( a.title, NULL, CASE WHEN LENGTH(NVL(a.noti_dscr,0)) <![CDATA[<=]]> 10 THEN a.noti_dscr ELSE (SUBSTR( a.noti_dscr , 0, 10 )||'...') END , a.title ) AS title  /* 제목 */
            , a.noti_dscr      /* 후기 내용 */
            , NVL( a.noti_score, 0 ) AS noti_score /* 후기 점수(추천) */
            , a.mbr_telno      /* 회원 전화번호 */
            , a.reg_id         /* 등록 ID */
            , TO_CHAR(a.reg_dt,'YYYYMMDDHH24MISS') AS reg_dt  /* 등록 일시 */
            , a.seller_resp_title  /* 판매자 응답 제목 */
            , a.seller_resp_opin   /* 판매자 응답 내용 */
            , NVL2( a.seller_resp_opin, TO_CHAR( a.seller_resp_reg_dt, 'YYYYMMDDHH24MISS' ), NULL ) AS seller_resp_reg_dt  /* 판매자 응답 일시 */
            , a.cid                /* CID */
            , DECODE( a.mbr_no, #{mbrNo}, 'Y', 'N' ) AS self_yn        /* 본인 여부 */
            , DECODE( a.mbr_no, a.seller_mbr_no, 'Y','N' ) AS sale_yn  /* 판매자 여부 */
            , DECODE( a.mbr_no, a.seller_mbr_no, 'seller', #{mbrNo}, 'mine', '' ) AS whose  /* 판매자 본인 식별 */
            , ( CASE WHEN ( 
                           SELECT  COUNT(*)                   /* 상품 후기 선호 갯수 */
                             FROM  tb_dp_prod_notigood l      /* 상품 후기 선호 */
                            WHERE  l.tenant_id = a.tenant_id  /* 테넌트 ID */
                              AND  l.mbr_no = #{mbrNo}        /* 회원 번호 */
                              AND  l.noti_seq = a.noti_seq    /* 후기 SEQ */
                           ) > 0 THEN 'Y'                     /* 선호 갯수가 0보다 큰것 */
                     ELSE 'N'
               END ) AS noti_yn  /* 본인 추천여부 ID */
            , ( 
              SELECT  avg_score                /* 평균 점수 */
                FROM  tb_dp_mbr_avg            /* 상품 평점 */
               WHERE  tenant_id = a.tenant_id  /* 테넌트 ID */
                 AND  prod_id = a.prod_id      /* 상품 ID */
                 AND  mbr_no = a.mbr_no        /* 회원 번호 */
              ) AS avg_score                   /* 평균 점수 */
            , a.fb_post_yn                     /* 페이스북 POST 여부 */
            , a.prod_id                        /* 상품 ID */
            , a.expo_seller_nm                 /* 노출 판매자 명 */
            , a.svc_grp_cd                     /* 서비스 그룹 코드 */
       FROM (
             SELECT  ia.*
               FROM  (
                      SELECT  ia.*
                            , ROWNUM AS rnum
                        FROM (
                              SELECT 
                                     <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isBlank(notiSeq)">
                                        <if test="prodType == 'shopping'">
                                            <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(chnlId)">
                                                <if test="orderedBy == 'recommend'">
                                                /*+ INDEX_DESC(N IDX_DP_PROD_NOTI_05) */
                                                </if>
                                                <if test="orderedBy == 'recent'">
                                                /*+ INDEX_DESC(N IDX_DP_PROD_NOTI_01) */
                                                </if>
                                            </if>
                                            <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isBlank(chnlId)">
                                                <if test="orderedBy == 'recommend'">
                                                /*+ INDEX_DESC(N IDX_DP_PROD_NOTI_06) */
                                                </if>
                                            </if>
                                        </if>
                                     </if>
                                     ia.tenant_id           /* 테넌트 ID */                
                                   , ia.noti_seq            /* 후기 SEQ */
                                   , ia.title               /* 제목 */
                                   , ia.noti_dscr           /* 후기 내용 */
                                   , ia.reg_dt              /* 등록 일시 */
                                   , ia.mbr_no              /* 회원 번호 */
                                   , ia.reg_id              /* 등록 ID */
                                   , ia.mbr_telno           /* 회원 전화번호 */
                                   , ia.noti_score          /* 후기 점수(추천) */
                                   , ia.seller_resp_title   /* 판매자 응답 제목 */
                                   , ia.seller_resp_opin    /* 판매자 응답 의견 */
                                   , ia.seller_resp_reg_dt  /* 판매자 응답 일시 */
                                   , ia.prod_id             /* 상품 ID */
                                   , ia.fb_post_yn          /* 페이스북 POST 여부 */
                                   , ib.seller_mbr_no       /* 판매자 회원 번호 */
                                   , ib.cid                 /* CID */
                                   , ib.svc_grp_cd          /* 서비스 그룹 코드 */
                                   , ib.expo_seller_nm      /* 노출 판매자 명 */
                               FROM  tb_dp_prod_noti ia  /* 상품 후기 */    
                                   , tb_dp_prod ib       /* 상품 */
                              WHERE  ia.tenant_id = #{tenantId}  /* 테넌트 ID */
                                AND  ib.prod_id = ia.prod_id     /* 상품 ID */
                                <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(notiSeq)">
                                AND  ia.noti_seq = #{notiSeq}    /* 후기 SEQ */
                                </if>
                                <!-- Shopping -->
                                <if test="prodType == 'shopping'">
                                AND  ia.catalog_id = #{prodId}   /* 카탈로그 ID */
                                <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(chnlId)">
                                AND  ia.prod_id = #{chnlId}      /* 상품 ID */
                                </if>
                                </if>
                                <!-- Shopping 외 -->
                                <if test="prodType != 'shopping'">
                                AND  ia.prod_id = #{prodId}      /* 상품 ID */

				                <if test="orderedBy == 'recent'">
				                <if test="@com.skplanet.storeplatform.framework.core.util.StringUtils@isNotBlank(lastDeployDt)">
				                AND to_char(ia.reg_dt, 'YYYYMMDDHH24MISS') <![CDATA[>]]> #{lastDeployDt}       /* 최신 버전만 보기 */
				                </if>
				                </if>
				                
                                </if>
                                AND  ia.noti_type_cd = 'DP000401'  /* 후기 타입 코드 DP000401(댓글) */
                                AND  ia.del_yn = 'N'               /* 삭제 여부 */
                                AND  ia.bad_noti_yn IN ( 'N', 'R' )  /* 불량 후기 여부 */
                                AND  ia.spam_yn = 'N'                /* 스펨 여부 */
                                <!-- 추천순 -->    
                              <if test="orderedBy == 'recommend'">
                              ORDER 
                                 BY  ia.noti_score DESC
                                   , ia.reg_dt DESC
                              </if>
                              <!-- 최신순 -->    
                              <if test="orderedBy == 'recent'">
                              ORDER 
                                 BY  ia.reg_dt DESC
                              </if>
                              ) ia
                       WHERE  ROWNUM <![CDATA[<=]]> #{endRow}
                     ) ia
              WHERE  ia.rnum BETWEEN #{startRow} AND #{endRow}     
            ) a
    </select>    
    
    <select id="getAppProdLastDeployDt" parameterType="map" resultType="ProdNoti">            
		SELECT /* FeedbackMapper.xml, getAppProdLastDeployDt, SAC : 백승현, 2014-10-27 */
            A.PROD_ID, A.SVC_GRP_CD, TO_CHAR(A.LAST_DEPLOY_DT, 'YYYYMMDDHH24MISS') AS LAST_DEPLOY_DT
		FROM 
			TB_DP_PROD A
			,TB_DP_APP_PROD B
			,TB_DP_PROD_RSHP C
			,TB_DP_MENU_CATEGORY_PROD_MAPG D
			,TB_DP_MENU_CATEGORY F
		WHERE 
			A.PROD_ID = B.PROD_ID
			AND A.PROD_ID = C.PROD_ID
			AND C.PROD_RSHP_CD = #{rshpCd}  /* 채널-에피소드 상품 관계 코드 'DP010802' */
			AND A.PROD_ID = D.PROD_ID
			AND D.MENU_ID = F.MENU_ID
			AND D.USE_YN = 'Y'
			AND A.PROD_ID = #{prodId}
    </select>         
    
    <!-- 상품 서비스그룹 조회 -->
    <select id="getProdSvcGrpCd" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT svc_grp_cd FROM TB_DP_PROD WHERE prod_id = #{prodId}
    </select>
</mapper>
