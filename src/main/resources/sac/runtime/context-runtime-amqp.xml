<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
    xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc 				  http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/integration         http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/beans               http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context             http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/integration/http    http://www.springframework.org/schema/integration/http/spring-integration-http-2.2.xsd 
		http://www.springframework.org/schema/integration         http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/spring/config       http://www.springframework.org/schema/spring/config/spring-config.xsd
		http://www.springframework.org/schema/util				  http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/integration/amqp    http://www.springframework.org/schema/integration/amqp/spring-integration-amqp-2.2.xsd
        http://www.springframework.org/schema/rabbit              http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd">

    <!-- 
    <value>cmsapp.sac.request.sync.content.test99999</value>
    <value>cmsapp.sac.request.sync.content.test0001</value>
    <value>cmsapp.sac.response.sync.content.test0001</value>
    <value>tenant1.sac.request.sync.content.test0001</value>
    <value>tenant1.sac.response.sync.content.test0001</value> 
    -->
    
    <rabbit:queue name="#{T(com.skplanet.storeplatform.sac.common.util.MqUtils).buildQueueName('icms-app-refactoring-deploy.sac.deploy.async')}" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue name="#{T(com.skplanet.storeplatform.sac.common.util.MqUtils).buildQueueName('icms-app-admin.sac.device-mapping.async')}" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue name="#{T(com.skplanet.storeplatform.sac.common.util.MqUtils).buildQueueName('icms-app-admin.sac.device-remapping.async')}" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue name="icms-app-refactoring-deploy.deploy-result.async" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue name="sac.icms-app-admin.device-mapping-result.async" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue name="sac.icms-app-admin.device-remapping-result.async" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue name="sac.tenant.member-add-device.async" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue name="sac.tenant.member-mod-device.async" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue name="sac.tenant.member-del-device.async" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue name="sac.tenant.member-retire.async" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>

    <rabbit:queue name="tstore.icms-app-admin.rmc.sync" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>

    <rabbit:queue name="sac-shopping.iprm.deploy.async" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>
    
    
    <bean id="sacRabbitJsonMessageConverter" class="org.springframework.amqp.support.converter.JsonMessageConverter" />

    
    <!-- MQ에서 수신하는 큐 이름들이 정의되어야 합니다. 수신MQ는 rabbit:queue name속성시 buildInboundQueueName을 적용해야 합니다.-->
    <!-- Staging 서버에서는 수신받지 않도록 profile 예외처리 적용 -->
    <beans profile="dev,qa,real">
        <import resource="classpath*:runtime/context-runtime-amqp.xml"/>
 	
	 	<bean class="com.rabbitmq.client.ConnectionFactory">
	        <property name="host" ><value>#{propertiesForSac['skp.mq.server.host']}</value></property>
	        <property name="port" ><value>#{propertiesForSac['skp.mq.server.port']}</value></property>
	        <property name="username" ><value>#{propertiesForSac['skp.mq.server.username']}</value></property>
	        <property name="password" ><value>#{propertiesForSac['skp.mq.server.password']}</value></property>
	        <property name="virtualHost" ><value>#{propertiesForSac['skp.mq.server.virtualHost']}</value></property>
	    </bean>
        
 	
	    <bean id="inboundQueueNames" class="com.skplanet.storeplatform.sac.common.util.MqUtils" factory-method="buildQueueName">
	        <constructor-arg>
	            <list>
	                <value>icms-app-refactoring-deploy.sac.deploy.async</value>
	                <value>icms-app-admin.sac.device-mapping.async</value>
	                <value>icms-app-admin.sac.device-remapping.async</value>
	            </list>
	        </constructor-arg>
	    </bean>

		<rabbit:admin connection-factory="sacRabbitConnectionFactory" auto-startup="true" />
	   	<!--<rabbit:connection-factory id="sacRabbitConnectionFactory" />-->
	   
		<bean id="sacRabbitConnectionFactory" class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory" >
	    	<constructor-arg ref="com.rabbitmq.client.ConnectionFactory" />
	       	<property name="channelCacheSize" value="10"/>
	   	</bean>
	   
	   	<rabbit:template id="storeplatformRabbitTemplate" connection-factory="sacRabbitConnectionFactory" message-converter="sacRabbitJsonMessageConverter" reply-timeout="60000" />
	   
    
	    <!-- CMS DISPLAY RESULT Rabbit Template -->
	    <bean id="cmsAmqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
	        <property name="connectionFactory" ref="sacRabbitConnectionFactory" />
	        <property name="messageConverter" ref="sacRabbitJsonMessageConverter" />
	        <property name="routingKey" value="sac.icms-app-refactoring-deploy.deploy-result.async" />
	    </bean>
	    
	    <!-- CMS DEVICE REMAPPING RESULT Rabbit Template -->
	    <bean id="deviceMappingRabbitTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
	        <property name="connectionFactory" ref="sacRabbitConnectionFactory" />
	        <property name="messageConverter" ref="sacRabbitJsonMessageConverter" />
	        <property name="routingKey" value="sac.icms-app-admin.device-mapping-result.async" />
	    </bean>

        <!-- CMS DEVICE REMAPPING RESULT Rabbit Template -->
        <bean id="deviceRemappingRabbitTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
            <property name="connectionFactory" ref="sacRabbitConnectionFactory" />
            <property name="messageConverter" ref="sacRabbitJsonMessageConverter" />
            <property name="routingKey" value="sac.icms-app-admin.device-remapping-result.async" />
        </bean>
	
	    <!-- Member - Add Device Rabbit Template -->
	    <bean id="memberAddDeviceAmqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
	        <property name="connectionFactory" ref="sacRabbitConnectionFactory" />
	        <property name="messageConverter" ref="sacRabbitJsonMessageConverter" />
	        <property name="routingKey" value="sac.tenant.member-add-device.async" />
	    </bean>
	    <!-- Member - Modify Device Rabbit Template -->
	    <bean id="memberModDeviceAmqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
	        <property name="connectionFactory" ref="sacRabbitConnectionFactory" />
	        <property name="messageConverter" ref="sacRabbitJsonMessageConverter" />
	        <property name="routingKey" value="sac.tenant.member-mod-device.async" />
	    </bean>
	    <!-- Member - Delete Device Rabbit Template -->
	    <bean id="memberDelDeviceAmqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
	        <property name="connectionFactory" ref="sacRabbitConnectionFactory" />
	        <property name="messageConverter" ref="sacRabbitJsonMessageConverter" />
	        <property name="routingKey" value="sac.tenant.member-del-device.async" />
	    </bean>
	    <!-- Member - Retire Rabbit Template -->
	    <bean id="memberRetireAmqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
	        <property name="connectionFactory" ref="sacRabbitConnectionFactory" />
	        <property name="messageConverter" ref="sacRabbitJsonMessageConverter" />
	        <property name="routingKey" value="sac.tenant.member-retire.async" />
	    </bean>
	
	   <!-- Member - Seller Withdraw Rabbit Template -->
	    <bean id="sellerWithdrawAmqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
	        <property name="connectionFactory" ref="sacRabbitConnectionFactory" />
	        <property name="messageConverter" ref="sacRabbitJsonMessageConverter" />
	        <property name="routingKey" value="tstore.icms-app-admin.rmc.sync" />
	    </bean>
	
	   <!-- shopping - Iprm Rabbit Template -->
	    <bean id="shoppingIprmAmqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
	        <property name="connectionFactory" ref="sacRabbitConnectionFactory" />
	        <property name="messageConverter" ref="sacRabbitJsonMessageConverter" />
	        <property name="routingKey" value="sac-shopping.iprm.deploy.async" />
	    </bean>
    </beans>
    
	<!-- Staging 서버에서는 MQ 송수신 하지않도록 "stg" profile 예외처리 적용 -->
    <beans profile="local,stg">
        <!-- 
		<bean id="inboundQueueNames" class="java.lang.String">
		    <constructor-arg>
				<value>sac.dummy.dont-delete-me.async</value>
			</constructor-arg>
	    </bean>
	    -->
	    <!-- CMS DISPLAY RESULT Rabbit Template -->
	    <bean id="cmsAmqpTemplate" class="com.skplanet.storeplatform.sac.common.util.NoOpRabbitTemplate"></bean>
	    <!-- CMS DEVICE REMAPPING RESULT Rabbit Template -->
	    <bean id="deviceMappingRabbitTemplate" class="com.skplanet.storeplatform.sac.common.util.NoOpRabbitTemplate"></bean>
        <!-- CMS DEVICE REMAPPING RESULT Rabbit Template -->
        <bean id="deviceRemappingRabbitTemplate" class="com.skplanet.storeplatform.sac.common.util.NoOpRabbitTemplate"></bean>
	    <!-- Member - Add Device Rabbit Template -->
	    <bean id="memberAddDeviceAmqpTemplate" class="com.skplanet.storeplatform.sac.common.util.NoOpRabbitTemplate"></bean>
	    <!-- Member - Modify Device Rabbit Template -->
	    <bean id="memberModDeviceAmqpTemplate" class="com.skplanet.storeplatform.sac.common.util.NoOpRabbitTemplate"></bean>
	    <!-- Member - Delete Device Rabbit Template -->
	    <bean id="memberDelDeviceAmqpTemplate" class="com.skplanet.storeplatform.sac.common.util.NoOpRabbitTemplate"></bean>
	    <!-- Member - Retire Rabbit Template -->
	    <bean id="memberRetireAmqpTemplate" class="com.skplanet.storeplatform.sac.common.util.NoOpRabbitTemplate"></bean>
	   	<!-- Member - Seller Withdraw Rabbit Template -->
	    <bean id="sellerWithdrawAmqpTemplate" class="com.skplanet.storeplatform.sac.common.util.NoOpRabbitTemplate"></bean>
	   	<!-- shopping - Iprm Rabbit Template -->
	    <bean id="shoppingIprmAmqpTemplate" class="com.skplanet.storeplatform.sac.common.util.NoOpRabbitTemplate"></bean>
	</beans>
</beans> 