<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans               http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/rabbit              http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd">


    <!-- MQ 선언 - Inbound/Outbound 모두 선언되어야 한다 -->
    <rabbit:queue name="sac.dummy.dont-delete-me.async" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue name="sac.tenant.member-add-device.async" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue name="sac.tenant.member-mod-device.async" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue name="sac.tenant.member-del-device.async" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue name="sac.tenant.member-retire.async" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>

    <rabbit:queue name="tstore.icms-app-admin.rmc.sync" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>

    <rabbit:queue name="sac-shopping.iprm.deploy.async" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>
    
    <rabbit:queue name="any.sac.search-interface.async" >
        <rabbit:queue-arguments><entry key="x-ha-policy" value="all" /></rabbit:queue-arguments>
    </rabbit:queue>    

    <!-- Staging 서버에서는 수신받지 않도록 profile 예외처리 적용 -->
    <beans profile="dev,qa,real">
        <import resource="classpath*:runtime/context-runtime-amqp.xml"/>

        <!-- Inbound MQ이름 선언 - Spring integration에서 참조된다. 전처리부가 독립되면서 이부분은 동작을 위한 더미 큐만 선언된다.-->
        <bean id="inboundQueueNames" class="java.lang.String">
            <constructor-arg><value>sac.dummy.dont-delete-me.async</value></constructor-arg>
        </bean>
 	
	 	<bean class="com.rabbitmq.client.ConnectionFactory">
	        <property name="host" ><value>#{propertiesForSac['skp.mq.server.host']}</value></property>
	        <property name="port" ><value>#{propertiesForSac['skp.mq.server.port']}</value></property>
	        <property name="username" ><value>#{propertiesForSac['skp.mq.server.username']}</value></property>
	        <property name="password" ><value>#{propertiesForSac['skp.mq.server.password']}</value></property>
	        <property name="virtualHost" ><value>#{propertiesForSac['skp.mq.server.virtualHost']}</value></property>
	    </bean>
        
        <!-- Outbound 발송용 AmqpTemplate정의 -->
	    <!-- Member - Add Device Rabbit Template -->
	    <bean id="memberAddDeviceAmqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
	        <property name="connectionFactory" ref="storeplatformRabbitConnectionFactory" />
	        <property name="messageConverter" ref="storeplatformRabbitJsonMessageConverter" />
	        <property name="routingKey" value="sac.tenant.member-add-device.async" />
	    </bean>
	    <!-- Member - Modify Device Rabbit Template -->
	    <bean id="memberModDeviceAmqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
	        <property name="connectionFactory" ref="storeplatformRabbitConnectionFactory" />
	        <property name="messageConverter" ref="storeplatformRabbitJsonMessageConverter" />
	        <property name="routingKey" value="sac.tenant.member-mod-device.async" />
	    </bean>
	    <!-- Member - Delete Device Rabbit Template -->
	    <bean id="memberDelDeviceAmqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
	        <property name="connectionFactory" ref="storeplatformRabbitConnectionFactory" />
	        <property name="messageConverter" ref="storeplatformRabbitJsonMessageConverter" />
	        <property name="routingKey" value="sac.tenant.member-del-device.async" />
	    </bean>
	    <!-- Member - Retire Rabbit Template -->
	    <bean id="memberRetireAmqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
	        <property name="connectionFactory" ref="storeplatformRabbitConnectionFactory" />
	        <property name="messageConverter" ref="storeplatformRabbitJsonMessageConverter" />
	        <property name="routingKey" value="sac.tenant.member-retire.async" />
	    </bean>
	
	   <!-- Member - Seller Withdraw Rabbit Template -->
	    <bean id="sellerWithdrawAmqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
	        <property name="connectionFactory" ref="storeplatformRabbitConnectionFactory" />
	        <property name="messageConverter" ref="storeplatformRabbitJsonMessageConverter" />
	        <property name="routingKey" value="tstore.icms-app-admin.rmc.sync" />
	    </bean>
	
	   <!-- shopping - Iprm Rabbit Template -->
	    <bean id="shoppingIprmAmqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
	        <property name="connectionFactory" ref="storeplatformRabbitConnectionFactory" />
	        <property name="messageConverter" ref="storeplatformRabbitJsonMessageConverter" />
	        <property name="routingKey" value="sac-shopping.iprm.deploy.async" />
	    </bean>
	    
       <!-- sacSearchIprmAmqpTemplate - Iprm Rabbit Template -->
        <bean id="sacSearchAmqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
            <property name="connectionFactory" ref="storeplatformRabbitConnectionFactory" />
            <property name="messageConverter" ref="storeplatformRabbitJsonMessageConverter" />
            <property name="routingKey" value="any.sac.search-interface.async" />
        </bean> 	    
    </beans>
    
	<!-- Staging 서버에서는 MQ 송수신 하지않도록 "stg" profile 예외처리 적용 -->
    <beans profile="local,stg">
	    <!-- Member - Add Device Rabbit Template -->
	    <bean id="memberAddDeviceAmqpTemplate" class="com.skplanet.storeplatform.sac.common.util.NoOpRabbitTemplate"/>
	    <!-- Member - Modify Device Rabbit Template -->
	    <bean id="memberModDeviceAmqpTemplate" class="com.skplanet.storeplatform.sac.common.util.NoOpRabbitTemplate"/>
	    <!-- Member - Delete Device Rabbit Template -->
	    <bean id="memberDelDeviceAmqpTemplate" class="com.skplanet.storeplatform.sac.common.util.NoOpRabbitTemplate"/>
	    <!-- Member - Retire Rabbit Template -->
	    <bean id="memberRetireAmqpTemplate" class="com.skplanet.storeplatform.sac.common.util.NoOpRabbitTemplate"/>
	   	<!-- Member - Seller Withdraw Rabbit Template -->
	    <bean id="sellerWithdrawAmqpTemplate" class="com.skplanet.storeplatform.sac.common.util.NoOpRabbitTemplate"/>
	   	<!-- shopping - Iprm Rabbit Template -->
	    <bean id="shoppingIprmAmqpTemplate" class="com.skplanet.storeplatform.sac.common.util.NoOpRabbitTemplate"/>
        <!-- sacSearch - Iprm Rabbit Template -->
        <bean id="sacSearchIprmAmqpTemplate" class="com.skplanet.storeplatform.sac.common.util.NoOpRabbitTemplate"/>
	</beans>
</beans>