<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.2.xsd
                           http://www.springframework.org/schema/jee
                           http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <bean id="sqlSessionFactoryForScMember" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource"     ref="defaultDataSourceForScMember" />
        <property name="configLocation" value="classpath:/member/mybatis/#{propertiesForScMember['jdbc.type']}/mybatis-config.xml" />
        <property name="mapperLocations" >
            <list>
                <value>classpath*:/mybatis/#{propertiesForScMember['jdbc.type']}/mapper/**/*Mapper.xml</value>
                <value>classpath*:/member/mybatis/#{propertiesForScMember['jdbc.type']}/mapper/**/*Mapper.xml</value>
            </list>
        </property>
    </bean>
    <bean id="sqlSessionFactoryForScIdleMember" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource"     ref="defaultDataSourceForScIdleMember" />
        <property name="configLocation" value="classpath:/member/mybatis/#{propertiesForScMember['jdbc.type']}/mybatis-config.xml" />
        <property name="mapperLocations" >
            <list>
                <value>classpath*:/mybatis/#{propertiesForScMember['jdbc.type']}/mapper/**/*Mapper.xml</value>
                <value>classpath*:/member/mybatis/#{propertiesForScMember['jdbc.type']}/mapper/**/*Mapper.xml</value>
            </list>
        </property>
    </bean>

    <bean id="sqlSessionTemplateForScMember" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactoryForScMember"/>
    </bean>
    <bean id="sqlSessionTemplateForScIdleMember" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactoryForScIdleMember"/>
    </bean>

    <bean id="commonDAOForScMember" class="com.skplanet.storeplatform.framework.core.persistence.dao.CommonDAOMyBatisImpl">
        <qualifier value="scMember"/>
        <property name="sqlSessionTemplate" ref="sqlSessionTemplateForScMember" />
    </bean>
    <bean id="commonDAOForScIdleMember" class="com.skplanet.storeplatform.framework.core.persistence.dao.CommonDAOMyBatisImpl">
        <qualifier value="scIdleMember"/>
        <property name="sqlSessionTemplate" ref="sqlSessionTemplateForScIdleMember" />
    </bean>

    <beans profile="dev,qa,stg,real">
        <bean id="defaultDataSourceForScMember" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
            <constructor-arg ref="defaultDataSourceForScMemberJNDI" />
        </bean>
        <jee:jndi-lookup id="defaultDataSourceForScMemberJNDI" jndi-name="#{propertiesForScMember['jdbc.jndi.lookup']}" />
        <bean id="defaultDataSourceForScIdleMember" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
            <constructor-arg ref="defaultDataSourceForScIdleMemberJNDI" />
        </bean>
        <jee:jndi-lookup id="defaultDataSourceForScIdleMemberJNDI" jndi-name="#{propertiesForScMember['jdbc.jndi.idle.lookup']}" />
    </beans>
    <beans profile="local">
        <bean id="defaultDataSourceForScMember" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
            <constructor-arg>
                <bean class="org.apache.tomcat.dbcp.dbcp.BasicDataSource" destroy-method="close">
                    <property name="driverClassName"        value="#{propertiesForScMember['jdbc.driver']}"      />
                    <property name="url"                    value="#{propertiesForScMember['jdbc.url']}"         />
                    <property name="username"               value="#{propertiesForScMember['jdbc.username']}"    />
                    <property name="password"               value="#{propertiesForScMember['jdbc.password']}"    />
                    <property name="validationQuery"        value="select 1 FROM DUAL"            />
                    <property name="connectionProperties"   value="autoReconnect=true;" />
                    <property name="poolPreparedStatements" value="true"  />
                    <property name="initialSize"            value="1"     />    <!-- 풀의 초기에 생성되는 커넥션의 개수 -->
                    <property name="maxActive"              value="10"    />    <!-- 커넥션 풀이 제공할 최대 커넥션의 개수 -->
                    <property name="maxIdle"                value="10"    />    <!-- 최소 보유 커넥션수 -->
                    <property name="minIdle"                value="1"     />    <!-- Idle 상태에 풀이 소유한 최소 커넥션 갯수 -->
                    <property name="maxWait"                value="10000" />    <!-- 커넥션이 존재하지 않을 때, 커넥션을 얻기까지 대기하는 최대 대기시간 -->
                    <property name="removeAbandoned"        value="true"  />    <!-- 유효하지 않는 커넥션의 제거 여부 -->
                    <property name="removeAbandonedTimeout" value="60"    />    <!-- 유효하지 않는 커넥션의 삭제시의 타임아웃 -->
                </bean>
            </constructor-arg>
            <property name="logFormatter">
                <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
                    <property name="loggingType" value="MULTI_LINE" />
                </bean>
            </property>
        </bean>
        <bean id="defaultDataSourceForScIdleMember" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
            <constructor-arg>
                <bean class="org.apache.tomcat.dbcp.dbcp.BasicDataSource" destroy-method="close">
                    <property name="driverClassName"        value="#{propertiesForScMember['jdbc.idle.driver']}"      />
                    <property name="url"                    value="#{propertiesForScMember['jdbc.idle.url']}"         />
                    <property name="username"               value="#{propertiesForScMember['jdbc.idle.username']}"    />
                    <property name="password"               value="#{propertiesForScMember['jdbc.idle.password']}"    />
                    <property name="validationQuery"        value="select 1 FROM DUAL"            />
                    <property name="connectionProperties"   value="autoReconnect=true;" />
                    <property name="poolPreparedStatements" value="true"  />
                    <property name="initialSize"            value="1"     />
                    <property name="maxActive"              value="10"    />
                    <property name="maxIdle"                value="10"    />
                    <property name="minIdle"                value="1"     />
                    <property name="maxWait"                value="10000" />
                    <property name="removeAbandoned"        value="true"  />
                    <property name="removeAbandonedTimeout" value="60"    />
                </bean>
            </constructor-arg>
            <property name="logFormatter">
                <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
                    <property name="loggingType" value="MULTI_LINE" />
                </bean>
            </property>
        </bean>
    </beans>

</beans>
