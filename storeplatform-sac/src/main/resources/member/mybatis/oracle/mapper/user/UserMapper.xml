<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="User">

    <!--  회원 비밀번호 관련 필드 초기화.  -->
    <update id="resetPasswordUser" parameterType="mbrPwd">
        MERGE  /* UserMapper.xml, resetPasswordUser,  SAC(SC), 최진호, 2015-12-24 */
        INTO tb_us_ousermbr_pwd m
        USING  DUAL ON
            (
                m.insd_usermbr_no  = #{memberKey}
            )
        /* 비밀번호가 존재하는 경우 기존 비밀번호 초기화 */
        WHEN  MATCHED THEN
            UPDATE
                SET
                    m.pwd = #{memberPW}
                    ,m.act_tk = null
                    ,m.upd_dt = SYSDATE
        /* 비밀번호가 없는 경우 비밀번호 추가 */
        WHEN  NOT MATCHED THEN
            INSERT
                (
                    m.insd_usermbr_no
                    ,m.pwd
                    ,m.upd_dt
                )
            VALUES
                (
                    #{memberKey}
                    ,#{memberPW}
                    ,SYSDATE
                )
    </update>

    <!-- 회원 비밀번호 존재여부 체크 -->
    <select id="checkUserPassword" parameterType="chkUserPwdRequest" resultType="chkUserPwdResponse">
        SELECT /* UserMapper.xml, checkPasswordUser, SAC(SC), 최진호, 2015-12-23 */
            INSD_USERMBR_NO AS userKey
            ,ACT_TK AS userAuthToken
        FROM
            TB_US_OUSERMBR_PWD
        WHERE
            INSD_USERMBR_NO = #{userKey}
            AND PWD = #{userPw}
    </select>

    <!--  회원 비밀번호 변경. -->
    <update id="updatePasswordUser" parameterType="mbrPwd">
        MERGE  /* UserMapper.xml, updatePasswordUser, SAC(SC), 최진호, 2015-12-22 */
        INTO tb_us_ousermbr_pwd u
        USING DUAL ON
            (
                u.insd_usermbr_no  = #{memberKey}
            )
        /* 비밀번호가 존재하는 경우 신규비밀번호로 업데이트 및 토큰삭제 */
        WHEN MATCHED THEN
            UPDATE
                SET
                    u.pwd = #{memberPW}
                    ,u.act_tk = null
                    ,u.upd_dt = TO_DATE(#{pwRegDate},'YYYYMMDDHH24MISS')
        /* 비밀번호가 없는 경우 비밀번호 추가 */
        WHEN NOT MATCHED THEN
            INSERT
                (
                    u.insd_usermbr_no
                    ,u.pwd
                    ,u.upd_dt
                )
            VALUES
                (
                    #{memberKey}
                    ,#{memberPW}
                    ,SYSDATE
                )
    </update>

    <!-- 사용자 정보 조회 -->
    <select id="searchUser" parameterType="searchUserRequest" resultMap="searchUserResultMap">
        SELECT /* UserMapper.xml, searchUser, SAC(SC), 최진호, 2015-12-21 */
               a.insd_usermbr_no AS userKey,
               (
               SELECT TO_CHAR(upd_dt ,'YYYYMMDDHH24MISS')
                 FROM tb_us_ousermbr_pwd b
                WHERE b.insd_usermbr_no = a.insd_usermbr_no
               ) AS pwRegDate,
               (
               SELECT COUNT(1)
                 FROM tb_us_ousermbr_device c
                WHERE c.insd_usermbr_no = a.insd_usermbr_no
               ) AS totalDeviceCount,
               #{isDormant} AS isDormant
        FROM  tb_us_ousermbr a
        WHERE a.mbr_status_main_cd != 'US010202'
              <foreach collection="keySearchList" item="keySearch"   open="AND" close="" separator="AND">
                   <if test="keySearch.keyType.equalsIgnoreCase('INSD_USERMBR_NO') "> a.insd_usermbr_no =  #{keySearch.keyString} </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('MBR_ID') "> a.mbr_id =  #{keySearch.keyString} </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('USERMBR_NO') "> a.usermbr_no =  #{keySearch.keyString} </if>
               </foreach>
    </select>
    
    <!-- 사용자 정보 조회(휴대기기 정보로 조회) -->
    <select id="searchUserD" parameterType="searchUserRequest" resultMap="searchUserResultMap">
        SELECT  /* UserMapper.xml, searchUserD, SAC(SC), 최진호, 2015-12-21 */
                DISTINCT(l.userKey) as userKey,
                (
                 SELECT  TO_CHAR(upd_dt ,'YYYYMMDDHH24MISS')
                   FROM  tb_us_ousermbr_pwd
                  WHERE  insd_usermbr_no = l.userKey
                ) as pwRegDate,
               (
               SELECT COUNT(1)
                 FROM tb_us_ousermbr_device c
                WHERE c.insd_usermbr_no = l.userKey
               ) AS totalDeviceCount,
               #{isDormant} AS isDormant
          FROM
                (
                 SELECT  a.insd_usermbr_no as userKey
                   FROM  tb_us_ousermbr a
              LEFT JOIN  tb_us_ousermbr_device b ON a.insd_usermbr_no = b.insd_usermbr_no
                  WHERE  a.mbr_status_main_cd != 'US010202' /* 메인상태 != 탈퇴 US010202 */
                    AND  b.auth_yn = 'Y'
               <foreach collection="keySearchList" item="keySearch"   open="AND" close="" separator="AND">
                   <if test="keySearch.keyType.equalsIgnoreCase('INSD_DEVICE_ID') "> b.insd_device_id =  #{keySearch.keyString} </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('DEVICE_ID') "> b.device_id =  #{keySearch.keyString} </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('MDN') "> b.mdn =  #{keySearch.keyString} </if>
               </foreach>
                ORDER BY b.auth_dt DESC) l
                WHERE ROWNUM = 1
    </select>
    

    
    <!-- 사용자 정보 조회 Result Map -->
    <!-- 사용자 회원정보, userMbr -->
    <!-- 사용자 회원징계, userMbrPnsh -->
    <!-- 사용자 실명인증(법정대리인), mbrLglAgent -->
    <!-- 사용자 실명인증(본인), mbrAuth -->
    <!-- 사용자 관리항목, mbrMangItemPtcrList -->
    <!-- 사용자 약관동의, mbrClauseAgreeList -->
    <resultMap id="searchUserResultMap" type="searchUserResponse" >
        <result property="pwRegDate"            column="pwRegDate" />
        <result property="totalDeviceCount"     column="totalDeviceCount" />
        <association
            property="userMbr"
            column="{userKey=userKey}"
            javaType="userMbr"
            select="getUserDetail"/>
        <association
            property="userMbrPnsh"
            column="{userKey=userKey, isDormant=isDormant}"
            javaType="userMbrPnsh"
            select="getUserPunish"/>
        <association
            property="mbrLglAgent"
            column="{userKey=userKey}"
            javaType="mbrLglAgent"
            select="getRealNameParent"/>
        <association
            property="mbrAuth"
            column="{userKey=userKey}"
            javaType="mbrAuth"
            select="getRealNameOwn"/>
        <collection
            property="mbrMangItemPtcrList"
            column="{userKey=userKey}"
            javaType="java.util.ArrayList"
            ofType="mbrMangItemPtcr"
            select="getManagementItemList"/>
        <collection
            property="mbrClauseAgreeList"
            column="{userKey=userKey}"
            javaType="java.util.ArrayList"
            ofType="mbrClauseAgree"
            select="getClauseAgreeList"/>
    </resultMap>

    
    
    <!-- 사용자 회원정보(userID, tenantID), 로그인 -->
    <select id="getUserMbrRetrievePWD" parameterType="userMbrRetrieveUserMbrPwd" resultType="userMbrRetrieveUserMbrPwd">
         SELECT  /* UserMapper.xml, getUserMbrRetrievePWD, SAC(SC), 최진호, 2015-12-21 */
                 a.insd_usermbr_no           userKey,
                 a.mbr_clas_cd               userType,
                 a.mbr_status_main_cd        userMainStatus,
                 a.mbr_status_sub_cd         userSubStatus,
                 a.start_dt,
                 a.end_dt,
                 a.mbr_id                    userID,
                 a.email_addr                userEmail,
                 a.email_recv_yn             isRecvEmail,
                 a.mbr_nm                    userName,
                 a.sex                       userSex,
                 a.birth                     userBirthDay,
                 a.nation_cd                 userCountry,
                 a.lang_cd                   userLanguage,
                 a.entry_day regDate,
                 TO_CHAR( b.upd_dt ,'YYYYMMDDHH24MISS')            updateDate
           FROM  tb_us_ousermbr a
      LEFT JOIN  tb_us_ousermbr_pwd b ON a.insd_usermbr_no = b.insd_usermbr_no 
          WHERE  a.mbr_id = #{userID}
            AND  a.mbr_status_main_cd != 'US010202' /* 메인상태 != 탈퇴 US010202 */
    </select>


    <!-- 사용자 회원정보(사용자 가입여부 조회) -->
    <select id="getUserDetail" resultType="userMbr">
        SELECT  /* UserMapper.xml, getUserDetail, SAC(SC), 윤보영, 2015-12-16 */
                insd_usermbr_no         userKey,
                mbr_clas_cd             userType,
                mbr_status_main_cd      userMainStatus,
                mbr_status_sub_cd       userSubStatus,
                start_dt,
                end_dt,
                mbr_id                  userID,
                realnm_auth_yn          isRealName,
                lgl_agent_agree_yn      isParent,
                email_addr              userEmail,
                email_recv_yn           isRecvEmail,
                mbr_nm                  userName,
                sex                     userSex,
                birth                   userBirthDay,
                nation_cd               userCountry,
                lang_cd                 userLanguage,
                entry_day               regDate,
                upd_email_addr          userUpdEmail
           FROM tb_us_ousermbr
          WHERE insd_usermbr_no = #{userKey}
            AND mbr_status_main_cd != 'US010202' /* 메인상태 != 탈퇴 US010202 */
    </select>

    <!-- DeviceKey 로 MBR_ID 조회(로그인) -->
    <select id="getUserIDByDeviceKey" parameterType="loginUserRequest" resultType="userMbrDevice">
        SELECT  /* UserMapper.xml, getUserIDByDeviceKey, SAC(SC), 윤보영, 2016-01-06 */
                u.userID AS userID,
                u.nativeID AS nativeID,
                u.deviceTelecom AS deviceTelecom,
                u.svcMangNum AS svcMangNum,
                u.deviceModelNo AS deviceModelNo,
                u.deviceId AS deviceId,
                u.mdn AS mdn
        FROM ( SELECT a.mbr_id AS userID,
                b.device_natv_id AS nativeID,
                b.mno_cd AS deviceTelecom,
                b.svc_mang_no AS svcMangNum,
                b.device_model_cd AS deviceModelNo,
                b.device_id AS deviceId,
                b.mdn AS mdn
          FROM  tb_us_ousermbr_device b 
          JOIN  tb_us_ousermbr a
            ON  b.insd_usermbr_no = a.insd_usermbr_no
         WHERE  b.insd_device_id = #{deviceKey}
           AND  b.auth_yn = 'Y'
           AND  a.mbr_status_main_cd != 'US010202' /* 메인상태 != 탈퇴 US010202 */
       ORDER BY b.auth_dt DESC) u
       WHERE ROWNUM = 1
    </select>
    

    <!-- 내부 사용자회원 번호 조회(가입여부 조회) -->
    <select id="getUserKeyByKeySearchList" parameterType="checkDuplicationRequest" resultType="String">
        SELECT  /* UserMapper.xml, getUserKeyByKeySearchList, SAC(SC), 최진호, 2015-12-21 */
                DISTINCT(a.insd_usermbr_no) as userKey
          FROM  tb_us_ousermbr a
         WHERE  a.mbr_status_main_cd != 'US010202' /* 메인상태 != 탈퇴 US010202 */
       <foreach collection="keySearchList" item="keySearch" open="AND" close="" separator="AND">
           <if test=" keySearch.keyType.equalsIgnoreCase('INSD_USERMBR_NO') "> a.insd_usermbr_no =  #{keySearch.keyString} </if>
           <if test=" keySearch.keyType.equalsIgnoreCase('MBR_ID') "> a.mbr_id =  #{keySearch.keyString} </if>
           <if test=" keySearch.keyType.equalsIgnoreCase('USERMBR_NO') "> a.usermbr_no =  #{keySearch.keyString} </if>
           <if test=" keySearch.keyType.equalsIgnoreCase('EMAIL_ADDR') "> a.email_addr =  #{keySearch.keyString} </if>
       </foreach>
    </select>
    
    <!-- 내부 사용자회원 번호 조회(가입여부 조회, 휴대기기 정보로 조회) -->
    <select id="getUserKeyByKeySearchListD" parameterType="checkDuplicationRequest" resultType="String">
        SELECT  /* UserMapper.xml, getUserKeyByKeySearchListD, SAC(SC), 최진호, 2015-12-21 */
                DISTINCT(u.insd_usermbr_no) as userKey
          FROM  ( SELECT a.insd_usermbr_no FROM tb_us_ousermbr a
     LEFT JOIN  tb_us_ousermbr_device b ON a.insd_usermbr_no = b.insd_usermbr_no
         WHERE  a.mbr_status_main_cd != 'US010202' /* 메인상태 != 탈퇴 US010202 */
           AND  b.auth_yn = 'Y'
       <foreach collection="keySearchList" item="keySearch" open="AND" close="" separator="AND">
           <if test=" keySearch.keyType.equalsIgnoreCase('INSD_DEVICE_ID') "> b.insd_device_id =  #{keySearch.keyString} </if>
           <if test=" keySearch.keyType.equalsIgnoreCase('DEVICE_ID') "> b.device_id =  #{keySearch.keyString} </if>
           <if test=" keySearch.keyType.equalsIgnoreCase('MDN') "> b.mdn =  #{keySearch.keyString} </if>
           <if test=" keySearch.keyType.equalsIgnoreCase('SVC_MANG_NO') "> b.svc_mang_no = #{keySearch.keyString} AND MDN IS NOT NULL</if>
       </foreach>
         ORDER BY b.auth_dt DESC) u
         WHERE ROWNUM = 1
    </select>
    

    <!-- 사용자 회원징계 -->
    <select id="getUserPunish" resultType="userMbrPnsh">
        <if test="isDormant.equalsIgnoreCase('N')">
        SELECT  /* UserMapper.xml, getUserPunish, SAC(SC), 윤보영, 2015-12-16 */
                m.*
          FROM  (
                 SELECT  insd_usermbr_no       userKey,
                         pnsh_start_day        restrictStartDate,
                         pnsh_end_day          restrictEndDate,
                         pnsh_clsf_cd          restrictID,
                         decl_publishobj_cnt   restrictCount,
                         reg_dt                restrictRegisterDate,
                         reg_id                restrictOwner
                   FROM  tb_us_ousermbr_pnsh
                  WHERE  insd_usermbr_no = #{userKey}
                  ORDER  BY reg_dt DESC
                ) m
         WHERE  ROWNUM=1
        </if>
        <if test="isDormant.equalsIgnoreCase('Y')">
            SELECT NULL FROM DUAL
        </if>
    </select>
    

    <!-- 사용자 실명인증(법정대리인) -->
    <select id="getRealNameParent" resultType="mbrLglAgent">
        SELECT  /* UserMapper.xml, getRealNameParent, SAC(SC), 최진호, 2015-12-21 */
                n.*
          FROM  (
                 SELECT
                        l.insd_usermbr_no       memberKey,
                        l.auth_seq              sequence,
                        l.lgl_agent_auth_mtd_cd parentRealNameMethod,
                        l.lgl_agent_flnm        parentName,
                        l.lgl_agent_rshp        parentType,
                        to_char(l.lgl_agent_agree_dt ,'YYYYMMDDHH24MISS') parentDate,
                        l.lgl_agent_email       parentEmail,
                        l.lgl_agent_birth       parentBirthDay,
                        l.mno_cd                parentTelecom,
                        l.lgl_agent_hp_no       parentMDN,
                        l.ci                    parentCI,
                        TO_CHAR(l.reg_dt ,'YYYYMMDDHH24MISS') parentRealNameDate,
                        l.system_id             parentRealNameSite
                        ,l.ictry_yn              isDomestic
                   FROM tb_us_ousermbr_lgl_agent l, tb_us_ousermbr m
                  WHERE l.insd_usermbr_no = m.insd_usermbr_no
                    AND m.lgl_agent_agree_yn = 'Y'
                    AND m.mbr_status_main_cd != 'US010202' /* 메인상태 != 탈퇴 US010202 */
                    AND l.insd_usermbr_no = #{userKey}
                  ORDER BY reg_dt DESC
                ) n 
         WHERE ROWNUM=1
    </select>
    
    <!-- 사용자 실명인증(본인) -->
    <select id="getRealNameOwn" resultType="mbrAuth">
        SELECT  /* UserMapper.xml, getRealNameOwn, SAC(SC), 윤보영, 2015-12-16 */
                n.*
          FROM  (
                 SELECT  l.insd_usermbr_no       memberKey,
                         l.auth_seq              sequence,
                         l.ci                    ci,
                         l.di                    di,
                         l.auth_mtd_cd           realNameMethod,
                         l.mno_cd                telecom,
                         l.wils_tel_no           phone,
                         l.birth                 birthDay,
                         l.sex                   sex,
                         l.mbr_nm                name,
                         l.system_id             realNameSite,
                         TO_CHAR( l.auth_dt,'YYYYMMDDHH24MISS') realNameDate,
                         TO_CHAR( l.upd_dt ,'YYYYMMDDHH24MISS') updateDate,
                         l.ictry_yn              isDomestic
                   FROM  tb_us_ousermbr_auth l, tb_us_ousermbr m
                  WHERE  l.insd_usermbr_no = m.insd_usermbr_no
                    AND  l.insd_usermbr_no = #{userKey}
                    AND  m.realnm_auth_yn = 'Y'
                    AND  m.mbr_status_main_cd != 'US010202' /* 메인상태 != 탈퇴 US010202 */
                  ORDER  BY l.auth_seq DESC
                ) n 
         WHERE  ROWNUM=1
    </select>

    <!-- 실명인증 전체 조회 -->
    <select id="getRealNameAll" resultType="mbrAuth">
        SELECT  /* UserMapper.getRealNameAll, 실명인증 전체 조회, wisestone_dinga, 2014-02-25 */
                n.*
          FROM  (
                SELECT  o.*
                  FROM  (
                        SELECT  l.insd_usermbr_no       memberKey,
                                l.auth_seq              sequence,
                                l.ci                    ci,
                                l.di                    di,
                                l.auth_mtd_cd           realNameMethod,
                                l.mno_cd                telecom,
                                l.wils_tel_no           phone,
                                l.birth                 birthDay,
                                l.sex                   sex,
                                l.mbr_nm                name,
                                l.system_id             realNameSite,
                                TO_CHAR( l.auth_dt,'YYYYMMDDHH24MISS') realNameDate,
                                TO_CHAR( l.upd_dt ,'YYYYMMDDHH24MISS') updateDate,
                                l.auth_dt,
                                l.ictry_yn              isDomestic
                          FROM  tb_us_ousermbr_auth l, tb_us_ousermbr m
                         WHERE  l.insd_usermbr_no = m.insd_usermbr_no
                           AND  l.insd_usermbr_no = #{userKey}
                           AND  m.realnm_auth_yn = 'Y'
                        <if test="isDormant.equalsIgnoreCase('N')">
                           UNION ALL
                           
                        SELECT  l.insd_usermbr_no       memberKey,
                                l.auth_seq              sequence,
                                l.ci                    ci,
                                l.di                    di,
                                l.auth_mtd_cd           realNameMethod,
                                l.mno_cd                telecom,
                                l.wils_tel_no           phone,
                                l.birth                 birthDay,
                                l.sex                   sex,
                                l.mbr_nm                name,
                                l.system_id             realNameSite,
                                TO_CHAR( l.auth_dt,'YYYYMMDDHH24MISS') realNameDate,
                                TO_CHAR( l.upd_dt ,'YYYYMMDDHH24MISS') updateDate,
                                l.auth_dt,
                                l.ictry_yn              isDomestic
                          FROM  tb_us_ousermbr_auth_wd l, tb_us_ousermbr_wd m 
                         WHERE  l.insd_usermbr_no = m.insd_usermbr_no
                           AND  l.insd_usermbr_no = #{userKey}
                           AND  m.realnm_auth_yn = 'Y'
                           </if>
                        ) o
                  ORDER BY o.sequence DESC
                ) n
         WHERE  ROWNUM=1
    </select>


    <!-- 사용자 관리항목 -->
    <select id="getManagementItemList" resultType="mbrMangItemPtcr">
        SELECT  /* UserMapper.xml, getManagementItemList, SAC(SC), 윤보영, 2015-12-16 */
                mang_item_cd extraProfile,
                reg_result_value extraProfileValue
          FROM  tb_us_ousermbr_mang_item_ptcr
         WHERE  insd_usermbr_no = #{userKey}
    </select>  

    <!-- 사용자 약관동의 -->
    <select id="getClauseAgreeList" resultType="mbrClauseAgree">
        SELECT  /* UserMapper.xml, getClauseAgreeList, SAC(SC), 윤보영, 2015-12-16 */
                clause_id        extraAgreementID,
                agree_yn         isExtraAgreement,
                TO_CHAR( reg_dt,'YYYYMMDDHH24MISS') regDate,
                TO_CHAR( upd_dt ,'YYYYMMDDHH24MISS') updateDate,
                mand_agree_yn    isMandatory,
                clause_ver       extraAgreementVersion
          FROM  tb_us_ousermbr_clause_agree
         WHERE  insd_usermbr_no = #{userKey}
    </select>  


    <!-- 사용자 약관동의 등록/수정 -->
    <update id="updateAgreement">
        MERGE  /* UserMapper.xml, updateAgreement, SAC(SC), 윤보영, 2015-12-14 */
               INTO tb_us_ousermbr_clause_agree u 
        USING  DUAL ON 
               (
                   u.insd_usermbr_no = #{memberKey}    AND
                   u.clause_id       = #{extraAgreementID}
               )

         WHEN MATCHED THEN
       UPDATE  SET

               u.upd_dt            = SYSDATE
          <if test="isExtraAgreement != null">
               ,u.agree_yn         = #{isExtraAgreement}
          </if>
          <if test="isMandatory != null">
               ,u.mand_agree_yn    = #{isMandatory}
          </if>
          <if test="extraAgreementVersion != null">
               ,u.clause_ver       = #{extraAgreementVersion}
          </if>

         WHEN NOT MATCHED THEN
       INSERT  (            
                    insd_usermbr_no
                   ,clause_id
                   ,agree_yn
                   ,reg_dt
          <if test="isMandatory != null">
                   ,mand_agree_yn
          </if>
          <if test="extraAgreementVersion != null">
                   ,clause_ver
          </if>
               )
       VALUES
               (
                   #{memberKey}
                  ,#{extraAgreementID}
                  ,#{isExtraAgreement}
                  ,SYSDATE
          <if test="isMandatory != null">
                  ,#{isMandatory}
          </if>
          <if test="extraAgreementVersion != null">
                  ,#{extraAgreementVersion}
          </if>
               )
    </update>


    <!-- 사용자 본인/법정대리인 성인인증 수정(실제로는 insert를 수행한다), 성인인증 수정 -->
    <insert id="updateRealName" parameterType="updateRealNameRequest">

        <if test="isOwn != null and isOwn.equalsIgnoreCase('OWN')">
        INSERT  /* UserMapper.xml, updateRealName, SAC(SC), 윤보영, 2015-12-18 */
                INTO tb_us_ousermbr_auth 
                (
                    auth_seq
                    ,insd_usermbr_no
                    ,ci
            <if test="mbrAuth.di != null"> ,di </if>
            <if test="mbrAuth.realNameMethod != null"> ,auth_mtd_cd </if>
            <if test="mbrAuth.telecom != null"> ,mno_cd </if>
            <if test="mbrAuth.phone != null"> ,Wils_tel_no </if>
            <if test="mbrAuth.birthDay != null"> ,birth </if>
            <if test="mbrAuth.sex != null"> ,sex </if>
            <if test="mbrAuth.name != null"> ,mbr_nm </if>
            <if test="mbrAuth.realNameSite != null"> ,system_id </if>
            <if test="mbrAuth.realNameDate != null"> ,auth_dt </if>
                    ,upd_dt
            <if test="mbrAuth.isDomestic != null"> ,ictry_yn</if>
                ) 
        VALUES  (
                    sq_us_mbr_auth.NEXTVAL
                    ,#{userKey}
                    ,#{mbrAuth.ci}
            <if test="mbrAuth.di != null"> ,#{mbrAuth.di} </if>
            <if test="mbrAuth.realNameMethod != null"> ,#{mbrAuth.realNameMethod} </if>
            <if test="mbrAuth.telecom != null"> ,#{mbrAuth.telecom} </if>
            <if test="mbrAuth.phone != null"> ,#{mbrAuth.phone} </if>
            <if test="mbrAuth.birthDay != null"> ,#{mbrAuth.birthDay} </if>
            <if test="mbrAuth.sex != null"> ,#{mbrAuth.sex} </if>
            <if test="mbrAuth.name != null"> ,#{mbrAuth.name} </if>
            <if test="mbrAuth.realNameSite != null"> ,#{mbrAuth.realNameSite} </if>
            <if test="mbrAuth.realNameDate != null"> ,TO_DATE(#{mbrAuth.realNameDate},'YYYYMMDDHH24MISS') </if>
                    ,SYSDATE
            <if test="mbrAuth.isDomestic != null"> ,#{mbrAuth.isDomestic} </if>
                )
       </if>

       <if test="isOwn != null and isOwn.equalsIgnoreCase('PARENT')">
        INSERT  /* UserMapper.xml, updateRealName, SAC(SC), 윤보영, 2015-12-18 */
                INTO tb_us_ousermbr_lgl_agent 
                (
                    auth_seq
                    ,reg_dt
            <if test="mbrLglAgent.parentCI != null">            ,ci</if>
            <if test="mbrLglAgent.parentRealNameMethod != null">,lgl_agent_auth_mtd_cd</if>
                    ,insd_usermbr_no
            <if test="mbrLglAgent.parentType != null">          ,lgl_agent_rshp </if>
            <if test="mbrLglAgent.parentEmail != null">         ,lgl_agent_email </if>
            <if test="mbrLglAgent.parentDate != null">          ,lgl_agent_agree_dt </if>
            <if test="mbrLglAgent.parentRealNameSite != null">  ,system_id </if>
            <if test="mbrLglAgent.parentTelecom != null">       ,mno_cd </if>
            <if test="mbrLglAgent.parentMDN != null">           ,lgl_agent_hp_no </if>
                    ,lgl_agent_flnm
            <if test="mbrLglAgent.parentBirthDay != null">      ,lgl_agent_birth </if>
            <if test="mbrLglAgent.isDomestic != null">          ,ictry_yn</if>
                ) 
        VALUES  
                (
                    SQ_US_USERMBR_LGL_AGENT.NEXTVAL
                    ,SYSDATE
            <if test="mbrLglAgent.parentCI != null">            ,#{mbrLglAgent.parentCI} </if>
            <if test="mbrLglAgent.parentRealNameMethod != null"> ,#{mbrLglAgent.parentRealNameMethod} </if>
                    ,#{userKey}
            <if test="mbrLglAgent.parentType != null">          ,#{mbrLglAgent.parentType} </if>
            <if test="mbrLglAgent.parentEmail != null">         ,#{mbrLglAgent.parentEmail} </if>
            <if test="mbrLglAgent.parentDate != null">          ,TO_DATE(#{mbrLglAgent.parentDate},'YYYYMMDDHH24MISS') </if>
            <if test="mbrLglAgent.parentRealNameSite != null">  ,#{mbrLglAgent.parentRealNameSite} </if>
            <if test="mbrLglAgent.parentTelecom != null">       ,#{mbrLglAgent.parentTelecom} </if>
            <if test="mbrLglAgent.parentMDN != null">           ,#{mbrLglAgent.parentMDN} </if>
                    ,#{mbrLglAgent.parentName}
            <if test="mbrLglAgent.parentBirthDay != null">      ,#{mbrLglAgent.parentBirthDay} </if>
            <if test="mbrLglAgent.isDomestic != null">          ,#{mbrLglAgent.isDomestic} </if>
                )
       </if>
    </insert>
    
    
    <!-- 사용자 상태 변경 히스토리 추가 -->
    <update id="insertUpdateStatusHistory" parameterType="userMbr">
        INSERT  /* UserMapper.xml, insertUpdateStatusHistory, SAC(SC), 윤보영, 2015-12-15 */
                INTO tb_us_ousermbr_his
                (
                    seq
                    ,insd_usermbr_no
                    ,start_dt
                    ,end_dt
                    ,mbr_status_main_cd
                    ,mbr_status_sub_cd
                    ,login_status_cd
                    ,entry_day
                    ,bolter_day
                    ,bolter_reason_cd
                    ,bolter_reason_desc
                    ,upd_dt
                    ,mbr_id
                    ,mbr_nm
                    ,birth
                    ,sex
                    ,email_addr
                    ,email_recv_yn
                    ,realnm_auth_yn
                    ,lgl_agent_agree_yn
                    ,nation_cd
                    ,lang_cd
                    ,system_id
                    ,mbr_clas_cd
                    ,upd_email_addr
                    ,last_login_dt
                    ,last_prchs_dt
                )
        SELECT  SQ_US_USERMBR_HIS.NEXTVAL as SEQ
                ,insd_usermbr_no
                ,start_dt
                ,sysdate /* end_dt */
                ,mbr_status_main_cd
                ,mbr_status_sub_cd
                ,login_status_cd
                ,entry_day
                ,bolter_day
                ,bolter_reason_cd
                ,bolter_reason_desc
                ,sysdate /* upd_dt */
                ,mbr_id
                ,mbr_nm
                ,birth
                ,sex
                ,email_addr
                ,email_recv_yn
                ,realnm_auth_yn
                ,lgl_agent_agree_yn
                ,nation_cd
                ,lang_cd
                ,system_id
                ,mbr_clas_cd
                ,upd_email_addr
                ,last_login_dt
                ,last_prchs_dt
          FROM  tb_us_ousermbr
         WHERE  insd_usermbr_no = #{userKey}
    </update>


    <!-- 사용자 상태 변경 -->
    <update id="updateStatus" parameterType="userMbr">

       UPDATE  /* UserMapper.xml, updateStatus, SAC(SC), 최진호, 2015-12-21 */
               tb_us_ousermbr
          SET  
               start_dt = SYSDATE
               ,end_dt = TO_DATE('29991231235959', 'YYYYMMDDHH24MISS')
               ,upd_dt = SYSDATE
          <if test="userMainStatus != null">
               ,mbr_status_main_cd = #{userMainStatus}
          </if>
          <if test="userSubStatus != null">
               ,mbr_status_sub_cd = #{userSubStatus}
          </if>
          <if test="secedeDate != null">
               ,bolter_day = #{secedeDate}
          </if>
        WHERE  insd_usermbr_no = #{userKey}
    </update>
    
    <select id="isRegistered" parameterType="userMbr" resultType="String">
        SELECT  /* UserMapper.isRegistered, 사용자 ID 조회, wisestone_mikepark, 2013-12-23 */
                INSD_USERMBR_NO as userKey
          FROM  tb_us_ousermbr
         WHERE  MBR_ID = #{userID}
    </select>
    

    <!-- 내부 사용자키 조회(사용자 회원 상태변경) -->
    <select id="getUserKeyInUpdateStatus" parameterType="updateStatusUserRequest" resultType="String">
        SELECT  /* UserMapper.xml, getUserKeyInUpdateStatus, SAC(SC), 최진호, 2015-12-21 */
                distinct(u.userKey)  userKey
          FROM  (
                    SELECT  a.insd_usermbr_no as userKey
                      FROM  tb_us_ousermbr a
                     WHERE  a.mbr_status_main_cd != 'US010202' /* 메인상태 != 탈퇴 US010202 */
                   <foreach collection="keySearchList" item="keySearch"   open="AND" close="" separator="AND">
                       <if test=" keySearch.keyType.equalsIgnoreCase('INSD_USERMBR_NO') "> a.insd_usermbr_no =  #{keySearch.keyString} </if>
                       <if test=" keySearch.keyType.equalsIgnoreCase('MBR_ID') "> a.mbr_id =  #{keySearch.keyString} </if>
                       <if test=" keySearch.keyType.equalsIgnoreCase('USERMBR_NO') "> a.usermbr_no =  #{keySearch.keyString} </if>
                   </foreach>
                ) u
    </select>


    <!-- 내부 사용자키 조회(사용자 회원 상태변경, 휴대기기 정보로 조회) -->
    <select id="getUserKeyInUpdateStatusD" parameterType="updateStatusUserRequest" resultType="String">
        SELECT  /* UserMapper.xml getUserKeyInUpdateStatus, SAC(SC), 최진호, 2015-12-21 */
                distinct(l.userKey)  userKey
                FROM ( SELECT  a.insd_usermbr_no as userKey
                      FROM  tb_us_ousermbr a
                 LEFT JOIN  tb_us_ousermbr_device b 
                        ON  a.insd_usermbr_no = b.insd_usermbr_no
                     WHERE  a.mbr_status_main_cd != 'US010202' /* 메인상태 != 탈퇴 US010202 */
                       AND  b.auth_yn = 'Y'
                   <foreach collection="keySearchList" item="keySearch"   open="AND" close="" separator="AND">
                       <if test=" keySearch.keyType.equalsIgnoreCase('INSD_DEVICE_ID') "> b.insd_device_id =  #{keySearch.keyString} </if>
                       <if test=" keySearch.keyType.equalsIgnoreCase('DEVICE_ID') "> b.device_id =  #{keySearch.keyString} </if>
                       <if test=" keySearch.keyType.equalsIgnoreCase('MDN') "> b.mdn =  #{keySearch.keyString} </if>
                   </foreach>
                ORDER BY b.auth_dt DESC) l
                WHERE ROWNUM = 1
    </select>
    
    
    <select id="isRegisteredKey" parameterType="userMbr" resultType="String">
        SELECT  /* UserMapper.isRegisteredKey, 사용자 ID 조회, wisestone_mikepark, 2013-12-23 */
                insd_usermbr_no as userKey
          FROM  tb_us_ousermbr
         WHERE  insd_usermbr_no = #{userKey}
    </select>
    
    <select id="isRegisteredKeyAndMbrNo" parameterType="userMbr" resultType="mbrOneID">
         SELECT  /* UserMapper.xml, isRegisteredKeyAndMbrNo, SAC(SC), 윤보영, 2015-12-14 */
                insd_usermbr_no as userKey,
                mbr_id as userID
          FROM  tb_us_ousermbr
         WHERE  insd_usermbr_no = #{userKey}
    </select>
    
    <!-- 사용자키 조회(userID, tenantID) -->
    <select id="isRegisteredUserID" parameterType="userMbr" resultType="String">
        SELECT  /* UserMapper.isRegisteredUserID, 사용자 ID 조회, wisestone_dinga, 2014-01-22 */
                insd_usermbr_no as userKey
          FROM  tb_us_ousermbr
         WHERE  mbr_id = #{userID}
           AND  mbr_status_main_cd != 'US010202'
    </select>

    <!-- 사용자키 조회(userKey) -->
    <select id="isRegisteredUserKey" parameterType="userMbr" resultType="String">
        SELECT  /* UserMapper.xml, isRegisteredUserKey, SAC(SC), 최진호, 2015-12-22 */
            INSD_USERMBR_NO as userKey
        FROM
            TB_US_OUSERMBR
        WHERE
            INSD_USERMBR_NO = #{userKey}
            AND  MBR_STATUS_MAIN_CD != 'US010202'
    </select>
    
    <!-- Key에 사용할 시퀀스 조회(사용자) -->
    <select id="getUserSequence" resultType="Integer">
        SELECT  /* UserMapper.getUserSequence, 시퀀스 조회, wisestone_mikepark, 2013-12-23 */
                SQ_US_USERMBR.NEXTVAL as NEXTVAL
          FROM  DUAL
    </select>
    
    <!-- Key에 사용할 시퀀스 조회(사용자) -->
    <select id="getLimitSequence" resultType="Integer">
        SELECT  /* UserMapper.getLimitSequence, 시퀀스 조회, wisestone_mikepark, 2013-12-23 */
                SQ_US_LIMT_TARGET.NEXTVAL as NEXTVAL
          FROM  DUAL
    </select>
    
    <!--  회원 비밀번호 로그인 success. -->
    <update id="updateLoginSuccess" parameterType="mbrPwd">
        MERGE  /* UserMapper.xml, updateLoginSuccess, SAC(SC), 최진호, 2015-12-21 */
        INTO tb_us_ousermbr_pwd m
        USING DUAL ON
            (
                m.insd_usermbr_no = #{memberKey}
            )

         /* 비밀번호가 존재하는 경우 */
        WHEN MATCHED THEN
            UPDATE  SET
                , upd_dt = SYSDATE
        /* 비밀번호가 없는 경우 비밀번호 추가 */
        WHEN NOT MATCHED THEN
            INSERT
                (
                    insd_usermbr_no
                    ,upd_dt
                )
            VALUES
                (
                    #{memberKey}
                    ,SYSDATE
                )
    </update>

    <!--  회원 비밀번호 로그인 fail. -->
    <update id="updateLoginFail" parameterType="mbrPwd">
        MERGE  /* UserMapper.xml, updateLoginFail,  SAC(SC), 최진호, 2015-12-21 */
        INTO tb_us_ousermbr_pwd m
        USING  DUAL ON
            (
                m.insd_usermbr_no = #{memberKey}
            )
        /* 비밀번호가 존재하는 경우 */
        WHEN MATCHED THEN
        /* 비밀번호가 없는 경우 비밀번호 추가 */
        WHEN NOT MATCHED THEN
            INSERT
                (
                    insd_usermbr_no
                    ,upd_dt
                )
            VALUES
                (
                    #{memberKey}
                    ,SYSDATE
                )
    </update>
    
    <!-- 사용자 탈퇴 -->
    <update id="removeUser" parameterType="userMbr">
       UPDATE  /* UserMapper.removeUser, 사용자 탈퇴, wisestone_mikepark, 2013-12-23 */
               tb_us_ousermbr
          SET  bolter_reason_cd = #{secedeReasonCode},           /* 탈퇴_사유_코드 */
               bolter_reason_desc = #{secedeReasonMessage},      /* 탈퇴_사유_설명 */
               mbr_status_main_cd = #{userMainStatus},
               mbr_status_sub_cd = #{userSubStatus},
               bolter_day = #{secedeDate},                       /* 탈퇴_일 */
               start_dt = SYSDATE,
               end_dt = SYSDATE,
               upd_dt = SYSDATE
        WHERE  insd_usermbr_no = #{userKey}
    </update>


    <!-- 회원 개인식별 탈퇴 정보 저장 -->
    <update id="removeUserToUsermbrPrsnStWd" parameterType="userMbr">
        INSERT  /* UserMapper.removeUserToUsermbrPrsnStWd, 회원 개인식별 탈퇴 정보 저장, wisestone_dinga, 2014-01-17 */
                INTO tb_us_ousermbr_prsn_st_wd 
                (
                    seq,
                    mbr_id,
                    mbr_nm,
                    email_addr,
                    ins_dt
                )
        SELECT  SQ_US_USERMBR_PRSN_STYL_WD.nextval as seq,
                mbr_id,
                mbr_nm,
                email_addr,
                SYSDATE
          FROM  tb_us_ousermbr
         WHERE  insd_usermbr_no = #{userKey}
    </update>

    <!-- 법정_대리인_동의_여부 수정 -->
    <update id="updateLglAgentAgreeYN" parameterType="userMbr">
        UPDATE  /* UserMapper.xml, updateLglAgentAgreeYN, SAC(SC), 윤보영, 2015-12-14 */
                tb_us_ousermbr
           SET  lgl_agent_agree_yn = #{isParent},
                  upd_dt = SYSDATE,
                  start_dt = SYSDATE,
                  system_id = #{systemID}
         WHERE  insd_usermbr_no = #{userKey}
    </update>


    <!-- 실명인증_여부 수정 -->
    <update id="updateRealNameAuthYN" parameterType="userMbr">
        UPDATE  /* UserMapper.xml, updateRealNameAuthYN, SAC(SC), 윤보영, 2015-12-14 */
                tb_us_ousermbr
           SET  realnm_auth_yn = #{isRealName},
                mbr_nm = #{userName, jdbcType=VARCHAR},
                birth = #{userBirthDay, jdbcType=VARCHAR},
                sex = #{userSex, jdbcType=VARCHAR},
                upd_dt = SYSDATE,
                start_dt = SYSDATE,
                system_id = #{systemID}
         WHERE  insd_usermbr_no = #{userKey}
    </update>


    <!-- 사용자 가입 -->
    <update id="createUser" parameterType="userMbr">
        INSERT /* UserMapper.xml, createUser, SAC(SC), 윤보영, 2015-12-14  */
               INTO tb_us_ousermbr (
               insd_usermbr_no,
               mbr_clas_cd,         /* 회원_분류_코드, US011501(모바일회원) , US011502(IDP 회원) , US011503(OneID 회원) */
               mbr_status_main_cd,
               mbr_status_sub_cd,
               entry_day,
               start_dt,
               upd_dt
               <if test="userID != null">,mbr_id </if>
               <if test="userName != null">,mbr_nm </if>
               <if test="userBirthDay != null">,birth </if>
               <if test="userSex != null">,sex </if>
               <if test="userEmail != null">,email_addr </if>
               <if test="isRecvEmail != null">,email_recv_yn </if>
               <if test="isRealName != null">,realnm_auth_yn </if>
               <if test="isParent != null">,lgl_agent_agree_yn </if>
               <if test="userCountry != null">,nation_cd </if>
               <if test="userLanguage != null">,lang_cd </if>
               <if test="systemID != null">,system_id</if>
        ) VALUES (
            #{userKey},
            #{userType},
            #{userMainStatus},
            #{userSubStatus},
            #{regDate}, /* entry_day */
            SYSDATE, /* start_dt */
            SYSDATE /* upd_dt */
            <if test="userID != null">,#{userID} </if>
            <if test="userName != null">,#{userName} </if>
            <if test="userBirthDay != null">,#{userBirthDay} </if>
            <if test="userSex != null">,#{userSex} </if>
            <if test="userEmail != null">,#{userEmail} </if>
            <if test="isRecvEmail != null">,#{isRecvEmail} </if>
            <if test="isRealName != null">,#{isRealName} </if>
            <if test="isParent != null">,#{isParent} </if>
            <if test="userCountry != null">,#{userCountry} </if>
            <if test="userLanguage != null">,#{userLanguage} </if>
            <if test="systemID != null">,#{systemID} </if>
        )
    </update>
    
    <!-- 사용자 기본정보 수정 -->
    <update id="updateUser" parameterType="userMbr">
         UPDATE  /* UserMapper.xml, updateUser, SAC(SC), 윤보영, 2015-12-15 */
                tb_us_ousermbr 
           SET  insd_usermbr_no = #{userKey},
                upd_dt = SYSDATE,
                start_dt = SYSDATE
                <if test="userID != null">,mbr_id = #{userID}</if>
                <if test="userName != null">,mbr_nm = #{userName}</if>
                <if test="userBirthDay != null">,birth = #{userBirthDay}</if>
                <if test="userSex != null">,sex = #{userSex}</if>
                <if test="userEmail != null">,email_addr = #{userEmail}</if>
                <if test="isRecvEmail != null">,email_recv_yn = #{isRecvEmail}</if>
                <if test="isRealName != null">,realnm_auth_yn = #{isRealName}</if>
                <if test="isParent != null">,lgl_agent_agree_yn = #{isParent}</if>
                <if test="userCountry != null">,nation_cd = #{userCountry}</if>
                <if test="userLanguage != null">,lang_cd = #{userLanguage}</if>
                <if test="systemID != null">,system_id = #{systemID}</if>
                <if test="userType != null">,mbr_clas_cd = #{userType}</if>
                <if test="userMainStatus != null">,mbr_status_main_cd = #{userMainStatus}</if>
                <if test="userSubStatus != null">,mbr_status_sub_cd = #{userSubStatus}</if>
                <if test="secedeDate != null">,bolter_day = #{secedeDate}</if>
                <if test="userUpdEmail != null">,upd_email_addr = #{userUpdEmail}</if>
         WHERE  insd_usermbr_no = #{userKey}
    </update>
    
    <!-- 사용자 부가정보 목록 조회 -->
    <select id="searchManagementList" parameterType="searchManagementListRequest" resultMap="searchManagementListResultMap">
        SELECT  /* UserMapper.searchManagementList, 사용자 부가정보 목록 조회, wisestone_dinga, 2014-01-15 */
                #{userKey}  userKey
          FROM  tb_us_ousermbr
         WHERE  ROWNUM = 1 
    </select>
    
    <!-- 사용자 부가정보, mbrMangItemPtcr -->
    <resultMap id="searchManagementListResultMap" type="searchManagementListResponse" >
        <result property="userKey"            column="userKey" />
        <collection
            property="mbrMangItemPtcrList"
            column="{userKey=userKey}"
            javaType="java.util.ArrayList"
            ofType="mbrMangItemPtcr"
            select="getManagementItemList"/>
    </resultMap>


    
    
    <!-- 사용자 약관동의 목록 조회 -->
    <select id="searchAgreementList" parameterType="searchAgreementListRequest" resultMap="searchAgreementListResultMap">
        SELECT  /* UserMapper.searchAgreementList, 사용자 약관동의 목록 조회, wisestone_dinga, 2014-01-15 */
                #{userKey}  userKey
          FROM  tb_us_ousermbr
         WHERE  ROWNUM = 1
    </select>
    
    <!-- 사용자 약관동의 목록 조회, MbrClauseAgree -->
    <resultMap id="searchAgreementListResultMap" type="searchAgreementListResponse" >
        <result property="userKey"            column="userKey" />
        <collection
            property="mbrClauseAgreeList"
            column="{userKey=userKey}"
            javaType="java.util.ArrayList"
            ofType="mbrClauseAgree"
            select="getClauseAgreeList"/>
    </resultMap>


    <!-- 사용자 부가정보 등록/수정 -->
    <update id="updateManagement">
        MERGE  /* UserMapper.xml, updateManagement, SAC(SC), 윤보영, 2015-12-14 */
               INTO tb_us_ousermbr_mang_item_ptcr u
        USING  DUAL ON 
               (
                       u.insd_usermbr_no  = #{userKey}
                   AND u.mang_item_cd     = #{extraProfile}
               )

         /* 부가정보 수정 */
         WHEN  MATCHED THEN
       UPDATE  SET 
               u.reg_result_value = #{extraProfileValue}
               ,upd_dt = SYSDATE
          <if test="updateID != null">
               ,u.upd_id = #{updateID}
          </if>

         /* 부가정보 등록 */
         WHEN NOT MATCHED THEN
       INSERT (
                    insd_usermbr_no
                  , mang_item_cd
                  , reg_result_value
                  , reg_dt
          <if test="regID != null">
                  , reg_id
          </if>
              ) 
              VALUES 
              (
                    #{userKey}
                  , #{extraProfile}
                  , #{extraProfileValue}
                  , SYSDATE
          <if test="regID != null">
                  , #{regID}
          </if>
              )
    </update>
    
    
    
    <!-- 사용자 부가정보 삭제 -->
    <delete id="removeManagement" parameterType="mbrMangItemPtcr">
        DELETE  /* UserMapper.removeManagement, 사용자 부가정보 삭제, wisestone_dinga, 2014-01-15 */
          FROM  tb_us_ousermbr_mang_item_ptcr
         WHERE  mang_item_cd = #{extraProfile}
           AND  insd_usermbr_no = #{userKey}
    </delete>

    <!-- OCB 목록 조회 -->
    <select id="searchOCBList" parameterType="searchMemberPointRequest" resultMap="searchMemberPointListResultMap">
        SELECT  /* UserMapper.searchOCBList, OCB 목록 조회, wisestone_dinga, 2014-01-15 */
                #{userKey}  userKey
          FROM  tb_us_ousermbr
         WHERE  ROWNUM = 1 
    </select>
    
    <!-- OCB -->
    <resultMap id="searchMemberPointListResultMap" type="searchMemberPointResponse" >
        <collection
            property="memberPointList"
            column="{userKey=userKey}"
            javaType="java.util.ArrayList"
            ofType="memberPoint"
            select="getMemberPointList"/>
    </resultMap>
    
    <!-- OCB -->
    <select id="getMemberPointList" resultType="memberPoint">
        SELECT  /* UserMapper.getMemberPointList, OCB, wisestone_dinga, 2014-01-15 */
                insd_usermbr_no userKey,
                ocb_auth_mtd_cd authMethodCode,
                PKG_CRYPTO.DECRYPT(ocb_no) cardNumber,
                use_yn isUsed,
                TO_CHAR( reg_dt,'YYYYMMDDHH24MISS') regDate,
                TO_CHAR( use_start_dt,'YYYYMMDDHH24MISS') startDate,
                TO_CHAR( use_end_dt,'YYYYMMDDHH24MISS') endDate
          FROM  tb_us_ousermbr_ocb
         WHERE  insd_usermbr_no = #{userKey}
           AND  use_yn = 'Y'
           AND  SYSDATE BETWEEN use_start_dt AND use_end_dt
    </select>
    
    <!-- policy 업데이트 History -->
    <update id="updatePolicyHistory">
       UPDATE tb_us_olimt_target   /* updatePolicyHistory.updatePolicyHistory, policy 업데이트 History, wisestone_mikepark, 2014-06-27 */
          SET 
              end_dt = SYSDATE,
              upd_id = #{updateID},
              upd_dt = SYSDATE
       WHERE limt_policy_cd  = #{limitPolicyCode} 
         AND limt_policy_key  = #{limitPolicyKey}
         AND seq = #{limitTargetNo}
    </update>
    
    <!-- policy 등록 -->
    <insert id="insertPolicy">
       INSERT /* updatePolicyHistory.insertPolicy, policy 업데이트 History, wisestone_mikepark, 2014-06-27 */
              INTO tb_us_olimt_target (
                   seq,
                   limt_policy_cd,
                   start_dt,
                   reg_id,
                   reg_dt
               <if test="policyApplyValue != null">,policy_apply_value </if>
               <if test="updateID != null">,upd_id </if>
               <if test="limitPolicyKey != null">,limt_policy_key </if>

               <if test="permissionType != null">,pmt_type </if>
               <if test="isUsed != null">,use_yn </if>
               <if test="limitAmount != null">,limt_amt </if>
               <if test="preLimitAmount != null">,pre_limt_amt </if>
               <if test="lineMangStatus != null">,line_mang_status </if>
               <if test="endDate != null">,end_dt </if>
               <if test="insDate != null">,ins_dt </if>
               ) 
       VALUES  (
                   SQ_US_LIMT_TARGET.NEXTVAL,
                   #{limitPolicyCode},
                   SYSDATE,
                   #{regID},
                   SYSDATE
               <if test="policyApplyValue != null">,#{policyApplyValue} </if>
               <if test="updateID != null">,#{updateID} </if>
               <if test="limitPolicyKey != null">,#{limitPolicyKey} </if>

               <if test="permissionType != null">,#{permissionType} </if>
               <if test="isUsed != null">,#{isUsed} </if>
               <if test="limitAmount != null">,#{limitAmount} </if>
               <if test="preLimitAmount != null">,#{preLimitAmount} </if>
               <if test="lineMangStatus != null">,#{lineMangStatus} </if>
               <if test="endDate != null">,to_date(#{endDate}, 'YYYYMMDDHH24MISS') </if>
               <if test="insDate != null">,to_date(#{insDate}, 'YYYYMMDDHH24MISS') </if>
               )
    </insert>
    
    <!-- policy 등록/수정 -->
    <update id="updatePolicy">
        MERGE  /* UserMapper.updatePolicy, policy 등록/수정, wisestone_dinga, 2013-12-30 */
               INTO tb_us_olimt_target u
        USING  DUAL ON
               (
                       u.limt_policy_cd  = #{limitPolicyCode} 
                   AND u.limt_policy_key  = #{limitPolicyKey}
               )
         WHEN  MATCHED THEN
       UPDATE  SET 
               u.upd_dt = SYSDATE
               , u.start_dt = SYSDATE
               , u.end_dt = TO_DATE('29991231235959', 'YYYYMMDDHH24MISS')
               <if test="policyApplyValue != null">,u.policy_apply_value  = #{policyApplyValue} </if>
               <if test="updateID != null">,u.upd_id = #{updateID} </if>

               <if test="permissionType != null">,u.pmt_type = #{permissionType} </if>
               <if test="isUsed != null">,u.use_yn = #{isUsed} </if>

               <if test="limitAmount != null">
               ,u.pre_limt_amt = (SELECT  limt_amt 
                                   FROM  tb_us_olimt_target
                                  WHERE  limt_policy_cd = #{limitPolicyCode}
                                    AND  limt_policy_key = #{limitPolicyKey}
                                  )
               ,u.limt_amt = #{limitAmount}
               </if>
         WHEN  NOT MATCHED THEN
       INSERT  (
                   seq,
                   limt_policy_cd,
                   start_dt,
                   reg_id,
                   reg_dt
               <if test="policyApplyValue != null">,policy_apply_value </if>
               <if test="updateID != null">,upd_id </if>
               <if test="limitPolicyKey != null">,limt_policy_key </if>

               <if test="permissionType != null">,pmt_type </if>
               <if test="isUsed != null">,use_yn </if>
               <if test="limitAmount != null">,limt_amt </if>
               <if test="preLimitAmount != null">,pre_limt_amt </if>
               ) 
       VALUES  (
                   SQ_US_LIMT_TARGET.NEXTVAL,
                   #{limitPolicyCode},
                   SYSDATE,
                   #{regID},
                   SYSDATE
               <if test="policyApplyValue != null">,#{policyApplyValue} </if>
               <if test="updateID != null">,#{updateID} </if>
               <if test="limitPolicyKey != null">,#{limitPolicyKey} </if>

               <if test="permissionType != null">,#{permissionType} </if>
               <if test="isUsed != null">,#{isUsed} </if>
               <if test="limitAmount != null">,#{limitAmount} </if>
               <if test="preLimitAmount != null">,#{preLimitAmount} </if>
               )
    </update>


    <!-- policy Key 수정 -->
    <update id="updatePolicyKey">
       UPDATE  /* UserMapper.updatePolicyKey, policy Key 수정, wisestone_dinga, 2014-02-25 */
               tb_us_olimt_target
          SET  limt_policy_key = #{newLimitPolicyKey}
        WHERE  limt_policy_key = #{oldLimitPolicyKey}
    </update>

    <!-- policy Value 수정 -->
    <update id="updatePolicyValue">
       UPDATE  /* UserMapper.updatePolicyValue, apply value 수정, wisestone_dinga, 2014-02-25 */
               tb_us_olimt_target
          SET  policy_apply_value = #{newApplyValue}
        WHERE  policy_apply_value = #{oldApplyValue}
    </update>
    
    <!-- OCB 등록/수정 -->
    <insert id="updateOCB">
       INSERT  /* UserMapper.updateOCB, OCB 등록/수정, wisestone_dinga, 2014-02-17 */
               INTO tb_us_ousermbr_ocb
               (
                   insd_usermbr_no,
                   ocb_auth_mtd_cd,
                   use_yn,
                   ocb_no,
                   use_start_dt,
                   reg_dt
                   <if test="endDate != null">,use_end_dt </if>
                   <if test="regID != null">,reg_id </if>
               )
       VALUES 
               (
                   #{userKey},
                   #{authMethodCode},
                   'Y',
                   PKG_CRYPTO.ENCRYPT(#{cardNumber}),
                   SYSDATE,
                   SYSDATE
                   <if test="endDate != null">,TO_DATE(#{endDate},'YYYYMMDDHH24MISS') </if>
                   <if test="regID != null">,#{regID} </if>
               )
    </insert>
    
    <!-- OCB 삭제 -->
    <update id="removeOCB" parameterType="memberPoint">
        UPDATE  /* UserMapper.removeOCB, OCB 삭제, wisestone_dinga, 2013-12-30 */
                tb_us_ousermbr_ocb
           SET  use_yn = 'N',
                use_end_dt = SYSDATE
         WHERE  insd_usermbr_no = #{userKey}
           AND  PKG_CRYPTO.DECRYPT(ocb_no) = #{cardNumber}
    </update>
    
    <!-- OCB 삭제 -->
    <update id="removeOCBAll" parameterType="memberPoint">
        UPDATE  /* UserMapper.removeOCBAll, All OCB 삭제, wisestone_dinga, 2013-12-30 */
                tb_us_ousermbr_ocb
           SET  use_yn = 'N',
                use_end_dt = SYSDATE
         WHERE  insd_usermbr_no = #{userKey}
           AND  use_yn = 'Y'
    </update>
    
    <!-- Policy 삭제 -->
    <update id="removePolicy" parameterType="limitTarget">
        UPDATE  /* UserMapper.removePolicy, Policy 삭제, wisestone_dinga, 2013-12-30 */
                tb_us_olimt_target
           SET  end_dt = SYSDATE
         WHERE  limt_policy_cd = #{limitPolicyCode}
           AND  limt_policy_key = #{limitPolicyKey}
    </update>
    
    <!-- 사용자 본인 실명인증 수정(실제로는 insert를 수행한다), 가입, 회원수정 -->
    <insert id="updateOwnRealName" parameterType="mbrAuth">
        INSERT  /* UserMapper.xml, updateOwnRealName, SAC(SC), 윤보영, 2015-12-14 */
                INTO tb_us_ousermbr_auth 
                (
                    auth_seq
                    ,insd_usermbr_no
                    ,ci
                <if test="di != null"> ,di </if>
                <if test="realNameMethod != null"> ,auth_mtd_cd </if>
                <if test="telecom != null"> ,mno_cd </if>
                <if test="phone != null"> ,wils_tel_no </if>
                <if test="birthDay != null"> ,birth </if>
                <if test="sex != null"> ,sex </if>
                <if test="name != null"> ,mbr_nm </if>
                <if test="realNameSite != null"> ,system_id </if>
                <if test="realNameDate != null"> ,auth_dt </if>
                <if test="updateDate != null"> ,upd_dt </if>
                <if test="isDomestic != null"> ,ictry_yn</if>
                ) 
                VALUES 
                (
                    SQ_US_MBR_AUTH.NEXTVAL
                    ,#{memberKey}
                    ,#{ci}
                <if test="di != null"> ,#{di} </if>
                <if test="realNameMethod != null"> ,#{realNameMethod} </if>
                <if test="telecom != null"> ,#{telecom} </if>
                <if test="phone != null"> ,#{phone} </if>
                <if test="birthDay != null"> ,#{birthDay} </if>
                <if test="sex != null"> ,#{sex} </if>
                <if test="name != null"> ,#{name} </if>
                <if test="realNameSite != null"> ,#{realNameSite} </if>
                <if test="realNameDate != null"> ,TO_DATE(#{realNameDate},'YYYYMMDDHH24MISS') </if>
                <if test="updateDate != null"> ,TO_DATE(#{updateDate},'YYYYMMDDHH24MISS') </if>
                <if test="isDomestic != null"> ,#{isDomestic} </if>
                )
    </insert>
    
    <!-- 사용자 법정대리인 실명인증 수정(실제로는 insert를 수행한다), 가입, 회원수정 -->
    <insert id="updateAgentRealName" parameterType="mbrLglAgent">
         INSERT  /* UserMapper.xml, updateAgentRealName, SAC(SC), 윤보영, 2015-12-14 */
                INTO tb_us_ousermbr_lgl_agent 
                (
                    auth_seq
                    ,reg_dt
            <if test="parentCI != null">                        ,ci</if>
            <if test="parentRealNameMethod != null">,lgl_agent_auth_mtd_cd</if>
                    ,insd_usermbr_no
            <if test="parentType != null">          ,lgl_agent_rshp </if>
            <if test="parentEmail != null">         ,lgl_agent_email </if>
            <if test="parentDate != null">          ,lgl_agent_agree_dt </if>
            <if test="parentRealNameSite != null">  ,system_id </if>
            <if test="parentTelecom != null">       ,mno_cd </if>
            <if test="parentMDN != null">           ,lgl_agent_hp_no </if>
                    ,lgl_agent_flnm
            <if test="parentBirthDay != null">      ,lgl_agent_birth </if>
            <if test="isDomestic != null">          ,ictry_yn </if>
                ) 
         VALUES 
                (
                    SQ_US_USERMBR_LGL_AGENT.NEXTVAL
                    ,SYSDATE
            <if test="parentCI != null">                        ,#{parentCI} </if>
            <if test="parentRealNameMethod != null">            ,#{parentRealNameMethod} </if>
                    ,#{memberKey}
            <if test="parentType != null">          ,#{parentType} </if>
            <if test="parentEmail != null">         ,#{parentEmail} </if>
            <if test="parentDate != null">          ,TO_DATE(#{parentDate},'YYYYMMDDHH24MISS')</if>
            <if test="parentRealNameSite != null">  ,#{parentRealNameSite} </if>
            <if test="parentTelecom != null">       ,#{parentTelecom} </if>
            <if test="parentMDN != null">           ,#{parentMDN} </if>
                    ,#{parentName}
            <if test="parentBirthDay != null">      ,#{parentBirthDay} </if>
            <if test="isDomestic != null">          ,#{isDomestic} </if>
                )
    </insert>
    
    

    <!-- 사용자 아이디의 중복/제한단여 여부 정보 조회 -->
    <select id="checkExistLimitWord" parameterType="userMbr" resultType="existLimitWordMemberID">
          SELECT  /* UserMapper.xml, checkExistLimitWord, SAC(SC), 윤보영, 2015-12-14 */
                (  
                 SELECT  mbr_id 
                   FROM  tb_us_ousermbr
                  WHERE  mbr_status_main_cd != 'US010202' /* US010202 : 탈퇴 */
                    AND  mbr_id = #{userID}
                ) AS existWordID
             ,  (
                  SELECT  limt_word 
                    FROM  tb_us_ousermbr_limt_word
                   WHERE  limt_word_cd = 'US003602'
                     AND  limt_word = #{userID}
                ) AS limitWordID
          FROM  DUAL
    </select>


    <!-- 로그인 요청 로그 기록 -->
    <insert id="insertLoginLog" parameterType="userMbrLoginLog">
        INSERT /* UserMapper.xml, insertLoginLog, SAC(SC), 최진호, 2015-12-21 */
               INTO tb_us_ousermbr_login_log 
               (
                    insd_usermbr_no
                   ,system_id
                   ,conn_dt
                   <if test="connIp != null">,conn_ip</if>
                   <if test="scVersion != null">,sc_ver</if>
                   <if test="isAutoLogin != null">,auto_login_yn</if>
                   <if test="loginReason != null">,login_reason</if>
                   <if test="deviceModelNm != null">,device_model_nm</if>
                   <if test="deviceOsNm != null">,device_os_nm</if>
                   <if test="deviceOsVersion != null">,device_os_ver</if>                   
               ) 
               VALUES 
               (
                    #{userKey}
                   ,#{systemID}
                   ,SYSDATE
                   <if test="connIp != null">,#{connIp}</if>
                   <if test="scVersion != null">,#{scVersion}</if>
                   <if test="isAutoLogin != null">,#{isAutoLogin}</if>
                   <if test="loginReason != null">,#{loginReason}</if>
                   <if test="deviceModelNm != null">,#{deviceModelNm}</if>
                   <if test="deviceOsNm != null">,#{deviceOsNm}</if>
                   <if test="deviceOsVersion != null">,#{deviceOsVersion}</if>                   
               )
    </insert>
    
    <!-- 제한정책 -->
    <select id="retrievePolicyList" parameterType="searchPolicyRequest" resultType="limitTarget">
        SELECT  /* UserMapper.retrievePolicyList, 제한정책, wisestone_dinga, 2014-01-21 */
                seq limitTargetNo
                , limt_policy_key limitPolicyKey
                , limt_policy_cd limitPolicyCode
                , policy_apply_value policyApplyValue
                , TO_CHAR( start_dt,'YYYYMMDDHH24MISS') startDate
                , TO_CHAR( end_dt,'YYYYMMDDHH24MISS') endDate
                , TO_CHAR( reg_dt,'YYYYMMDDHH24MISS') regDate
                , reg_id regID
                , upd_id updateID

                , TO_CHAR( upd_dt,'YYYYMMDDHH24MISS') updateDate
                , pmt_type permissionType
                , use_yn isUsed
                , limt_amt limitAmount
                , pre_limt_amt preLimitAmount
                , ins_dt insDate
                , line_mang_status lineMangStatus
          FROM  tb_us_olimt_target
         WHERE  end_dt > SYSDATE
                <if test="limitPolicyKey != null">AND limt_policy_key = #{limitPolicyKey} AND </if>
                <foreach collection="limitPolicyCodeList" item="keySearch"   open="(" close=")" separator="OR">
                    limt_policy_cd =  #{keySearch}
                </foreach>
    </select>
    
    <!-- Password 등록 -->
    <insert id="insertPassword" parameterType="mbrPwd">
        INSERT  /* UserMapper.xml, insertPassword, SAC(SC), 윤보영, 2015-12-14 */
                INTO tb_us_ousermbr_pwd 
                (
                      insd_usermbr_no
                    , upd_dt
                    <if test="userAuthToken != userAuthToken">, act_tk</if>
                ) 
        VALUES  
                (
                      #{memberKey}
                    , SYSDATE
                    <if test="userAuthToken != userAuthToken">, #{userAuthToken}</if>
                )
    </insert>
    
    <!-- 휴대기기 기기변경이력 정보 조회 -->
    <select id="searchChangedDevice" parameterType="searchChangedDeviceRequest" resultType="changedDeviceLog">
       SELECT  /* UserMapper.searchChangedDevice, 휴대기기 기기변경이력 정보 조회, wisestone_dinga, 2014-02-17 */
              DISTINCT (insd_device_id) AS deviceKey
         FROM  tb_us_ousermbr_device_his 
        WHERE  chg_case_cd = 'US012002'
          AND  insd_usermbr_no = #{userKey}
          AND  auth_yn = 'Y'
          AND  upd_dt > (SYSDATE-30)
       <if test="deviceID != null"> AND  device_id = #{deviceID}</if>
       <if test="deviceKey != null"> AND  insd_device_id = #{deviceKey}</if>
    </select>

    <!-- 이메일 사용자 정보 조회 -->
    <select id="searchUserEmail" parameterType="searchUserEmailRequest" resultType="userMbr">
        SELECT  /* UserMapper.searchUserEmail, 이메일 사용자 정보 조회, wisestone_dinga, 2014-02-19 */
                insd_usermbr_no         userKey,
                mbr_clas_cd             userType,
                mbr_status_main_cd      userMainStatus,
                mbr_status_sub_cd       userSubStatus,
                start_dt,
                end_dt,
                mbr_id                  userID,
                realnm_auth_yn          isRealName,
                lgl_agent_agree_yn      isParent,
                email_addr              userEmail,
                email_recv_yn           isRecvEmail,
                mbr_nm                  userName,
                sex                     userSex,
                birth                   userBirthDay,
                nation_cd               userCountry,
                lang_cd                 userLanguage,
                entry_day               regDate
          FROM  tb_us_ousermbr
         WHERE  email_addr = #{userEmail}
           AND  mbr_status_main_cd != 'US010202' /* 메인상태 != 탈퇴 US010202 */
    </select>
    
    <!-- 휴대기기 기기변경이력 정보 조회 -->
    <select id="searchIDPChangedDevice2" parameterType="searchChangedDeviceRequest" resultType="String">
        SELECT /* UserMapper.searchIDPChangedDevice2, 휴대기기 기기변경이력 정보 조회, 황정택/와이즈스톤, 2014-02-17 */
               insd_device_id AS deviceKey
         FROM  tb_us_ousermbr_device
        WHERE  auth_yn = 'Y'
          AND  insd_usermbr_no = #{userKey}
        <if test="deviceID != null"> AND  device_id = #{deviceID}</if>
        <if test="deviceKey != null">  AND  insd_device_id = #{deviceKey}</if>
    </select>

    <!-- 단말 OS별 누적 가입자수 조회 -->
    <select id="searchDeviceOSNumber" resultType="deviceSystemStats">

        SELECT  /* UserMapper.searchDeviceOSNumber, 단말 OS별 누적 가입자수 조회, wisestone_dinga, 2014-02-19 */
                TO_CHAR(reg_dt ,'YYYYMMDDHH24MISS') regDate /* 등록일시. */
             ,  device_model_nm modelName /* 모델명. */
             ,  nvl(device_os_ver, ' ') osVersion /* OS버전. */
             ,  acml_entry_cnt entryCount /* 누적 가입자수. */
          FROM  tb_us_ousermbr_device_stats 
         WHERE  reg_dt
       BETWEEN  (TO_DATE(TO_CHAR(
                (SELECT MAX(reg_dt) 
                   FROM tb_us_ousermbr_device_stats),'YYYYMMDD') || '000000', 'YYYYMMDDHH24MISS')
                )
           AND  
                (TO_DATE(TO_CHAR(
                (SELECT MAX(reg_dt) 
                   FROM tb_us_ousermbr_device_stats),'YYYYMMDD') || '235959', 'YYYYMMDDHH24MISS')
                )

    </select>
 
    <!-- 복수 사용자 상태정보 조회 -->
    <select id="searchMbrUser" parameterType="searchMbrUserRequest" resultMap="searchMbrUserResultMap">
        SELECT  /* UserMapper.searchMbrUser, 복수 사용자 상태정보 조회, wisestone_dinga, 2014-02-21 */
                a.insd_usermbr_no as userKey
             ,  a.mbr_clas_cd as userType
             ,  a.mbr_status_main_cd as userMainStatus
             ,  a.mbr_status_sub_cd as userSubStatus
             ,  a.mbr_id as userID
             ,  b.device_id as deviceID
             ,  b.insd_device_id as deviceKey
          FROM  tb_us_ousermbr a
          LEFT  OUTER JOIN tb_us_ousermbr_device b
            ON  a.insd_usermbr_no = b.insd_usermbr_no
           AND  b.auth_yn = 'Y'
         WHERE  1=1
           AND  a.mbr_status_main_cd != 'US010202' /* 메인상태 != 탈퇴 US010202 */
           AND  a.insd_usermbr_no in 
                (
       <foreach collection="userKeyList" item="userKey" open="" close="" separator="" index="index">
                <if test="index != 0">,</if> #{userKey}
       </foreach>
                )

    </select>

    <!-- 복수 SAP사용자 상태정보 조회 -->
    <select id="searchMbrSapUser" parameterType="searchMbrSapUserRequest" resultMap="searchMbrUserResultMap">
        SELECT  /* UserMapper.xml, searchMbrSapUser, SAC(SC), 김경복, 2015-06-24 */
                a.insd_usermbr_no as userKey
             ,  a.mbr_clas_cd as userType
             ,  a.mbr_status_main_cd as userMainStatus
             ,  a.mbr_status_sub_cd as userSubStatus
             ,  a.mbr_id as userID
             ,  b.device_id as deviceID
             ,  b.insd_device_id as deviceKey
          FROM  tb_us_ousermbr a
          LEFT  OUTER JOIN tb_us_ousermbr_device b
            ON  a.insd_usermbr_no = b.insd_usermbr_no
           AND  b.auth_yn = 'Y'
         WHERE
            a.insd_usermbr_no
            IN  (
            <foreach collection="userKeyList" item="keyItem" open="" close="" separator="" index="index">
                <if test="index != 0">,</if> (#{keyItem.userKey})
            </foreach>
            )
           AND  a.mbr_status_main_cd != 'US010202' /* 메인상태 != 탈퇴 US010202 */
    </select>
    
    <!-- 복수 사용자 상태정보 조회맵 -->
    <resultMap id="searchMbrUserResultMap" type="userMbrStatus">
        <result property="userKey" column="userKey"/>
        <result property="userType" column="userType"/>
        <result property="userMainStatus" column="userMainStatus"/>
        <result property="userSubStatus" column="userSubStatus"/>
        <result property="userID" column="userID"/>
        
        <collection property="deviceIDList" javaType="java.util.ArrayList" ofType="String" >
            <result property="deviceID" column="deviceID"/>
        </collection>

        <collection property="deviceKeyList" javaType="java.util.ArrayList" ofType="String" >
            <result property="devicekey" column="devicekey"/>
        </collection>
    </resultMap>

    <!-- 복수 사용자 기기정보 조회 -->
    <select id="searchMbrDevice" parameterType="searchMbrDeviceRequest" resultMap="searchMbrDeviceResultMap">

        SELECT  /* UserMapper.searchMbrDevice, 복수 사용자 기기정보 조회, wisestone_dinga, 2014-03-05 */
                a.insd_device_id as deviceKey
             ,  a.device_id as deviceID
             ,  a.device_model_cd as deviceModelNo
             ,  a.mno_cd as deviceTelecom
             ,  b.realnm_auth_yn as isRealName
             ,  b.insd_usermbr_no as userKey
             ,  b.mbr_status_main_cd as userMainStatus
             ,  b.mbr_status_sub_cd as userSubStatus
             ,  b.mbr_nm userName
             ,  b.birth as userBirthDay
             ,  b.mbr_id userID
             ,  b.mbr_clas_cd userType
          FROM  tb_us_ousermbr_device a, tb_us_ousermbr b
         WHERE  a.insd_usermbr_no = b.insd_usermbr_no
           AND  (a.insd_usermbr_no, a.insd_device_id) 
            IN  (
       <foreach collection="userDeviceKeyList" item="keyItem" open="" close="" separator="" index="index">
           <if test="index != 0">,</if>(#{keyItem.userKey}, #{keyItem.deviceKey})
       </foreach>
                )
           AND  a.auth_yn = 'Y'
           AND  b.mbr_status_main_cd != 'US010202' /* 메인상태 != 탈퇴 US010202 */
    </select>

    <!-- 복수 사용자 기기정보 조회맵 -->
    <resultMap id="searchMbrDeviceResultMap" type="deviceMbrStatus">
        <result property="deviceKey" column="deviceKey"/>
        <result property="deviceID" column="deviceID"/>
        <result property="deviceModelNo" column="deviceModelNo"/>
        <result property="deviceTelecom" column="deviceTelecom"/>
        <result property="isRealName" column="isRealName"/>
        <result property="userID" column="userID"/>
        <result property="userType" column="userType"/>
        <result property="imMbrNo" column="imMbrNo"/>
        <association property="authName" column="{userKey=userKey}" javaType="String" select="getAuthRealName" />
        <association property="authBirthDay" column="{userKey=userKey}" javaType="String" select="getAuthBirthDay" />
    </resultMap>


    <!-- 마지막 실명인증 이름 조회 -->
    <select id="getAuthRealName" resultType="String">
        SELECT  /* UserMapper.getAuthRealName, 사용자 회원정보, wisestone_dinga, 2014-03-05 */
                n.mbr_nm
          FROM  (
                 select l.mbr_nm 
                   from tb_us_ousermbr_auth l, tb_us_ousermbr m
                  where l.insd_usermbr_no = m.insd_usermbr_no
                    and l.insd_usermbr_no = #{userKey}
                    and m.realnm_auth_yn = 'Y'
                  order by l.auth_seq desc
                 ) n
         WHERE  ROWNUM=1
    </select>

    <!-- 마지막 실명인증 생일 조회. -->
    <select id="getAuthBirthDay" resultType="String">
        SELECT  /* UserMapper.getAuthBirthDay, 사용자 회원정보, wisestone_dinga, 2014-03-05 */
                n.birth
          FROM  (
                 select l.birth 
                   from tb_us_ousermbr_auth l, tb_us_ousermbr m
                  where l.insd_usermbr_no = m.insd_usermbr_no
                    and l.insd_usermbr_no = #{userKey}
                    and m.realnm_auth_yn = 'Y'
                  order by l.auth_seq desc
                 ) n
         WHERE  ROWNUM=1
    </select>
    
    <!-- 조건별 사용자 정보 조회(휴대기기 정보로 조회) -->
    <select id="searchExtentUserD" parameterType="searchExtentUserRequest" resultType="java.util.HashMap">
        SELECT  /* UserMapper.xml, searchExtentUserD, SAC(SC), 윤보영, 2015-12-15 */
                DISTINCT(l.userKey) as userKey,
                (
                 SELECT  TO_CHAR(upd_dt ,'YYYYMMDDHH24MISS')
                   FROM  tb_us_ousermbr_pwd
                  WHERE  1=1
                    AND  insd_usermbr_no = l.userKey                                               
                ) as pwRegDate,
               (
               SELECT COUNT(1)
                 FROM tb_us_ousermbr_device c
                WHERE c.insd_usermbr_no = l.userKey
               ) AS totalDeviceCount
          FROM
                (
                 SELECT  a.insd_usermbr_no as userKey
                   FROM  tb_us_ousermbr a
              LEFT JOIN  tb_us_ousermbr_device b ON a.insd_usermbr_no = b.insd_usermbr_no
                  WHERE  a.mbr_status_main_cd != 'US010202' /* 메인상태 != 탈퇴 US010202 */
                    AND  b.auth_yn = 'Y' 
               <foreach collection="keySearchList" item="keySearch"   open="AND" close="" separator="AND">
                   <if test="keySearch.keyType.equalsIgnoreCase('INSD_DEVICE_ID') "> b.insd_device_id =  #{keySearch.keyString} </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('DEVICE_ID') "> b.device_id =  #{keySearch.keyString} </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('MDN') "> b.mdn =  #{keySearch.keyString} </if>
               </foreach>
                ORDER BY b.auth_dt DESC) l
                WHERE ROWNUM = 1
    </select>
    
    <!-- 조건별 사용자 정보 조회 -->
    <select id="searchExtentUser" parameterType="searchExtentUserRequest" resultType="java.util.HashMap">
        SELECT /* UserMapper.xml, searchExtentUser, SAC(SC), 윤보영, 2015-12-15 */
               a.insd_usermbr_no AS userKey,
               (
               SELECT TO_CHAR(upd_dt ,'YYYYMMDDHH24MISS')
                 FROM tb_us_ousermbr_pwd b
                WHERE b.insd_usermbr_no = a.insd_usermbr_no
               ) AS pwRegDate,
               (
               SELECT COUNT(1)
                 FROM tb_us_ousermbr_device c
                WHERE c.insd_usermbr_no = a.insd_usermbr_no
               ) AS totalDeviceCount
        FROM  tb_us_ousermbr a
        WHERE a.mbr_status_main_cd != 'US010202'
              <foreach collection="keySearchList" item="keySearch"   open="AND" close="" separator="AND">
                   <if test="keySearch.keyType.equalsIgnoreCase('INSD_USERMBR_NO') "> a.insd_usermbr_no =  #{keySearch.keyString} </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('MBR_ID') "> a.mbr_id =  #{keySearch.keyString} </if>
               </foreach>
    </select>

    <!-- 회원 등급 조회 -->
    <select id="getUserGrade" resultType="userGrade">
        SELECT /* UserMapper.getUserGrade, 사용자 회원등급정보, Burkhan, 2014-07-31 */
                DECODE (MBR_LVL_CD,  '1', 'platinum',  '2', 'gold',  '3', 'silver') AS userGradeCd,
                BASE_YM AS baseYm,
                MLG_SEQ AS mlgSeq,
                MBR_NO AS mbrNo,
                MBR_LVL_CD AS mbrLvlCd,
                WINBACK_YN AS winbackYn,
                CUST_PAY_AMT AS custPayAmt,
                REPAY_PNT_AMT AS repayPntAmt,
                OPER_NM AS operNm,
                TO_CHAR(OPER_DTM ,'YYYYMMDDHH24MISS') AS operDtm
        FROM TB_US_USERMBR_MILG
       WHERE MBR_NO = #{userKey}
         AND BASE_YM = TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYYMM')
    </select>

    <select id="searchUserSegment" parameterType="searchUserSegmentRequest" resultType="searchUserSegmentResponse">
        SELECT /* UserMapper.searchUserSegment, 회원 segment 정보, burkhan_rejoice, 2014-12-30 */
               insd_usermbr_no AS userKey,
               NVL (
                  (SELECT CASE MBR_LVL_CD
                             WHEN '1' THEN 'platinum'
                             WHEN '2' THEN 'gold'
                             WHEN '3' THEN 'gold'
                             ELSE 'gold'
                          END
                     FROM TB_US_USERMBR_MILG -- 변경 schema 없음!
                    WHERE mbr_no = #{userKey}
                          AND BASE_YM = TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYYMM')),
                  'gold') AS userGradeCd,
                  ENTRY_DAY AS entryDay
          FROM tb_us_ousermbr 
         WHERE mbr_status_main_cd != 'US010202'
           AND insd_usermbr_no = #{userKey}
    </select>

    <select id="searchUserSegmentD" parameterType="searchUserSegmentRequest" resultType="searchUserSegmentResponse">
        SELECT /* UserMapper.searchUserSegmentD, 회원 segment 정보, burkhan_rejoice, 2014-10-02 */
              a.insd_usermbr_no AS userKey,
               NVL (
                  (SELECT CASE MBR_LVL_CD
                             WHEN '1' THEN 'platinum'
                             WHEN '2' THEN 'gold'
                             WHEN '3' THEN 'gold'
                             ELSE 'gold'
                          END
                     FROM TB_US_USERMBR_MILG -- 변경 schema 없음
                    WHERE mbr_no = #{userKey}
                          AND BASE_YM = TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYYMM')),
                  'gold') AS userGradeCd,
            <if test="isDormant.equalsIgnoreCase('N')">                  
               CASE WHEN EXISTS (SELECT 1
                                 FROM tb_us_ousermbr_device_his
                                 WHERE INSD_USERMBR_NO = #{userKey}
                                   AND INSD_DEVICE_ID = #{deviceKey}
                                   AND CHG_CASE_CD = 'US012002'
                                   AND UPD_DT > (SYSDATE - 7)
                                )
                    THEN 'Y'
                    ELSE 'N'
               END
                  AS isChanged,
            </if>
                  A.ENTRY_DAY AS entryDay
          FROM tb_us_ousermbr a, tb_us_ousermbr_device b
         WHERE     a.insd_usermbr_no = b.insd_usermbr_no
               AND a.mbr_status_main_cd != 'US010202'
               AND a.insd_usermbr_no = #{userKey}   
               AND b.insd_device_id = #{deviceKey}
    </select>

    <select id="searchUserExtraInfo" parameterType="searchUserExtraInfoRequest" resultType="mbrMangItemPtcr">
        SELECT /* UserMapper.searchUserExtraInfo, 회원 부가 정보, burkhan_rejoice, 2014-10-28 */
               b.INSD_USERMBR_NO AS userKey,
               b.MANG_ITEM_CD AS extraProfile,
               b.REG_RESULT_VALUE AS extraProfileValue
          FROM    tb_us_ousermbr a
               LEFT OUTER JOIN
                  tb_us_ousermbr_mang_item_ptcr b
               ON a.insd_usermbr_no = b.insd_usermbr_no
         WHERE a.mbr_status_main_cd != 'US010202'
           AND b.insd_usermbr_no IN
                (
            <foreach collection="userKeyList" item="userKey" open="" close="" separator="" index="index">
                <if test="index != 0">,</if> #{userKey}
            </foreach>
                )
        <if test="extraProfileList != null">
               and mang_item_cd in
                (
            <foreach collection="extraProfileList" item="extraProfile" open="" close="" separator="" index="index">
                <if test="index != 0">,</if> #{extraProfile}
            </foreach>
                )                
         </if>
    </select>
    
    <select id="simpleLogin" parameterType="simpleLoginRequest" resultType="simpleLoginResponse">
        SELECT /* UserMapper.simpleLogin, 심플 인증, burkhan_rejoice, 2014-11-04 */
               B.INSD_USERMBR_NO AS userKey,
               B.INSD_DEVICE_ID AS deviceKey
          FROM    tb_us_ousermbr a
               LEFT JOIN
                  tb_us_ousermbr_DEVICE b
               ON  a.INSD_USERMBR_NO = b.INSD_USERMBR_NO
         WHERE a.MBR_STATUS_MAIN_CD = 'US010201'
           AND a.MBR_STATUS_SUB_CD = 'US010301'
           AND b.AUTH_YN = 'Y'
           AND b.DEVICE_ID = #{deviceID}
    </select> 
    
    <!-- 회원가입여부 리스트 조회 -->
    <select id="searchExistList" parameterType="existListRequest" resultType="userMbrDevice">
        SELECT /* UserMapper.xml, searchExistList, SAC(SC), 최진호, 2015-12-21 */
               b.mdn AS deviceID,
               a.insd_usermbr_no AS userKey
          FROM tb_us_ousermbr a, tb_us_ousermbr_device b
         WHERE a.mbr_status_main_cd != 'US010202'
               AND a.insd_usermbr_no = b.insd_usermbr_no
               AND b.auth_yn = 'Y'
               AND b.mdn IN
               (    
            <foreach collection="deviceIdList" item="deviceId" open="" close="" separator="" index="index">
                <if test="index != 0">,</if> #{deviceId}
            </foreach>
               )
    </select>
    
    <select id="selectManagementInfo"  parameterType="searchManagementRequest" resultType="mbrMangItemPtcr">
        SELECT /* UserMapper.xml, selectManagementInfo, 부가 정보 조회, SAC(SC), 김경복, 2015-07-28 */
               INSD_USERMBR_NO AS userKey,
               MANG_ITEM_CD AS extraProfile,
               REG_RESULT_VALUE AS extraProfileValue
          FROM tb_us_ousermbr_mang_item_ptcr
         WHERE 1 = 1
             <if test="userKey != null">
                 AND INSD_USERMBR_NO = #{userKey}
             </if>
             <if test="mbrMangItemPtcr != null">
             AND (MANG_ITEM_CD, REG_RESULT_VALUE) 
                IN  (
                <foreach collection="mbrMangItemPtcr" item="keyItem" open="" close="" separator="" index="index">
                    <if test="index != 0">,</if> (#{keyItem.extraProfile}, #{keyItem.extraProfileValue})
                </foreach>
                    )
             </if>
        ORDER BY REG_DT
    </select>
    
    <!-- 실명인증 초기화  -->
    <update id="updateInitRealName" parameterType="updateRealNameRequest">
        UPDATE /* UserMapper.xml, updateInitRealName, SAC(SC), 윤보영, 2015-12-22 */
           tb_us_ousermbr
           SET realnm_auth_yn = 'N',
               mbr_nm = null,
               birth = null,
               sex = null,
               upd_dt = SYSDATE,
               start_dt = SYSDATE,
               system_id = #{commonRequest.systemID}
         WHERE insd_usermbr_no = #{userKey}
    </update>

    <!-- 사용자 회원 인증 삭제 -->
    <delete id="removeUserMbrAuth" parameterType="userMbr">
        DELETE   /* UserMapper.xml, removeUserMbrOneId, SAC(SC), 윤보영, 2015-12-22 */
        FROM  tb_us_ousermbr_auth
        WHERE insd_usermbr_no = #{userKey}
    </delete>
    
    <!-- 마지막 로그인일자 컬럼 체크  -->
    <select id="selectAlreadyLastLoginDtUpdateYn" parameterType="userMbrLoginLog" resultType="String">
      SELECT  /* UserMapper.xml, selectAlreadyLastLoginDtUpdateYn, SAC(SC), 최진호, 2015-12-21 */
                   TO_CHAR(last_login_dt, 'YYYYMMDD') AS lastLoginDt
          FROM  tb_us_ousermbr
         WHERE insd_usermbr_no = #{userKey}
           AND  last_login_dt BETWEEN  (TO_DATE(TO_CHAR(sysdate, 'YYYYMMDD') || '000000', 'YYYYMMDDHH24MISS'))
                                  AND  (TO_DATE(TO_CHAR(sysdate, 'YYYYMMDD') || '235959', 'YYYYMMDDHH24MISS'))
    </select>    
    
    <!-- 마지막 로그인일자 업데이트-->
    <update id="updateLastLoginDt" parameterType="userMbrLoginLog">
        UPDATE /* UserMapper.xml, updateLastLoginDt, SAC(SC), 최진호, 2015-12-21 */
            tb_us_ousermbr
            SET LAST_LOGIN_DT = TRUNC(SYSDATE)
        WHERE INSD_USERMBR_NO = #{userKey}
    </update>
    
    <!-- 사용자 테이블 정보 조회 -->
    <select id="selectUsermbr" parameterType="userMbr" resultType="userMbrInfo">
        SELECT  /* UserMapper.xml, selectUsermbr, SAC(SC), 김영균, 2015-05-27 */
             insd_usermbr_no          as insdUserMbrNo       
            ,start_dt                 as startDt             
            ,end_dt                   as endDt               
            ,mbr_clas_cd              as mbrClasCd           
            ,mbr_status_main_cd       as mbrStatusMainCd     
            ,mbr_status_sub_cd        as mbrStatusSubCd      

            ,entry_day                as entryDay            
            ,bolter_day               as bolterDay           
            ,bolter_reason_cd         as bolterReasonCd      
            ,bolter_reason_desc       as bolterReasonDesc    
            ,upd_dt                   as updDt               
            ,mbr_id                   as mbrId               
            ,mbr_nm                   as mbrNm               
            ,birth                    as birth               
            ,sex                      as sex                 
            ,email_addr               as emailAddr           
            ,email_recv_yn            as emailRecvYn         
            ,realnm_auth_yn           as realNmAuthYn        
            ,lgl_agent_agree_yn       as lglAgentAgreeYn     
            ,nation_cd                as nationCd            
            ,lang_cd                  as langCd              
            ,system_id                as systemId            
            ,bolter_case_cd           as bolterCaseCd        
            ,login_status_cd          as loginStatusCd       
            ,upd_email_addr           as updEmailAddr        
            ,last_login_dt            as lastLoginDt         
            ,last_prchs_dt            as lastPrchsDt         
          FROM  tb_us_ousermbr
         WHERE  insd_usermbr_no = #{userKey}
    </select>
    
    <!-- 사용자 테이블 정보 이관 -->
    <insert id="insertUserMbr" parameterType="userMbrInfo">
        INSERT  /* UserMapper.xml, insertUserMbr, SAC(SC), 김영균, 2015-05-27 */
                INTO tb_us_ousermbr
                (
                     insd_usermbr_no
                    ,start_dt
                    ,end_dt
                    ,mbr_clas_cd
                    ,mbr_status_main_cd
                    ,mbr_status_sub_cd
                    <if test="entryDay != null">,entry_day</if>
                    <if test="bolterDay != null">,bolter_day</if>
                    <if test="bolterReasonCd != null">,bolter_reason_cd</if>
                    <if test="bolterReasonDesc != null">,bolter_reason_desc</if>
                    <if test="updDt != null">,upd_dt</if>
                    <if test="mbrId != null">,mbr_id</if>
                    <if test="mbrNm != null">,mbr_nm</if>
                    <if test="birth != null">,birth</if>
                    <if test="sex != null"> ,sex</if>
                    <if test="emailAddr != null"> ,email_addr</if>
                    <if test="emailRecvYn != null"> ,email_recv_yn</if>
                    <if test="realNmAuthYn != null">,realnm_auth_yn</if>
                    <if test="lglAgentAgreeYn != null"> ,lgl_agent_agree_yn</if>
                    <if test="nationCd != null">,nation_cd</if>
                    <if test="langCd != null"> ,lang_cd</if>
                    <if test="systemId != null">,system_id</if>
                    <if test="bolterCaseCd != null">,bolter_case_cd</if>
                    <if test="loginStatusCd != null">,login_status_cd</if>
                    <if test="updEmailAddr != null">,upd_email_addr</if>
                    <if test="lastLoginDt != null"> ,last_login_dt</if>
                    <if test="lastPrchsDt != null"> ,last_prchs_dt</if>
                )
        VALUES  
                (
                     #{insdUserMbrNo}
                    ,#{startDt}
                    ,#{endDt}
                    ,#{mbrClasCd}
                    ,#{mbrStatusMainCd}
                    ,#{mbrStatusSubCd}
                    <if test="entryDay != null">,#{entryDay}</if>
                    <if test="bolterDay != null">,#{bolterDay}</if>
                    <if test="bolterReasonCd != null">,#{bolterReasonCd}</if>
                    <if test="bolterReasonDesc != null">,#{bolterReasonDesc}</if>
                    <if test="updDt != null">,#{updDt}</if>
                    <if test="mbrId != null">,#{mbrId}</if>
                    <if test="mbrNm != null">,#{mbrNm}</if>
                    <if test="birth != null">,#{birth}</if>
                    <if test="sex != null">,#{sex}</if>
                    <if test="emailAddr != null">,#{emailAddr}</if>
                    <if test="emailRecvYn != null">,#{emailRecvYn}</if>
                    <if test="realNmAuthYn != null">,#{realNmAuthYn}</if>
                    <if test="lglAgentAgreeYn != null">,#{lglAgentAgreeYn}</if>
                    <if test="nationCd != null">,#{nationCd}</if>
                    <if test="langCd != null">,#{langCd}</if>
                    <if test="systemId != null">,#{systemId}</if>
                    <if test="bolterCaseCd != null">,#{bolterCaseCd}</if>
                    <if test="loginStatusCd != null">,#{loginStatusCd}</if>
                    <if test="updEmailAddr != null">,#{updEmailAddr}</if>
                    <if test="lastLoginDt != null">,#{lastLoginDt}</if>
                    <if test="lastPrchsDt != null">,#{lastPrchsDt}</if>
                 )
    </insert>
    
    <!-- 유휴회원 이관 프로시저 호출 -->
    <select id="callMoveUserProcedure" parameterType="hashmap" resultType="hashmap" statementType="CALLABLE">
        { call SPMBR.proc_idle_member_move(#{tenantID}, #{userKey}, #{moveType}) }
    </select>        
        
    <!-- 유휴회원 이관 이력 추가 -->
    <insert id="insertUserMbrTransHis" parameterType="hashmap">
            INSERT /* UserMapper.xml, insertUserMbrTransHis, SAC(SC), 이창민, 2015-06-01 */     
                 INTO tb_us_ousermbr_trans_his (seq
                                                      <if test="insdUserMbrNo != null">,insd_usermbr_no</if>
                                                      <if test="transCd != null">,trans_cd</if>
                                                      <if test="resultYn != null">,result_yn</if>
                                                      <if test="regId != null">,reg_id</if>
                                                      ,reg_dt)
              VALUES   (sq_us_usermbr_trans_his.NEXTVAL
                       <if test="insdUserMbrNo != null">,#{insdUserMbrNo}</if>
                       <if test="transCd != null">,#{transCd}</if>
                       <if test="resultYn != null">,#{resultYn}</if>
                       <if test="regId != null">,#{regId}</if>
                       ,SYSDATE )                             
    </insert>        
        
    <select id="searchDeActivateUser" parameterType="searchSocialAccountRequest" resultType="userMbr">
        SELECT  /* UserMapper.searchDeActivateUser, 분리보관 예정 사용자 조회, SAC(SC), 반범진, 2015-08-26 */
                insd_usermbr_no         userKey,
                mbr_clas_cd             userType
              FROM tb_us_ousermbr A
         WHERE INSD_USERMBR_NO = #{userKey}
             AND GREATEST (NVL (LAST_LOGIN_DT, START_DT), NVL (LAST_PRCHS_DT, TO_DATE (1, 'J')))
               BETWEEN ADD_MONTHS (TO_CHAR(SYSDATE, 'YYYYMMDD'), -12) + ((#{weekAgo} * 7) ) AND ADD_MONTHS (TRUNC ((SYSDATE) + 1) -1 /86399, -12) + (#{weekAgo} * 7)
    </select>

    <!-- 배송지 등록/수정 : 배송지 등록 -->
    <insert id="insertDeliveryInfo" parameterType="createDeliveryInfoRequest">
     INSERT INTO /* UserMapper.insertDeliveryInfo, 배송지 등록, SAC(SC), 최진호, 2015-10-28 */
            tb_us_ousermbr_delivery (
            SEQ
            ,INSD_USERMBR_NO
            ,REG_DT
            ,DELIVERY_TYPE_CD
            <if test="deliveryNm != null">,DELIVERY_NM</if>
            <if test="deliveryTypeCd.equals('US014602')">,USE_DT</if>
            <if test="receiverNm != null">,RECEVER_NM</if>
            <if test="senderNm != null">,SENDER_NM</if>
            <if test="zip != null">,ZIP</if>
            <if test="addr != null">,ADDR</if>
            <if test="dtlAddr != null">,DTL_ADDR</if>
            <if test="connTelNo != null">,CONN_TEL_NO</if>
            <if test="deliveryMsg != null">,DELIVERY_MSG</if> )
     VALUES (
            SQ_US_USERMBR_DELIVERY.NEXTVAL
            ,#{userKey}
            ,SYSDATE
            ,#{deliveryTypeCd}
            <if test="deliveryNm != null">,#{deliveryNm}</if>
            <if test="deliveryTypeCd.equals('US014602')">,SYSDATE</if>
            <if test="receiverNm != null">,#{receiverNm}</if>
            <if test="senderNm != null">,#{senderNm}</if>
            <if test="zip != null">,#{zip}</if>
            <if test="addr != null">,#{addr}</if>
            <if test="dtlAddr != null">,#{dtlAddr}</if>
            <if test="connTelNo != null">,#{connTelNo}</if>
            <if test="deliveryMsg != null">,#{deliveryMsg}</if> )
    </insert>
    
    <!-- 배송지 등록/수정 : 배송지 수정 -->
    <update id="updateDeliveryInfo" parameterType="createDeliveryInfoRequest">
     UPDATE /* UserMapper.updateDeliveryInfo, 배송지 수정, SAC(SC), 최진호, 2015-10-28 */
            tb_us_ousermbr_delivery
        SET
            USE_DT = SYSDATE
            <if test="deliveryTypeCd != null">,DELIVERY_TYPE_CD = #{deliveryTypeCd}</if>
            <if test="deliveryNm != null">,DELIVERY_NM = #{deliveryNm}</if>
            <if test="receiverNm != null">,RECEVER_NM = #{receiverNm}</if>
            <if test="senderNm != null">,SENDER_NM = #{senderNm}</if>
            <if test="zip != null">,ZIP = #{zip}</if>
            <if test="addr != null">,ADDR = #{addr}</if>
            <if test="dtlAddr != null">,DTL_ADDR = #{dtlAddr}</if>
            <if test="connTelNo != null">,CONN_TEL_NO = #{connTelNo}</if>
            <if test="deliveryMsg != null">,DELIVERY_MSG = #{deliveryMsg}</if>
      WHERE INSD_USERMBR_NO = #{userKey}
        AND SEQ = #{deliverySeq}
        <if test="deliveryTypeCd != null">
        AND DELIVERY_TYPE_CD = #{deliveryTypeCd}
        </if>
    </update>
    
    <!-- 배송지 삭제 -->
    <delete id="removeDeliveryInfo" parameterType="removeDeliveryInfoRequest">
     DELETE /* UserMapper.removeDeliveryInfo, 배송지 삭제, SAC(SC), 최진호, 2015-10-28 */
       FROM tb_us_ousermbr_delivery
      WHERE INSD_USERMBR_NO = #{userKey}
       <if test="deliverySeq != null">
        AND SEQ = #{deliverySeq}
       </if>
    </delete>
    
    <!-- 배송지 정보 조회 -->
    <select id="searchDeliveryInfoList" parameterType="searchDeliveryInfoRequest" resultType="searchDeliveryInfo">
     SELECT /* UserMapper.searchDeliveryInfoList, 배송지 정보 조회, SAC(SC), 최진호, 2015-10-28 */
             INSD_USERMBR_NO                     AS userKey 
            ,DELIVERY_TYPE_CD                    AS deliveryTypeCd
            ,DELIVERY_NM                         AS deliveryNm
            ,RECEVER_NM                          AS receiverNm
            ,SENDER_NM                           AS senderNm
            ,ZIP                                 AS zip
            ,ADDR                                AS addr
            ,DTL_ADDR                            AS dtlAddr
            ,CONN_TEL_NO                         AS connTelNo
            ,DELIVERY_MSG                        AS deliveryMsg
            ,SEQ                                 AS deliverySeq
            ,TO_CHAR(REG_DT, 'YYYYMMDDHH24MISS') AS regDate
            ,TO_CHAR(USE_DT, 'YYYYMMDDHH24MISS') AS useDate
       FROM tb_us_ousermbr_delivery
      WHERE INSD_USERMBR_NO = #{userKey}
        <if test="deliveryTypeCd != null">
        AND DELIVERY_TYPE_CD = #{deliveryTypeCd}
        </if>
   ORDER BY REG_DT DESC, USE_DT DESC
    </select>

    <!-- 변환된 사용자키 조회 -->
    <select id="searchAfterUserKey" parameterType="searchAfterUserKeyRequest" resultType="String">
     SELECT /* UserMapper.searchAfterUserKey, 변환된 사용자키 조회, SAC(SC), 최진호, 2015-10-28 */
            AFTER_INSD_USERMBR_NO               AS afterUserKey
       FROM tb_us_ousermbr_idmbr_trfm_chas
      WHERE PRE_INSD_USERMBR_NO = #{userKey}
    </select>

    <!-- 배송지 정보 이관 등록 -->
    <insert id="insertTransferDelivery" parameterType="searchDeliveryInfo">
       INSERT /* UserMapper.xml, insertTransferDelivery, SAC(SC), 윤보영, 2015-10-27 */
              INTO tb_us_ousermbr_delivery (
                   seq 
                   ,insd_usermbr_no
                   <if test="deliveryTypeCd != null">,delivery_type_cd </if>
                   <if test="deliveryNm != null">,delivery_nm </if>
                   <if test="useDate != null">,use_dt </if>
                   <if test="receiverNm != null">,recever_nm </if>
                   <if test="senderNm != null">,sender_nm </if>
                   <if test="zip != null">,zip </if>
                   <if test="addr != null">,addr </if>
                   <if test="dtlAddr != null">,dtl_addr </if>
                   <if test="connTelNo != null">,conn_tel_no </if>
                   <if test="deliveryMsg != null">,delivery_msg </if>
                   <if test="regDate != null">,reg_dt</if>
                   ) 
           VALUES (
                    SQ_US_USERMBR_DELIVERY.NEXTVAL
                   ,#{userKey}
                   <if test="deliveryTypeCd != null">,#{deliveryTypeCd}</if>
                   <if test="deliveryNm != null">,#{deliveryNm}</if>
                   <if test="useDate != null">,TO_DATE(#{useDate}, 'YYYYMMDDHH24MISS')</if>
                   <if test="receiverNm != null">,#{receiverNm}</if>
                   <if test="senderNm != null">,#{senderNm}</if>
                   <if test="zip != null">,#{zip}</if>
                   <if test="addr != null">,#{addr}</if>
                   <if test="dtlAddr != null">,#{dtlAddr}</if>
                   <if test="connTelNo != null">,#{connTelNo}</if>
                   <if test="deliveryMsg != null">,#{deliveryMsg}</if>
                   <if test="regDate != null">,TO_DATE(#{regDate}, 'YYYYMMDDHH24MISS')</if>
                  ) 
    </insert>
    
   <!-- 상품권충전소 목록 조회 -->
   <select id="searchGiftChargeInfoList" parameterType="searchGiftChargeInfoRequest" resultType="giftChargeInfo">
     SELECT /* UserMapper.xml, searchGiftChargeInfoList, SAC(SC), 윤보영, 2015-11-24 */
            seq,
            insd_usermbr_no AS userKey,
            insd_sellermbr_no AS sellerKey,
            brand_nm          AS brandNm,
            brand_id          AS brandId,
            charger_id     AS chargerId,
            charger_nm        AS chargerNm,
            TO_CHAR (reg_dt, 'YYYYMMDDHH24MISS') AS regDt,
            TO_CHAR (upd_dt, 'YYYYMMDDHH24MISS') AS updDt
      FROM  tb_us_ousermbr_gift_chrg
      WHERE insd_usermbr_no = #{userKey}
        <if test="sellerKey != null">
            AND insd_sellermbr_no = #{sellerKey}
        </if>
        <if test="brandId != null">
            AND brand_id = #{brandId}
        </if>
        ORDER BY NVL(upd_dt, reg_dt) DESC
   </select>
   
   <!-- 상품권충전소 정보 조회 -->
   <select id="searchGiftChargeInfo" parameterType="searchGiftChargeInfoRequest" resultType="giftChargeInfo">
     SELECT /* UserMapper.xml, searchGiftChargeInfo, SAC(SC), 윤보영, 2015-11-11 */
            seq,
            insd_usermbr_no AS userKey,
            insd_sellermbr_no AS sellerKey,
            brand_nm          AS brandNm,
            charger_id     AS chargerId,
            charger_nm        AS chargerNm,
            TO_CHAR (reg_dt, 'YYYYMMDDHH24MISS') AS regDt,
            TO_CHAR (upd_dt, 'YYYYMMDDHH24MISS') AS updDt
      FROM  tb_us_ousermbr_gift_chrg
      WHERE insd_usermbr_no = #{userKey}
        AND insd_sellermbr_no = #{sellerKey}
        AND brand_id = #{brandId}
        AND charger_id = #{chargerId}
   </select>
   
   <!-- 상품권 충전정보 등록 -->
   <update id="insertGiftChargeInfo" parameterType="createGiftChargeInfoRequest">
      INSERT /* UserMapper.xml, insertGiftChargeInfo, SAC(SC), 윤보영, 2015-11-11 */
        INTO tb_us_ousermbr_gift_chrg (
                    seq
                   ,insd_usermbr_no
                   ,insd_sellermbr_no
                   ,brand_nm
                   ,brand_id
                   ,charger_id
                   ,charger_nm
                   ,reg_dt
            ) VALUES (
                     sq_us_gift_chrg_info.NEXTVAL
                    ,#{userKey}
                    ,#{sellerKey}
                    ,#{brandName}
                    ,#{brandId}
                    ,#{chargerId}
                    ,#{chargerName}
                    ,SYSDATE
            )
   </update>
   
   <!-- 상품권 충전정보 수정 -->
   <update id="updateGiftChargeInfo" parameterType="createGiftChargeInfoRequest">
       UPDATE /* UserMapper.xml, updateGiftChargeInfo, SAC(SC), 윤보영, 2015-11-11 */
               tb_us_ousermbr_gift_chrg 
          SET  upd_dt = SYSDATE,
               charger_nm = #{chargerName}
          WHERE insd_usermbr_no  = #{userKey}
            AND insd_sellermbr_no  = #{sellerKey}
            AND brand_id  = #{brandId}
            AND charger_id  = #{chargerId}
   </update>
   
   <!-- 상품권 충전소 정보 이관 등록 -->
    <insert id="insertTransferGiftChargeInfo" parameterType="giftChargeInfo">
     INSERT /* UserMapper.xml, insertTransferGiftChargeInfo, SAC(SC), 최진호, 2015-11-24 */
       INTO tb_us_ousermbr_gift_chrg (
              SEQ
              ,INSD_USERMBR_NO
              <if test="sellerKey != null">,INSD_SELLERMBR_NO</if>
              <if test="brandNm != null">,BRAND_NM</if>
              <if test="brandId != null">,BRAND_ID</if>
              <if test="chargerId != null">,CHARGER_ID</if>
              <if test="chargerNm != null">,CHARGER_NM</if>
              <if test="regDt != null">,REG_DT</if>
              <if test="updDt != null">,UPD_DT</if> ) 
     VALUES (
              SQ_US_GIFT_CHRG_INFO.NEXTVAL
              ,#{userKey}
              <if test="sellerKey != null">,#{sellerKey}</if>
              <if test="brandNm != null">,#{brandNm}</if>
              <if test="brandId != null">,#{brandId}</if>
              <if test="chargerId != null">,#{chargerId}</if>
              <if test="chargerNm != null">,#{chargerNm}</if>
              <if test="regDt != null">,TO_DATE(#{regDt}, 'YYYYMMDDHH24MISS')</if>
              <if test="updDt != null">,TO_DATE(#{updDt}, 'YYYYMMDDHH24MISS')</if> )
    </insert>

    <!-- 사용자 인증 토큰 체크 -->
    <select id="checkUserAuthToken" parameterType="chkUserAuthTkRequest" resultType="chkUserAuthTkResponse">
        SELECT /* UserMapper.xml, checkUserAuthToken, SAC(SC), 최진호, 2016-01-04 */
            INSD_USERMBR_NO AS userKey
            ,ACT_TK AS userAuthToken
        FROM
            TB_US_OUSERMBR_PWD
        WHERE
            ACT_TK = #{userAuthToken}
            AND INSD_USERMBR_NO = #{userKey}
    </select>

    <!-- 사용자 인증 토큰 생성 -->
    <update id="createUserAuthToken" parameterType="createUserAuthTokenRequest">
        UPDATE  /* UserMapper.xml, createUserAuthToken,  SAC(SC), 최진호, 2016-01-06 */
            TB_US_OUSERMBR_PWD
        SET
            ACT_TK = #{userAuthToken}
            ,UPD_DT = SYSDATE
        WHERE
            INSD_USERMBR_NO = #{userKey}
    </update>

    <!-- 사용자 ID, type 변경 -->
    <update id="updateUserIdNType" parameterType="modifyIdRequest">
        UPDATE  /* UserMapper.xml, updateUserIdNType,  SAC(SC), 최진호, 2016-01-06 */
            TB_US_OUSERMBR
        SET
            MBR_ID = #{newUserId}
            ,MBR_CLAS_CD = #{newUserType}
            ,START_DT = SYSDATE
            ,UPD_DT = SYSDATE
        WHERE
            INSD_USERMBR_NO = #{userKey}
            AND MBR_ID = #{userId}
            AND MBR_CLAS_CD = #{userType}
    </update>

    <!-- 사용자 인증 토큰 변경 -->
    <update id="updateUserAuthToken" parameterType="modifyIdRequest">
        UPDATE  /* UserMapper.xml, updateUserAuthToken,  SAC(SC), 최진호, 2016-01-06 */
            TB_US_OUSERMBR_PWD
        SET
            ACT_TK = #{newUserAuthToken}
            ,UPD_DT = SYSDATE
        WHERE
            INSD_USERMBR_NO = #{userKey}
            AND ACT_TK = #{userAuthToken}
    </update>

</mapper>
