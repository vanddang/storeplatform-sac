<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Device">


    <!-- 사용자 정보 조회 -->
    <select id="getUsermbr" parameterType="userMbr" resultType="userMbr">
            SELECT  /* DeviceMapper.getUsermbr, 사용자 정보(키,아이디) 조회, 황정택/와이즈스톤, 2013-12-09 */
                    insd_usermbr_no AS userKey
                    , mbr_id AS userID
              FROM  tb_us_ousermbr
             WHERE
            <if test="userKey != null">
               insd_usermbr_no = #{userKey}
            </if>
            <if test="userID != null">
               mbr_id = #{userID}
            </if>
    </select>

    <!-- 휴대기기 목록 조회 -->
    <select id="searchDeviceList" parameterType="searchDeviceListRequest" resultType="userMbr">
            SELECT  /* DeviceMapper.searchDeviceList, 휴대기기 목록 조회, 황정택/와이즈스톤, 2013-12-05 */
                    DISTINCT(l.userKey) AS userKey
                 ,  l.userID
            FROM (
                    SELECT  a.insd_usermbr_no AS userKey
                         ,  a.mbr_id AS userID
                      FROM  tb_us_ousermbr a, tb_us_ousermbr_device b
                     WHERE  a.mbr_status_main_cd != 'US010202'
                            and a.insd_usermbr_no = b.insd_usermbr_no
               <foreach collection="keySearchList" item="keySearch"   open="AND" close="" separator="AND">
                   <if test="keySearch.keyType.equalsIgnoreCase('INSD_USERMBR_NO')">
                       a.insd_usermbr_no = #{keySearch.keyString}
                   </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('MBR_ID')">
                       a.mbr_id = #{keySearch.keyString}
                   </if>
               </foreach>
                ) l
    </select>


    <!-- 휴대기기 목록 조회(휴대기기 정보로 조회) -->
    <select id="searchDeviceListD" parameterType="searchDeviceListRequest" resultType="userMbr">
            SELECT  /* DeviceMapper.searchDeviceListD, 휴대기기 목록 조회(휴대기기 정보로 조회), 황정택/와이즈스톤, 2013-12-05 */
                    DISTINCT(l.userKey) AS userKey,
                    l.userID AS userID
                      FROM ( SELECT  a.insd_usermbr_no AS userKey
                         ,  a.mbr_id AS userID
                      FROM  tb_us_ousermbr a
                 LEFT JOIN  tb_us_ousermbr_device b
                        ON  a.insd_usermbr_no = b.insd_usermbr_no
                     WHERE  b.auth_yn = 'Y'
               <foreach collection="keySearchList" item="keySearch"   open="AND" close="" separator="AND">
                   <if test="keySearch.keyType.equalsIgnoreCase('DEVICE_ID')">
                       b.device_id = #{keySearch.keyString}
                   </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('INSD_DEVICE_ID')">
                       b.insd_device_id = #{keySearch.keyString}
                   </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('MDN')">
                       b.mdn = #{keySearch.keyString}
                   </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('SVC_MANG_NO')">
                       b.svc_mang_no = #{keySearch.keyString}
                   </if>
               </foreach>
                ORDER BY b.auth_dt DESC) l
                WHERE ROWNUM = 1
    </select>

    <!-- 휴대기기 목록 조회 -->
    <select id="searchDeviceList2" parameterType="searchDeviceListRequest" resultMap="searchDeviceListResultMap">
            SELECT  /* DeviceMapper.searchDeviceList2, 휴대기기 목록 조회, 황정택/와이즈스톤, 2013-12-05 */
                    DISTINCT(l.userKey) AS userKey
                    , #{commonRequest.systemID} AS userID
                    , #{isMainDevice} AS isMainDevice
              FROM  (
                      SELECT  a.insd_usermbr_no AS userKey
                        FROM  tb_us_ousermbr a, tb_us_ousermbr_device b
                       WHERE  a.mbr_status_main_cd != 'US010202'
                              and a.insd_usermbr_no = b.insd_usermbr_no
               <foreach collection="keySearchList" item="keySearch"   open="AND" close="" separator="AND">
                   <if test="keySearch.keyType.equalsIgnoreCase('INSD_USERMBR_NO')">
                       a.insd_usermbr_no = #{keySearch.keyString}
                   </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('MBR_ID')">
                       a.mbr_id = #{keySearch.keyString}
                   </if>
               </foreach>
                ) l
    </select>

    <!-- 휴대기기 목록 조회(휴대기기 정보로 조회) -->
    <select id="searchDeviceList2D" parameterType="searchDeviceListRequest" resultMap="searchDeviceListResultMap">
            SELECT  /* DeviceMapper.searchDeviceList2D, 휴대기기 목록 조회(휴대기기 정보로 조회), 황정택/와이즈스톤, 2013-12-05 */
                      DISTINCT(l.userKey) AS userKey
                      , #{commonRequest.systemID} AS userID
                      , #{isMainDevice} AS isMainDevice
                      FROM ( SELECT  a.insd_usermbr_no AS userKey
                        FROM  tb_us_ousermbr a
                   LEFT JOIN  tb_us_ousermbr_device b
                          ON  a.insd_usermbr_no = b.insd_usermbr_no
                       WHERE  b.auth_yn = 'Y'
               <foreach collection="keySearchList" item="keySearch"   open="AND" close="" separator="AND">
                   <if test="keySearch.keyType.equalsIgnoreCase('DEVICE_ID')">
                       b.device_id = #{keySearch.keyString}
                   </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('INSD_DEVICE_ID')">
                       b.insd_device_id = #{keySearch.keyString}
                   </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('MDN')">
                       b.mdn = #{keySearch.keyString}
                   </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('SVC_MANG_NO')">
                       b.svc_mang_no = #{keySearch.keyString}
                   </if>
               </foreach>
                ORDER BY b.auth_dt DESC) l
                WHERE ROWNUM = 1
    </select>


    <!-- 휴대기기 목록 조회 맵 -->
    <resultMap id="searchDeviceListResultMap" type="searchDeviceListResponse" >
        <result property="userKey"            column="userKey"   />
        <result property="userID"             column="userID"   />

        <collection
            property="userMbrDevice"
            column="{userKey=userKey, isMainDevice=isMainDevice}"
            javaType="java.util.ArrayList"
            ofType="userMbrDevice"
            select="getDevice"/>
    </resultMap>


    <!-- 휴대기기 단건 조회 -->
    <select id="getDevice" resultMap="getDeviceResultMap">
            SELECT  /* DeviceMapper.xml, getDevice, SAC(SC), 윤보영, 2015-12-23 */
                      insd_usermbr_no
                    , insd_device_id
                    , device_id
                    , device_model_cd
                    , mno_cd
                    , mdn
                    , rep_device_yn
                    , TO_CHAR( auth_dt,'YYYYMMDDHH24MISS') AS auth_dt
                    , sms_recv_yn
                    , device_natv_id
                    , device_sim_nm
                    , entry_chnl_cd
                    , svc_mang_no
                    , TO_CHAR( upd_dt,'YYYYMMDDHH24MISS') AS upd_dt
                    , TO_CHAR( last_login_dt,'YYYYMMDDHH24MISS') AS last_login_dt
                    , device_acct
              FROM  tb_us_ousermbr_device
             WHERE  auth_yn = 'Y'
                AND insd_usermbr_no = #{userKey}
            <if test="isMainDevice != null and isMainDevice.equalsIgnoreCase('Y')">
               AND rep_device_yn = #{isMainDevice}
            </if>
            <if test="keyType != null and keyType.equals('INSD_DEVICE_ID')">
                AND insd_device_id = #{keyString}
            </if>
            <if test="keyType != null and keyType.equals('DEVICE_ID')">
                AND device_id = #{keyString}
            </if>
            <if test="keyType != null and keyType.equals('SVC_MANG_NO')">
                AND svc_mang_no = #{keyString}
            </if>
            <if test="keyType != null and keyType.equals('MDN')">
                AND mdn = #{keyString}
            </if>
    </select>

    <!-- 이전 휴대기기 단건 조회 -->
    <select id="getAllDevice" resultMap="getDeviceResultMap">
            SELECT  /* DeviceMapper.getAllDevice, 이전 휴대기기 단건 조회, 황정택/와이즈스톤, 2013-12-05 */
                    insd_usermbr_no
                    , insd_device_id
                    , device_id
                    , mdn
                    , device_model_cd
                    , mno_cd
                    , rep_device_yn
                    , TO_CHAR( auth_dt,'YYYYMMDDHH24MISS') AS auth_dt
                    , TO_CHAR( upd_dt,'YYYYMMDDHH24MISS') AS upd_dt
                    , sms_recv_yn
                    , device_natv_id
                    , device_acct
                    , svc_mang_no
                    , entry_chnl_cd
                    , auth_yn
                    , device_sim_nm
              FROM  tb_us_ousermbr_device
             WHERE  insd_usermbr_no = #{userKey}
                AND insd_device_id = #{deviceKey}
    </select>


    <!-- 휴대기기 단건 조회 맵 -->
    <resultMap id="getDeviceResultMap" type="userMbrDevice" >
        <result property="deviceKey"            column="insd_device_id"     jdbcType="VARCHAR"  />
        <result property="deviceID"             column="device_id"          jdbcType="VARCHAR"  />
        <result property="mdn"                  column="mdn"                jdbcType="VARCHAR"  />
        <result property="deviceModelNo"        column="device_model_cd"    jdbcType="VARCHAR"  />
        <result property="deviceTelecom"        column="mno_cd"             jdbcType="VARCHAR"  />
        <result property="isPrimary"            column="rep_device_yn"      jdbcType="VARCHAR"  />
        <result property="authenticationDate"   column="auth_dt"            jdbcType="DATE"     />
        <result property="updateDate"           column="upd_dt"             jdbcType="DATE"     />
        <result property="isRecvSMS"            column="sms_recv_yn"        jdbcType="VARCHAR"  />
        <result property="nativeID"             column="device_natv_id"     jdbcType="VARCHAR"  />
        <result property="deviceAccount"        column="device_acct"        jdbcType="VARCHAR"  />
        <result property="svcMangNum"           column="svc_mang_no"        jdbcType="VARCHAR"  />
        <result property="userKey"              column="insd_usermbr_no"    jdbcType="VARCHAR"  />
        <result property="joinId"               column="entry_chnl_cd"      jdbcType="VARCHAR"  />
        <result property="isUsed"               column="auth_yn"            jdbcType="VARCHAR"  />
        <result property="simSerialNo"          column="device_sim_nm"      jdbcType="VARCHAR"  />
        <collection
            property="userMbrDeviceDetail"
            column="{userKey=insd_usermbr_no, deviceKey=insd_device_id}"
            javaType="java.util.ArrayList"
            ofType="userMbrDeviceDetail"
            select="getExtraProfile"/>
    </resultMap>

    <!-- 휴대기기 부가정보 조회 -->
    <select id="getExtraProfile" resultType="userMbrDeviceDetail">
		SELECT  /* DeviceMapper.xml, getExtraProfile, SAC(SC), 김경복, 2015-05-27 */
		       device_mang_item_cd extraProfile,
		       reg_value extraProfileValue,
		       TO_CHAR (reg_dt +7, 'YYYYMMDDHH24MISS') AS regDatePlus7,
		       TO_CHAR (upd_dt +7, 'YYYYMMDDHH24MISS') AS updateDatePlue7,
		       TO_CHAR (SYSDATE, 'YYYYMMDDHH24MISS') AS nowDate
		  FROM tb_us_ousermbr_device_dtl
		 WHERE insd_usermbr_no = #{userKey}
			 AND insd_device_id = #{deviceKey}
    </select>

    <!-- 휴대기기 개별 조회 -->
    <select id="searchDevice" resultMap="searchDeviceResultMap">
        SELECT  /* DeviceMapper.xml, searchDevice, SAC(SC), 최진호, 2015-12-21 */
                #{userKey} AS userKey
             , (
                    SELECT  mbr_id
                      FROM  tb_us_ousermbr
                     WHERE  insd_usermbr_no = #{userKey}
                ) AS userID
             ,  'INSD_DEVICE_ID' AS keyType
             ,  u.insd_device_id AS keyString
          FROM
                (
                 SELECT  insd_device_id
                   FROM  tb_us_ousermbr_device
                  WHERE  insd_usermbr_no = #{userKey}
                    AND  auth_yn = 'Y'
               <foreach collection="keySearchList" item="keySearch"   open="" close="" separator="">
                   <if test="keySearch.keyType.equalsIgnoreCase('INSD_DEVICE_ID') ">AND insd_device_id =  #{keySearch.keyString} </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('DEVICE_ID') ">AND device_id =  #{keySearch.keyString} </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('MDN') ">AND mdn =  #{keySearch.keyString} </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('SVC_MANG_NO') ">AND svc_mang_no =  #{keySearch.keyString} </if>
               </foreach>
                ) u
    </select>

    <!-- 이전 휴대기기 개별 조회 -->
    <select id="searchAllDevice" resultMap="searchAllDeviceResultMap">
        SELECT  /* DeviceMapper.searchAllDevice, 이전 휴대기기 개별 조회, 황정택/와이즈스톤, 2013-12-05 */
                #{userKey} AS userKey
             , (
                    SELECT  mbr_id
                      FROM  tb_us_ousermbr
                     WHERE  insd_usermbr_no = #{userKey}
                ) AS userID
             ,  #{deviceKey} AS deviceKey
         FROM DUAL
    </select>

    <!-- 휴대기기 개별 조회(서비스 관리번호) -->
    <select id="searchDeviceSvcMangNo" resultMap="searchDeviceResultMap">
        SELECT  /* DeviceMapper.xml, searchDeviceSvcMangNo, SAC(SC), 최진호, 2015-12-21 */
                l.insd_usermbr_no AS userKey
                ,  l.mbr_id AS userID
                ,  'SVC_MANG_NO' AS keyType
                ,  l.svc_mang_no AS keyString
                FROM (
                 SELECT  b.insd_device_id AS insd_device_id
                      ,  a.mbr_id AS mbr_id
                      ,  a.insd_usermbr_no AS insd_usermbr_no
                      ,  b.svc_mang_no as svc_mang_no
                   FROM  tb_us_ousermbr_device b
                   		 JOIN tb_us_ousermbr a
                         ON b.insd_usermbr_no = a.insd_usermbr_no
                  WHERE  b.auth_yn = 'Y'
               <foreach collection="keySearchList" item="keySearch"   open="" close="" separator="">
                   <if test="keySearch.keyType.equalsIgnoreCase('SVC_MANG_NO') ">AND b.svc_mang_no =  #{keySearch.keyString} </if>
               </foreach>
                ORDER BY b.auth_dt DESC) l
                WHERE ROWNUM = 1
    </select>

     <!-- 휴대기기 개별 조회(Device ID only) -->
    <select id="searchDeviceIDOnly" resultMap="searchDeviceResultMap">
        SELECT  /* DeviceMapper.xml, searchDeviceIDOnly, SAC(SC), 최진호, 2015-12-21 */
                      l.insd_usermbr_no AS userKey
                      ,  l.mbr_id AS userID
                      ,  'INSD_DEVICE_ID' AS keyType
                      ,  l.insd_device_id AS keyString
                 FROM ( SELECT  b.insd_device_id AS insd_device_id
                      ,  a.mbr_id AS mbr_id
                      ,  a.insd_usermbr_no AS insd_usermbr_no
                      ,  b.device_id as device_id
                   FROM  tb_us_ousermbr a, tb_us_ousermbr_device b
                  WHERE  a.insd_usermbr_no = b.insd_usermbr_no
                    AND  b.auth_yn = 'Y'
               <foreach collection="keySearchList" item="keySearch"   open="" close="" separator="">
                   <if test="keySearch.keyType.equalsIgnoreCase('DEVICE_ID') "> AND  b.device_id =  #{keySearch.keyString} </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('MDN') "> AND  b.mdn =  #{keySearch.keyString} </if>
                   <if test="keySearch.keyType.equalsIgnoreCase('INSD_DEVICE_ID') "> AND  b.insd_device_id =  #{keySearch.keyString} </if>
               </foreach>
                ORDER BY b.auth_dt DESC) l
                WHERE ROWNUM = 1
    </select>


    <!-- 휴대기기 개별 조회 맵 -->
    <resultMap id="searchDeviceResultMap" type="searchDeviceResponse" >
        <result property="userKey"            column="userKey"   />
        <result property="userID"             column="userID"   />

        <!-- 휴대기기 단건 조회 -->
        <association
            property="userMbrDevice"
            column="{userKey=userKey, keyType=keyType, keyString=keyString}"
            javaType="userMbrDevice"
            select="getDevice"/>
    </resultMap>

    <!-- 이전 휴대기기 개별 조회 맵 -->
    <resultMap id="searchAllDeviceResultMap" type="searchAllDeviceResponse" >
        <result property="userKey"            column="userKey"   />
        <result property="deviceKey"          column="deviceKey"   />
        <result property="userID"             column="userID"   />

        <!-- 휴대기기 단건 조회 -->
        <association
            property="userMbrDevice"
            column="{userKey=userKey, deviceKey=deviceKey}"
            javaType="userMbrDevice"
            select="getAllDevice"/>
    </resultMap>

    <!-- 휴대기기 속성의 rep_device_yn = N -->
    <update id="unsetDeviceYn" parameterType="userMbrDevice">
        UPDATE /* Devicemapper.xml, unsetDeviceYn, SAC(SC), 최진호 2016-01-05 */
            TB_US_OUSERMBR_DEVICE
        SET
            REP_DEVICE_YN = 'N',
            START_DT = SYSDATE,
            UPD_DT = SYSDATE
        WHERE
            INSD_USERMBR_NO = #{userKey}
            <!-- AND DEVICE_ID = #{deviceID} -->
            AND INSD_DEVICE_ID  = #{deviceKey}
            AND AUTH_YN = 'Y'
    </update>

    <!-- 휴대기기 대표 설정 -->
    <update id="setMainDevice" parameterType="setMainDeviceRequest">
       UPDATE /* DeviceMapper.setMainDevice, 속성의 rep_device_yn = Y, 황정택/와이즈스톤, 2013-12-05 */
       tb_us_ousermbr_device
          SET rep_device_yn = 'Y'
        WHERE insd_usermbr_no = #{userKey}
          AND insd_device_id  = #{deviceKey}
          AND auth_yn = 'Y'
    </update>

    <!-- 휴대기기 삭제 -->
    <update id="removeDevice" parameterType="userMbrDevice">
       UPDATE /* DeviceMapper.xml, removeDevice, SAC(SC), 윤보영, 2015-12-20 */
       tb_us_ousermbr_device
          SET auth_yn = 'N',
              rep_device_yn = 'N',
              start_dt = SYSDATE,
              end_dt = SYSDATE,
              upd_dt = SYSDATE
        WHERE insd_usermbr_no = #{userKey}
          AND insd_device_id = #{deviceKey}
          AND auth_yn = 'Y'
    </update>

    <!-- 도토리 인증여부 초기화 -->
    <update id="removeDotori" parameterType="userMbrDeviceDetail">
       UPDATE /* DeviceMapper.removeDotori, 도토리 인증여부 초기화, 황정택/와이즈스톤, 2013-12-20 */
       tb_us_ousermbr_device_dtl
          SET reg_value = #{extraProfileValue}
            , upd_dt = SYSDATE
        WHERE insd_usermbr_no = #{userKey}
          AND insd_device_id = #{deviceKey}
          AND device_mang_item_cd = #{extraProfile}
    </update>

    <select id="isRegisteredUser" parameterType="CreateDeviceRequest" resultType="userMbrDevice">
        SELECT /* DeviceMapper.isRegisteredUser, 사용자 ID 조회, 황정택/와이즈스톤, 2013-12-23 */
               insd_usermbr_no AS userKey,
               insd_device_id AS deviceKey,
               rep_device_yn AS isPrimary,
               device_id AS deviceID,
               mdn,
               auth_yn AS isUsed
        FROM  tb_us_ousermbr_device
        WHERE mdn = #{userMbrDevice.mdn}
        ORDER BY auth_dt
    </select>

    <select id="isRegistered" parameterType="CreateDeviceRequest" resultType="String">
        SELECT /* DeviceMapper.isRegistered, 사용자 ID 조회, 황정택/와이즈스톤, 2013-12-23 */
               insd_device_id AS deviceKey
        FROM tb_us_ousermbr_device
        WHERE device_id = #{userMbrDevice.deviceID}
               AND auth_yn = 'Y'
               AND insd_usermbr_no = #{userKey}
    </select>

    <!-- 휴대기기 Key 조회(userKey, deviceKey로 조회) -->
    <select id="isRegisteredKey" parameterType="userMbrDevice" resultType="String">
        SELECT /* DeviceMapper.xml, isRegisteredKey, 휴대기기 Key 조회(userKey, deviceKey로 조회), 황정택/와이즈스톤, 2013-12-23 */
               insd_device_id AS deviceKey
        FROM tb_us_ousermbr_device
        WHERE insd_device_id = #{deviceKey}
               AND auth_yn = 'Y'
        <if test="userKey != null">AND insd_usermbr_no = #{userKey}</if>
    </select>

    <!-- 휴대기기 Key 조회(userKey, deviceKey로 조회), 사용 안함 (삭제 예정), 윤보영-->
    <select id="isRegisteredKeyAndID" parameterType="userMbrDevice" resultType="userMbrDevice">
        SELECT  /* DeviceMapper.isRegisteredKeyAndID, 휴대기기 Key 조회(userKey, deviceKey로 조회), 황정택/와이즈스톤, 2013-12-23 */
                    DISTINCT(l.nativeID) AS nativeID
                 ,  l.deviceKey AS deviceKey
                 ,  l.deviceID AS deviceID
            FROM (
                    SELECT  a.mbr_id AS nativeID
                         ,  b.insd_device_id AS deviceKey
                         ,  b.device_id AS deviceID
                      FROM  tb_us_ousermbr a
                 LEFT JOIN  tb_us_ousermbr_device b
                        ON  a.insd_usermbr_no = b.insd_usermbr_no
                     WHERE  b.insd_device_id = #{deviceKey}
                       AND  b.auth_yn = 'Y'
                <if test="userKey != null">AND b.insd_usermbr_no = #{userKey}</if>
                ) l
    </select>


    <!-- 서브상태가 변동처리대상인지 여부 확인 -->
    <select id="isSubCodeChangeManagement" parameterType="reviveUserRequest" resultType="userMbr">
       SELECT  /* DeviceMapper.isSubCodeChangeManagement, 서브상태가 변동처리대상인지 여부 확인, 황정택/와이즈스톤, 2014-03-11 */
               insd_usermbr_no AS userKey
               mbr_id AS userID
         FROM  tb_us_ousermbr
        WHERE  insd_usermbr_no = #{userKey}
          AND  mbr_status_sub_cd = 'US010314' /* 변동처리대상 */
    </select>


    <!-- Key에 사용할 시퀀스 조회(휴대기기) -->
    <select id="getUserSequence" resultType="Integer">
        SELECT /* DeviceMapper.getUserSequence, 시퀀스 조회, 황정택/와이즈스톤, 2013-12-23 */
               sq_us_ousermbr_device.NEXTVAL AS nextval
        FROM DUAL
    </select>

    <!-- 휴대기기 등록 -->
    <update id="createDevice" parameterType="userMbrDevice">
        INSERT /* DeviceMapper.createDevice, 휴대기기 등록, SAC(SC), 반범진, 2015-12-28 */
        INTO tb_us_ousermbr_device (
               insd_usermbr_no,
               insd_device_id,
               device_model_cd,
               start_dt,
               upd_dt,
               reg_dt,
               auth_dt,
               auth_yn,
               sms_recv_yn,
               rep_device_yn
               <if test="deviceID != null">,device_id </if>
               <if test="mdn != null">,mdn </if>
               <if test="deviceTelecom != null">,mno_cd </if>
               <if test="nativeID != null">,device_natv_id </if>
               <if test="svcMangNum != null">,svc_mang_no </if>
               <if test="joinId != null">,entry_chnl_cd </if>
               <if test="changeCaseCode != null">,chg_case_cd </if>
               <if test="simSerialNo != null">,device_sim_nm </if>
               <if test="deviceAccount != null">,device_acct </if>
        ) VALUES (
            #{userKey},
            #{deviceKey},
            #{deviceModelNo},
            SYSDATE,
            SYSDATE,
            SYSDATE,
            SYSDATE,
            'Y'
            <choose>
              <when test="isRecvSMS != null">,#{isRecvSMS}</when><otherwise>,'N'</otherwise>
            </choose>
            <choose>
                <when test="isPrimary != null">,#{isPrimary}</when><otherwise>,'N'</otherwise>
            </choose>
            <if test="deviceID != null">,#{deviceID} </if>
            <if test="mdn != null">,#{mdn} </if>
            <if test="deviceTelecom != null">,#{deviceTelecom} </if>
            <if test="nativeID != null">,#{nativeID} </if>
            <if test="svcMangNum != null">,#{svcMangNum} </if>
            <if test="joinId != null">,#{joinId} </if>
            <if test="changeCaseCode != null">,#{changeCaseCode} </if>
            <if test="simSerialNo != null">,#{simSerialNo} </if>
            <if test="deviceAccount != null">,#{deviceAccount} </if>
        )
    </update>

    <!-- 휴대기기 속성 등록/수정 -->
    <update id="updateDeviceDetail" parameterType="userMbrDeviceDetail">
        MERGE /* DeviceMapper.xml, updateDeviceDetail, SAC(SC), 김경복, 2015-05-27 */
        INTO tb_us_ousermbr_device_dtl l
        USING DUAL ON (
              l.insd_usermbr_no = #{userKey}    AND
              l.insd_device_id  = #{deviceKey}  AND
              l.device_mang_item_cd  = #{extraProfile}
        )
         WHEN MATCHED THEN
       UPDATE SET
              l.reg_value        = #{extraProfileValue},
              <if test="updateDate != null">
              l.upd_dt        = to_date(#{updateDate}, 'YYYYMMDDHH24MISS'),
              </if>
              <if test="updateDate == null">
              l.upd_dt        = SYSDATE,
              </if>
              l.system_id   = #{systemID}
              <if test="regID != null">, l.upd_id = #{regID}, l.reg_id = #{regID} </if>
         WHEN NOT MATCHED THEN
       INSERT (
              insd_usermbr_no,
              insd_device_id,
              device_mang_item_cd,
              reg_value,
              reg_dt,
              system_id
              <if test="regID != null">, reg_id, upd_id</if>
       ) VALUES (
              #{userKey},
              #{deviceKey},
              #{extraProfile},
              #{extraProfileValue},
              <if test="regDate != null">
              to_date(#{regDate}, 'YYYYMMDDHH24MISS'),
              </if>
              <if test="regDate == null">
              SYSDATE,
              </if>
              #{systemID}
              <if test="regID != null">, #{regID}, #{regID}</if>
       )
    </update>

    <!-- 휴대기기 수정 -->
    <update id="updateDevice" parameterType="userMbrDevice">
        UPDATE /* DeviceMapper.updateDevice, 휴대기기 등록, 황정택/와이즈스톤, 2013-12-23 */
        tb_us_ousermbr_device
               SET upd_dt = SYSDATE,
               start_dt = SYSDATE
               <if test="deviceTelecom != null">,mno_cd = #{deviceTelecom} </if>
               <if test="isPrimary != null">,rep_device_yn = #{isPrimary} </if>
               <if test="authenticationDate != null">,auth_dt = TO_DATE(#{authenticationDate},'YYYYMMDDHH24MISS') </if>
               <if test="isRecvSMS != null">,sms_recv_yn = #{isRecvSMS} </if>
               <if test="nativeID != null">,device_natv_id = #{nativeID} </if>
               <if test="deviceAccount != null">,device_acct = #{deviceAccount} </if>
               <if test="svcMangNum != null">,svc_mang_no = #{svcMangNum} </if>
               <if test="joinId != null">,entry_chnl_cd = #{joinId} </if>
               <if test="deviceID != null">,device_id = #{deviceID} </if>
               <if test="mdn != null">,mdn = #{mdn} </if>
               <if test="deviceModelNo != null">,device_model_cd = #{deviceModelNo} </if>
               <if test="simSerialNo != null">,device_sim_nm = #{simSerialNo}</if>
               <choose>
               <when test="changeCaseCode != null">,chg_case_cd = #{changeCaseCode} </when>
               <otherwise>,chg_case_cd = 'US012001' </otherwise>
               </choose>
        WHERE insd_usermbr_no = #{userKey}
          AND insd_device_id = #{deviceKey}
          AND auth_yn = 'Y'
    </update>

    <!-- 휴대기기 수정 -->
    <update id="updateDeviceCode" parameterType="userMbrDevice">
        UPDATE /* DeviceMapper.updateDeviceCode, 휴대기기 등록, 황정택/와이즈스톤, 2013-12-23 */
        tb_us_ousermbr_device
               SET upd_dt = SYSDATE,
               start_dt = SYSDATE,
               chg_case_cd = null
               <if test="deviceTelecom != null">,mno_cd = #{deviceTelecom} </if>
               <if test="isPrimary != null">,rep_device_yn = #{isPrimary} </if>
               <if test="authenticationDate != null">,auth_dt = TO_DATE(#{authenticationDate},'YYYYMMDDHH24MISS') </if>
               <if test="isRecvSMS != null">,sms_recv_yn = #{isRecvSMS} </if>
               <if test="nativeID != null">,device_natv_id = #{nativeID} </if>
               <if test="deviceAccount != null">,device_acct = #{deviceAccount} </if>
               <if test="svcMangNum != null">,svc_mang_no = #{svcMangNum} </if>
               <if test="joinId != null">,entry_chnl_cd = #{joinId} </if>
               <if test="deviceID != null">,device_id = #{deviceID} </if>
               <if test="mdn != null">,mdn = #{mdn} </if>
               <if test="deviceModelNo != null">,device_model_cd = #{deviceModelNo} </if>
               <if test="simSerialNo != null">,device_sim_nm = #{simSerialNo} </if>
        WHERE insd_usermbr_no = #{userKey}
          AND insd_device_id = #{deviceKey}
          AND auth_yn = 'Y'
    </update>

    <!-- 휴대기기 이력 테이블 insert -->
    <update id="insertUpdateDeviceHistory" parameterType="userMbrDevice">
        INSERT /* DeviceMapper.xml, insertUpdateDeviceHistory, SAC(SC), 윤보영, 2015-12-23 */
               INTO tb_us_ousermbr_device_his (
                   seq,
                   insd_usermbr_no,
                   insd_device_id,
                   start_dt,
                   end_dt,
                   device_id,
                   device_model_cd,
                   mno_cd,
                   mdn,
                   rep_device_yn,
                   auth_yn,
                   auth_dt,
                   upd_dt,
                   sms_recv_yn,
                   device_natv_id,
                   device_acct,
                   device_sim_nm,
                   entry_chnl_cd,
                   ins_dt,
                   svc_mang_no,
                   reg_dt,
                   chg_case_cd,
                   last_login_dt
               )
        SELECT sq_us_ousermbr_device_his.NEXTVAL AS seq,
              insd_usermbr_no,
              insd_device_id,
              start_dt,
              SYSDATE,                                                /* end_dt */
              device_id,
              device_model_cd,
              mno_cd,
              mdn,
              rep_device_yn,
              auth_yn,
              auth_dt,
              SYSDATE,                                                /* upd_dt */
              sms_recv_yn,
              device_natv_id,
              device_acct,
              device_sim_nm,
              entry_chnl_cd,
              SYSDATE,
              svc_mang_no,
              reg_dt,
              chg_case_cd,
              last_login_dt
         FROM tb_us_ousermbr_device
        WHERE insd_usermbr_no = #{userKey}
          AND insd_device_id = #{deviceKey}
    </update>

    <!-- 휴대기기 이력 테이블 insert -->
    <update id="insertUpdateDeviceHistoryCode" parameterType="userMbrDevice">
        INSERT /* DeviceMapper.insertUpdateDeviceHistoryCode, device 변경 히스토리 추가, 황정택/와이즈스톤, 2014-01-15 */
            INTO tb_us_ousermbr_device_his (
            seq,
            insd_usermbr_no,
            insd_device_id,
            start_dt,
            end_dt,
            device_id,
            device_model_cd,
            mno_cd,
            mdn,
            rep_device_yn,
            auth_yn,
            auth_dt,
            upd_dt,
            sms_recv_yn,
            device_natv_id,
            device_acct,
            device_sim_nm,
            entry_chnl_cd,
            ins_dt,
            svc_mang_no,
            reg_dt,
            chg_case_cd,
            last_login_dt
        )
        SELECT sq_us_ousermbr_device_his.NEXTVAL AS seq,
            insd_usermbr_no,
            insd_device_id,
            start_dt,
            SYSDATE,                                                /* end_dt */
            device_id,
            device_model_cd,
            mno_cd,
            mdn,
            rep_device_yn,
            auth_yn,
            auth_dt,
            SYSDATE,                                                /* upd_dt */
            sms_recv_yn,
            device_natv_id,
            device_acct,
            device_sim_nm,
            entry_chnl_cd,
            SYSDATE,
            svc_mang_no,
            reg_dt,
            #{changeCaseCode},
            last_login_dt
        FROM tb_us_ousermbr_device
        WHERE insd_usermbr_no = #{userKey}
          <if test="deviceKey != null"> AND insd_device_id = #{deviceKey}</if>
    </update>

    <select id="retrieveUserInfo" parameterType="CreateDeviceRequest" resultType="userMbr">
        SELECT /* DeviceMapper.retrieveUserInfo, 사용자 정보 조회, 황정택/와이즈스톤, 2013-12-23 */
                insd_usermbr_no         userKey,
                mbr_clas_cd             userType,
                mbr_status_main_cd      userMainStatus,
                mbr_status_sub_cd       userSubStatus,
                mbr_id                  userID
           FROM tb_us_ousermbr
          WHERE insd_usermbr_no = #{userKey}
          AND mbr_status_main_cd != 'US010202'
    </select>

    <select id="findMainDevice" parameterType="UserMbr" resultType="userMbrDevice">
        SELECT /* DeviceMapper.findMainDevice, 대표기기 조회, 황정택/와이즈스톤, 2013-12-23 */
               insd_device_id AS deviceKey,
               device_id AS deviceID,
               insd_usermbr_no AS userKey,
               mdn
          FROM tb_us_ousermbr_device
         WHERE rep_device_yn = 'Y'
           AND auth_yn = 'Y'
           AND insd_usermbr_no = #{userKey}
    </select>

    <!-- 휴대기기 보유 카운트 증가, schema 변경으로 삭제 처리  -->
    <!--<update id="updateCountPlus" parameterType="CreateDeviceRequest">
       UPDATE /* DeviceMapper.updateCountPlus,  휴대기기 보유 카운트 증가, 황정택/와이즈스톤, 2013-12-26 */
       tb_us_ousermbr
          SET device_reg_cnt = device_reg_cnt+1,
              upd_dt = SYSDATE
       WHERE insd_usermbr_no = #{userKey}
    </update>-->

    <!-- 휴대기기 보유 카운트 감소, schema 변경으로 삭제 처리  -->
    <!--<update id="updateCountMinus" parameterType="userMbrDevice">
       UPDATE /* DeviceMapper.updateCountMinus,  휴대기기 보유 카운트 감소, 황정택/와이즈스톤, 2013-12-26 */
       tb_us_ousermbr
          SET device_reg_cnt = device_reg_cnt-1,
              upd_dt = SYSDATE
       WHERE insd_usermbr_no = #{userKey}
    </update>-->

    <!-- 휴대기기 보유 카운트 업데이트, schema 변경으로 삭제 처리  -->
    <!--<update id="updateCountDevice" parameterType="CreateDeviceRequest">
       UPDATE /* DeviceMapper.updateCountDevice,  휴대기기 보유 카운트 증가, 황정택/와이즈스톤, 2013-12-26 */
       tb_us_ousermbr
          SET device_reg_cnt = (SELECT COUNT(*)
                                FROM tb_us_ousermbr_device
                                WHERE insd_usermbr_no = #{userKey}
                                      AND auth_yn = 'Y'),
              upd_dt = SYSDATE
       WHERE insd_usermbr_no = #{userKey}
    </update>-->

    <!-- 휴대기기 보유 카운트 업데이트, schema 변경으로 삭제 처리 -->
    <!--<update id="updateCountDevice2" parameterType="userMbrDevice">-->
       <!--UPDATE /* DeviceMapper.updateCountDevice2,  휴대기기 보유 카운트 증가, 황정택/와이즈스톤, 2013-12-26 */-->
       <!--tb_us_ousermbr-->
          <!--SET device_reg_cnt = (SELECT COUNT(*)-->
                                <!--FROM tb_us_ousermbr_device -->
                                <!--WHERE insd_usermbr_no = #{userKey} -->
                                      <!--AND auth_yn = 'Y'),-->
              <!--upd_dt = SYSDATE-->
       <!--WHERE insd_usermbr_no = #{userKey}-->
    <!--</update>-->

    <!-- 휴대기기 속성의 auth_yn = N -->
    <update id="doCancelDevice" parameterType="userMbrDevice">
       UPDATE /* DeviceMapper.doCancelDevice, 속성의 auth_yn = N, 황정택/와이즈스톤, 2013-12-05 */
       tb_us_ousermbr_device
          SET auth_yn = 'N',
              <!-- start_dt = SYSDATE, 빼기로 함. 매니저 요청사항 -->
              <!-- end_dt = TO_DATE('29991231235959', 'YYYYMMDDHH24MISS'), 빼기로 함. 매니저 요청사항 -->
              end_dt = SYSDATE,
              upd_dt = SYSDATE
        WHERE insd_usermbr_no = #{userKey}
          AND device_id = #{deviceID}
    </update>

    <!-- 휴대기기 속성의 rep_device_yn = Y -->
    <update id="doActivateDevice" parameterType="userMbrDevice">
       UPDATE /* DeviceMapper.doActivateDevice, 속성의 rep_device_yn = N, 황정택/와이즈스톤, 2013-12-05 */
       tb_us_ousermbr_device
          SET auth_yn = 'Y',
          	  auth_dt = SYSDATE,
              start_dt = SYSDATE,
              end_dt = TO_DATE('29991231235959', 'YYYYMMDDHH24MISS'),
              upd_dt = SYSDATE
              <if test="isPrimary != null">,rep_device_yn = #{isPrimary} </if>
              <if test="deviceTelecom != null">,mno_cd = #{deviceTelecom} </if>
               <if test="isRecvSMS != null">,sms_recv_yn = #{isRecvSMS} </if>
               <if test="nativeID != null">,device_natv_id = #{nativeID} </if>
               <if test="deviceAccount != null">,device_acct = #{deviceAccount} </if>
               <if test="svcMangNum != null">,svc_mang_no = #{svcMangNum} </if>
               <if test="joinId != null">,entry_chnl_cd = #{joinId} </if>
               <if test="deviceModelNo != null">,device_model_cd = #{deviceModelNo} </if>
               <if test="mdn != null">,mdn = #{mdn} </if>
               <if test="simSerialNo != null">,device_sim_nm = #{simSerialNo} </if>
               <if test="deviceID != null">,device_id = #{deviceID} </if>
        WHERE insd_usermbr_no = #{userKey}
          AND insd_device_id = #{deviceKey}
    </update>

    <!-- 사용자 탈퇴 -->
    <update id="removeOwner" parameterType="userMbr">
       UPDATE /* DeviceMapper.removeOwner, 사용자 탈퇴, 황정택/와이즈스톤, 2013-12-23 */
       tb_us_ousermbr
         SET  bolter_case_cd = #{secedeTypeCode},
              mbr_status_main_cd = #{userMainStatus},
              mbr_status_sub_cd = #{userSubStatus},
              bolter_day = #{secedeDate},
              start_dt = SYSDATE,
              end_dt = SYSDATE,
              upd_dt = SYSDATE
       WHERE  insd_usermbr_no = #{userKey}
    </update>

    <!-- 변환추적 등록 -->
    <!-- 암호화 적용(device_id:enc_device_id) 변경, 2014-09-17 -->
    <insert id="insertUserkeyTrack" parameterType="userkeyTrack">
        INSERT  /* DeviceMapper.insertUserkeyTrack, 변환추적 등록, 황정택/와이즈스톤, 2014-01-28 */
                INTO tb_us_ousermbr_idmbr_trfm_chas (
                seq
                ,pre_insd_usermbr_no
                ,after_insd_usermbr_no
                ,reg_dt
                ,reg_id
        ) VALUES (
                sq_us_ousermbr_idmbr_trfm_chas.NEXTVAL
                ,#{preUserKey}
                ,#{afterUserKey}
                ,SYSDATE
	            ,#{regID}
        )
    </insert>

    <select id="searchDeviceOrderLastLoginDt" parameterType="userMbrDevice" resultType="userMbrDevice">
        SELECT /* DeviceMapper.searchDeviceOrderLastLoginDt, 최근에 수정된 휴대기기 정보 조회, SAC(SC), 반범진, 2016-01-08 */
            insd_usermbr_no as userKey,
            insd_device_id as deviceKey
        FROM
          (
          SELECT insd_usermbr_no, insd_device_id
              FROM tb_us_ousermbr_device
             WHERE auth_yn = 'Y'
               AND insd_usermbr_no = #{userKey}
            ORDER BY last_login_dt DESC, upd_dt desc
          )
          WHERE ROWNUM = 1
    </select>

    <!-- 최신등록기기 대표기기 설정 -->
    <update id="updatePrimary" parameterType="userMbrDevice">
       UPDATE /* DeviceMapper.updatePrimary, 최신등록기기 대표기기 설정, 황정택/와이즈스톤, 2014-02-03 */
       tb_us_ousermbr_device
          SET   rep_device_yn = 'Y'
          WHERE insd_usermbr_no = #{userKey}
            AND insd_device_id =
          (
          SELECT l.insd_device_id FROM
              (
              SELECT insd_device_id
                  FROM tb_us_ousermbr_device
                 WHERE auth_yn = 'Y'
                   AND insd_usermbr_no = #{userKey}
              ORDER BY start_dt DESC
              ) l
          WHERE ROWNUM = 1
          )
    </update>

    <!-- savensync 조회 -->
    <select id="checkSaveNSync" parameterType="checkSaveNSyncRequest" resultType="checkSaveNSyncResponse">
        SELECT /* DeviceMapper.checkSaveNSync, savensync 조회,wisestone_mikepark, 2014-03-10 */
               insd_device_id AS deviceKey,
               device_id AS deviceID,
               pre_mdn AS preDeviceID,
               insd_usermbr_no AS userKey,
               chg_case_cd AS code,
               upd_dt,
               mbr_status_main_cd AS isActive,
               mbr_status_sub_cd AS userSubStatus
          FROM (SELECT
               t1.insd_device_id,
               t1.device_id,
               t1.pre_mdn,
               t1.insd_usermbr_no,
               t1.chg_case_cd,
               t1.upd_dt,
               t2.mbr_status_main_cd,
               t2.mbr_status_sub_cd
          FROM tb_us_ousermbr_device_his t1
          JOIN tb_us_ousermbr t2
           ON t1.insd_usermbr_no=t2.insd_usermbr_no
           WHERE t1.pre_mdn = #{deviceID}
           AND t1.auth_yn = 'Y'
           AND t1.upd_dt > (SYSDATE-15)
           AND t1.chg_case_cd in ('US012003', 'US012012')
           AND t2.mbr_clas_cd = 'US011501'
         ORDER BY t1.upd_dt DESC
           ) l
         WHERE ROWNUM = 1
    </select>

    <!-- savensync 조회 -->
    <select id="checkRealSaveNSync" parameterType="checkSaveNSyncRequest" resultType="checkSaveNSyncResponse">
        SELECT
		/* DeviceMapper.checkRealSaveNSync, savensync 조회,wisestone_mikepark, 2014-03-10 */
		               deviceKey,
		               deviceID,
		               preDeviceID,
		               userKey,
		               changeCaseCode,
		               svcMangNo,
		               upd_dt,
		               isActive,
		               userSubStatus
		FROM
		    (
		    SELECT
		            t1.insd_device_id AS deviceKey,
		            t1.device_id AS deviceID,
		            t1.pre_mdn AS preDeviceID,
		            t1.insd_usermbr_no AS userKey,
		            t1.chg_case_cd AS changeCaseCode,
		            t1.svc_mang_no AS svcMangNo,
		            t1.upd_dt,
		            t2.mbr_status_main_cd AS isActive,
		            t2.mbr_status_sub_cd AS userSubStatus
		    FROM spmbr.tb_us_ousermbr_device_his t1
		        JOIN spmbr.tb_us_ousermbr t2 ON t1.insd_usermbr_no=t2.insd_usermbr_no
		    WHERE t1.pre_mdn = #{deviceID}
		        AND t1.upd_dt > (SYSDATE-15)
		        AND t2.mbr_clas_cd = 'US011501'
		    ORDER BY UPD_DT DESC
		    ) L
		WHERE ROWNUM=1
    </select>


    <!-- 휴대기기의 소유자이력을 조회 -->
    <select id="searchDeviceOwner" parameterType="searchDeviceOwnerRequest" resultType="searchDeviceOwnerResponse">
		SELECT /* DeviceMapper.searchDeviceOwner, 휴대기기의 소유자이력을 조회, wisestone_mikepark, 2014-06-24 */
		      userKey AS userKey,
		       deviceKey AS deviceKey,
		       auth_dt AS authenticationDate,
		       isUsed AS isUsed,
		       srcName AS tableName
		  FROM (  SELECT *
		            FROM (SELECT insd_usermbr_no AS userKey,
		                         insd_device_id AS deviceKey,
		                         auth_dt AS auth_dt,
		                         AUTH_YN AS isUsed,
		                         'TB_US_OUSERMBR_DEVICE' AS srcName,
		                         start_dt
		                    FROM tb_us_ousermbr_device
		                   WHERE <!-- device_id = #{deviceID} -->
		                         mdn = #{mdn}
		                         AND TO_DATE (#{regDate}, 'YYYYMMDDHH24MISS') BETWEEN start_dt
		                                                                        AND end_dt
                    <if test="isDormant.equalsIgnoreCase('N')">
		                  UNION ALL
		                  SELECT insd_usermbr_no AS userKey,
		                         insd_device_id AS deviceKey,
		                         auth_dt AS auth_dt,
		                         AUTH_YN AS isUsed,
		                         'TB_US_OUSERMBR_DEVICE' AS srcName,
		                         start_dt
		                    FROM tb_us_ousermbr_device_his
		                   WHERE <!-- device_id = #{deviceID} -->
                                 mdn = #{mdn}
		                         AND TO_DATE (#{regDate}, 'YYYYMMDDHH24MISS') BETWEEN start_dt
                                                                                AND end_dt
                    </if>
		                  UNION ALL
		                  SELECT insd_usermbr_no AS userKey,
		                         insd_device_id AS deviceKey,
		                         auth_dt AS auth_dt,
		                         AUTH_YN AS isUsed,
		                         'TB_US_OUSERMBR_DEVICE_WD' AS srcName,
		                         start_dt
		                    FROM tb_us_ousermbr_device_wd
		                   WHERE <!-- device_id = #{deviceID} -->
                                 mdn = #{mdn}
		                         AND TO_DATE (#{regDate}, 'YYYYMMDDHH24MISS') BETWEEN start_dt
                                                                                AND end_dt)
		        ORDER BY DECODE (isUsed, 'Y', '1', '2'), start_dt DESC)
		 WHERE ROWNUM = 1
    </select>

    <!-- 휴대기기의 소유자이력을 조회 -->
    <select id="searchDeviceOwnerHis" parameterType="searchDeviceOwnerRequest" resultType="searchDeviceOwnerResponse">
        SELECT /* DeviceMapper.searchDeviceOwnerHis, 휴대기기의 소유자이력을 조회, wisestone_mikepark, 2014-06-24 */
               userKey AS userKey,
               deviceKey AS deviceKey,
               auth_dt AS authenticationDate
        FROM (
        SELECT insd_usermbr_no AS userKey,
               insd_device_id AS deviceKey,
               TO_CHAR( auth_dt,'YYYYMMDDHH24MISS') AS auth_dt
        FROM  tb_us_ousermbr_device_his
        WHERE <!-- device_id = #{deviceID} -->
              mdn = #{mdn}
          AND auth_yn = 'Y'
          AND start_dt <![CDATA[<=]]> TO_DATE(#{regDate},'YYYYMMDDHH24MISS')
          AND end_dt <![CDATA[>=]]> TO_DATE(#{regDate},'YYYYMMDDHH24MISS')
        ORDER BY auth_dt DESC)
        WHERE ROWNUM = 1
    </select>

    <!-- LocalSCI : 등록된 단말 정보 조회 -->
    <select id="searchOrderDevice" parameterType="searchOrderDeviceRequest" resultType="searchOrderDeviceResponse">
		SELECT /* DeviceMapper.xml, searchOrderDevice, SAC(SC), 윤보영, 2016-01-27 */
		       deviceId,
		       mdn,
		       deviceTelecom,
		       authYn,
		       tableName
		  FROM (SELECT device_id AS deviceId,
		               mdn AS mdn,
		               mno_cd AS deviceTelecom,
		               auth_yn AS authYn,
		               'TB_US_OUSERMBR_DEVICE' AS tableName
		          FROM tb_us_ousermbr_device
		         WHERE insd_usermbr_no = #{userKey}
		         AND insd_device_id  = #{deviceKey}
		        UNION ALL
		        SELECT device_id AS deviceId,
		               mdn AS mdn,
		               mno_cd AS deviceTelecom,
		               auth_yn AS authYn,
		               'TB_US_OUSERMBR_DEVICE_WD' AS srcName
		          FROM tb_us_ousermbr_device_wd
		         WHERE insd_usermbr_no = #{userKey}
		         AND insd_device_id  = #{deviceKey}
		         )
    </select>

    <delete id="removeDeviceExtraProfile" parameterType="userMbrDeviceDetail">
        DELETE  /* DeviceMapper.xml, removeDeviceExtraProfile, SAC(SC), 반범진, 2015-11-24 */
          FROM tb_us_ousermbr_device_dtl
         WHERE insd_usermbr_no = #{userKey}
             AND insd_device_id = #{deviceKey}
    </delete>

    <!-- onebrand 추가 쿼리 -->

    <!-- 모바일 회원 휴대기기 정보 조회 -->
    <select id="searchDeviceMobileUser" parameterType="searchDeviceRequest" resultMap="searchDeviceResultMap">
        SELECT /* DeviceMapper.xml, searchDeviceMobileUser, SAC(SC), 반범진, 2016-01-21 */
                a.mbr_id AS userId,
                a.insd_usermbr_no AS userKey,
                'INSD_DEVICE_ID' AS keyType,
                b.insd_device_id AS keyString
        FROM TB_US_OUSERMBR a, TB_US_OUSERMBR_DEVICE b
        WHERE a.insd_usermbr_no = b.insd_usermbr_no
              AND a.mbr_status_main_cd != 'US010202'
              AND a.mbr_clas_cd = 'US011501'
              AND b.auth_yn = 'Y'
        <foreach collection="keySearchList" item="keySearch" open="AND" close="" separator="AND">
            <if test="keySearch.keyType.equalsIgnoreCase('AUTHORIZE_DEVICE_ID')">
                b.device_id = #{keySearch.keyString}
            </if>
            <if test="keySearch.keyType.equalsIgnoreCase('AUTHORIZE_SVC_MANG_NO')">
                b.svc_mang_no = #{keySearch.keyString}
            </if>
            <if test="keySearch.keyType.equalsIgnoreCase('AUTHORIZE_MDN')">
                b.mdn = #{keySearch.keyString}
            </if>
        </foreach>
    </select>

    <select id="searchDeviceList3" parameterType="searchDeviceListRequest" resultType="userMbrDevice">
        SELECT /* DeviceMapper.xml, searchDeviceList3, SAC(SC), 반범진, 2016-01-04 */
        a.insd_usermbr_no as userKey,
        a.mbr_id as userId,
        b.insd_device_id as deviceKey,
        b.device_id as deviceId,
        b.mdn as mdn,
        b.svc_mang_no as svcMangNum,
        b.mno_cd as deviceTelecom,
        b.device_model_cd as deviceModelNo,
        b.auth_yn as isUsed,
        b.sms_recv_yn as isRecvSMS,
        b.device_natv_id as nativeID,
        b.device_sim_nm as simSerialNo,
        b.device_acct as deviceAccount,
        b.rep_device_yn as isPrimary,
        TO_CHAR (b.last_login_dt, 'YYYYMMDDHH24MISS') as lastLoginDt
        FROM TB_US_OUSERMBR a
        INNER JOIN TB_US_OUSERMBR_DEVICE b ON a.insd_usermbr_no = b.insd_usermbr_no
        WHERE a.mbr_status_main_cd != 'US010202'
        <if test="isUsed.equalsIgnoreCase('Y')">
            AND b.auth_yn = 'Y'
        </if>
        <foreach collection="keySearchList" item="keySearch"   open="AND" close="" separator="AND">
            <if test="keySearch.keyType.equalsIgnoreCase('DEVICE_ID')">
                b.device_id = #{keySearch.keyString}
                <choose>
                    <when test="isMine.equalsIgnoreCase('Y')">
                        AND b.insd_usermbr_no = #{userKey}
                    </when>
                    <otherwise>
                        AND b.insd_usermbr_no != #{userKey}
                    </otherwise>
                </choose>
            </if>
            <if test="keySearch.keyType.equalsIgnoreCase('MDN')">
                b.mdn = #{keySearch.keyString}
                <choose>
                    <when test="isMine.equalsIgnoreCase('Y')">
                        AND b.insd_usermbr_no = #{userKey}
                    </when>
                    <otherwise>
                        <choose>
                            <when test="deviceKey != null">AND (b.insd_usermbr_no != #{userKey} or b.insd_device_id != #{deviceKey})</when>
                            <otherwise>AND b.insd_usermbr_no != #{userKey}</otherwise>
                        </choose>
                    </otherwise>
                </choose>
            </if>
            <if test="keySearch.keyType.equalsIgnoreCase('SVC_MANG_NO')">
                b.svc_mang_no = #{keySearch.keyString}
                <choose>
                    <when test="isMine.equalsIgnoreCase('Y')">
                        AND b.insd_usermbr_no = #{userKey}
                    </when>
                    <otherwise>
                        <choose>
                            <when test="deviceKey != null">AND (b.insd_usermbr_no != #{userKey} or b.insd_device_id != #{deviceKey})</when>
                            <otherwise>AND b.insd_usermbr_no != #{userKey}</otherwise>
                        </choose>
                    </otherwise>
                </choose>
            </if>
        </foreach>
    </select>

    <!-- 휴대기기 부가정보 조회 -->
    <select id="getExtraProfile2" parameterType="userMbrDeviceDetail" resultType="userMbrDeviceDetail">
        SELECT  /* DeviceMapper.xml, getExtraProfile, SAC(SC), 반범진, 2016-01-04 */
            device_mang_item_cd extraProfile,
            reg_value extraProfileValue
        FROM tb_us_ousermbr_device_dtl
        WHERE insd_usermbr_no = #{userKey}
        AND insd_device_id = #{deviceKey}
    </select>

    <!-- 등록된 휴대기기 보유 카운트 조회-->
    <select id="searchValidDeviceCount" parameterType="userMbr" resultType="int">
        SELECT COUNT(*) AS deviceCount
          FROM tb_us_ousermbr_device
         WHERE insd_usermbr_no = #{userKey}
           AND auth_yn ='Y'
    </select>

    <!-- 휴대기기 마지막 로그인일자 업데이트-->
    <update id="updateLastLoginDt" parameterType="userMbrLoginLog">
        UPDATE /* DeviceMapper.xml, updateLastLoginDt, SAC(SC), 반범진, 2016-01-11 */
        tb_us_ousermbr_device
        SET last_login_dt = sysdate
        WHERE insd_device_id = #{deviceKey}
    </update>

    <!-- Save & Sync 휴대기기 수정 -->
    <update id="modifySaveNSyncDevice" parameterType="userMbrDevice">
        UPDATE /* DeviceMapper.xml, modifySaveNSyncDevice, SAC(S), 최진호, 2016-01-22 */
            TB_US_OUSERMBR_DEVICE
        SET
            UPD_DT = SYSDATE
            ,START_DT = SYSDATE
            <choose>
                <when test="deviceID != null">,DEVICE_ID = #{deviceID} </when>
                <otherwise>,DEVICE_ID = null </otherwise>
            </choose>
            <if test="mdn != null">,MDN = #{mdn} </if>
            <if test="deviceModelNo != null">,DEVICE_MODEL_CD = #{deviceModelNo} </if>
            <if test="deviceAccount != null">,DEVICE_ACCT = #{deviceAccount} </if>
            <if test="nativeID != null">,DEVICE_NATV_ID = #{nativeID} </if>
            <if test="svcMangNum != null">,SVC_MANG_NO = #{svcMangNum} </if>
            <choose>
                <when test="changeCaseCode != null">,CHG_CASE_CD = #{changeCaseCode} </when>
                <otherwise>,CHG_CASE_CD = 'US012001' </otherwise>
            </choose>
        WHERE
            INSD_USERMBR_NO = #{userKey}
            AND INSD_DEVICE_ID = #{deviceKey}
            AND AUTH_YN = 'Y'
    </update>

</mapper>
